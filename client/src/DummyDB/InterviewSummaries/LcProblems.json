{
    "two-sum": {
        "quesName": "Two Sum",
        "quesLink": "https://leetcode.com/problems/two-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "add-two-numbers": {
        "quesName": "Add Two Numbers",
        "quesLink": "https://leetcode.com/problems/add-two-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Math",
            "Recursion"
        ]
    },
    "longest-substring-without-repeating-characters": {
        "quesName": "Longest Substring Without Repeating Characters",
        "quesLink": "https://leetcode.com/problems/longest-substring-without-repeating-characters/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ]
    },
    "median-of-two-sorted-arrays": {
        "quesName": "Median of Two Sorted Arrays",
        "quesLink": "https://leetcode.com/problems/median-of-two-sorted-arrays/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer"
        ]
    },
    "longest-palindromic-substring": {
        "quesName": "Longest Palindromic Substring",
        "quesLink": "https://leetcode.com/problems/longest-palindromic-substring/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "zigzag-conversion": {
        "quesName": "Zigzag Conversion",
        "quesLink": "https://leetcode.com/problems/zigzag-conversion/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "reverse-integer": {
        "quesName": "Reverse Integer",
        "quesLink": "https://leetcode.com/problems/reverse-integer/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "string-to-integer-atoi": {
        "quesName": "String to Integer (atoi)",
        "quesLink": "https://leetcode.com/problems/string-to-integer-atoi/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "palindrome-number": {
        "quesName": "Palindrome Number",
        "quesLink": "https://leetcode.com/problems/palindrome-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "regular-expression-matching": {
        "quesName": "Regular Expression Matching",
        "quesLink": "https://leetcode.com/problems/regular-expression-matching/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Recursion"
        ]
    },
    "container-with-most-water": {
        "quesName": "Container With Most Water",
        "quesLink": "https://leetcode.com/problems/container-with-most-water/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy"
        ]
    },
    "integer-to-roman": {
        "quesName": "Integer to Roman",
        "quesLink": "https://leetcode.com/problems/integer-to-roman/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "String"
        ]
    },
    "roman-to-integer": {
        "quesName": "Roman to Integer",
        "quesLink": "https://leetcode.com/problems/roman-to-integer/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "String"
        ]
    },
    "longest-common-prefix": {
        "quesName": "Longest Common Prefix",
        "quesLink": "https://leetcode.com/problems/longest-common-prefix/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Trie"
        ]
    },
    "3sum": {
        "quesName": "3Sum",
        "quesLink": "https://leetcode.com/problems/3sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ]
    },
    "3sum-closest": {
        "quesName": "3Sum Closest",
        "quesLink": "https://leetcode.com/problems/3sum-closest/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ]
    },
    "letter-combinations-of-a-phone-number": {
        "quesName": "Letter Combinations of a Phone Number",
        "quesLink": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Backtracking"
        ]
    },
    "4sum": {
        "quesName": "4Sum",
        "quesLink": "https://leetcode.com/problems/4sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ]
    },
    "remove-nth-node-from-end-of-list": {
        "quesName": "Remove Nth Node From End of List",
        "quesLink": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Two Pointers"
        ]
    },
    "valid-parentheses": {
        "quesName": "Valid Parentheses",
        "quesLink": "https://leetcode.com/problems/valid-parentheses/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "merge-two-sorted-lists": {
        "quesName": "Merge Two Sorted Lists",
        "quesLink": "https://leetcode.com/problems/merge-two-sorted-lists/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Recursion"
        ]
    },
    "generate-parentheses": {
        "quesName": "Generate Parentheses",
        "quesLink": "https://leetcode.com/problems/generate-parentheses/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Backtracking"
        ]
    },
    "merge-k-sorted-lists": {
        "quesName": "Merge k Sorted Lists",
        "quesLink": "https://leetcode.com/problems/merge-k-sorted-lists/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Divide and Conquer",
            "Heap (Priority Queue)",
            "Merge Sort"
        ]
    },
    "swap-nodes-in-pairs": {
        "quesName": "Swap Nodes in Pairs",
        "quesLink": "https://leetcode.com/problems/swap-nodes-in-pairs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Recursion"
        ]
    },
    "reverse-nodes-in-k-group": {
        "quesName": "Reverse Nodes in k-Group",
        "quesLink": "https://leetcode.com/problems/reverse-nodes-in-k-group/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Recursion"
        ]
    },
    "remove-duplicates-from-sorted-array": {
        "quesName": "Remove Duplicates from Sorted Array",
        "quesLink": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers"
        ]
    },
    "remove-element": {
        "quesName": "Remove Element",
        "quesLink": "https://leetcode.com/problems/remove-element/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers"
        ]
    },
    "find-the-index-of-the-first-occurrence-in-a-string": {
        "quesName": "Find the Index of the First Occurrence in a String",
        "quesLink": "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "String Matching"
        ]
    },
    "divide-two-integers": {
        "quesName": "Divide Two Integers",
        "quesLink": "https://leetcode.com/problems/divide-two-integers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Bit Manipulation"
        ]
    },
    "substring-with-concatenation-of-all-words": {
        "quesName": "Substring with Concatenation of All Words",
        "quesLink": "https://leetcode.com/problems/substring-with-concatenation-of-all-words/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ]
    },
    "next-permutation": {
        "quesName": "Next Permutation",
        "quesLink": "https://leetcode.com/problems/next-permutation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers"
        ]
    },
    "longest-valid-parentheses": {
        "quesName": "Longest Valid Parentheses",
        "quesLink": "https://leetcode.com/problems/longest-valid-parentheses/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Stack"
        ]
    },
    "search-in-rotated-sorted-array": {
        "quesName": "Search in Rotated Sorted Array",
        "quesLink": "https://leetcode.com/problems/search-in-rotated-sorted-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "find-first-and-last-position-of-element-in-sorted-array": {
        "quesName": "Find First and Last Position of Element in Sorted Array",
        "quesLink": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "search-insert-position": {
        "quesName": "Search Insert Position",
        "quesLink": "https://leetcode.com/problems/search-insert-position/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "valid-sudoku": {
        "quesName": "Valid Sudoku",
        "quesLink": "https://leetcode.com/problems/valid-sudoku/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix"
        ]
    },
    "sudoku-solver": {
        "quesName": "Sudoku Solver",
        "quesLink": "https://leetcode.com/problems/sudoku-solver/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Backtracking",
            "Matrix"
        ]
    },
    "count-and-say": {
        "quesName": "Count and Say",
        "quesLink": "https://leetcode.com/problems/count-and-say/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "combination-sum": {
        "quesName": "Combination Sum",
        "quesLink": "https://leetcode.com/problems/combination-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking"
        ]
    },
    "combination-sum-ii": {
        "quesName": "Combination Sum II",
        "quesLink": "https://leetcode.com/problems/combination-sum-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking"
        ]
    },
    "first-missing-positive": {
        "quesName": "First Missing Positive",
        "quesLink": "https://leetcode.com/problems/first-missing-positive/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "trapping-rain-water": {
        "quesName": "Trapping Rain Water",
        "quesLink": "https://leetcode.com/problems/trapping-rain-water/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Dynamic Programming",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "multiply-strings": {
        "quesName": "Multiply Strings",
        "quesLink": "https://leetcode.com/problems/multiply-strings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ]
    },
    "wildcard-matching": {
        "quesName": "Wildcard Matching",
        "quesLink": "https://leetcode.com/problems/wildcard-matching/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy",
            "Recursion"
        ]
    },
    "jump-game-ii": {
        "quesName": "Jump Game II",
        "quesLink": "https://leetcode.com/problems/jump-game-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "permutations": {
        "quesName": "Permutations",
        "quesLink": "https://leetcode.com/problems/permutations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking"
        ]
    },
    "permutations-ii": {
        "quesName": "Permutations II",
        "quesLink": "https://leetcode.com/problems/permutations-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking"
        ]
    },
    "rotate-image": {
        "quesName": "Rotate Image",
        "quesLink": "https://leetcode.com/problems/rotate-image/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Matrix"
        ]
    },
    "group-anagrams": {
        "quesName": "Group Anagrams",
        "quesLink": "https://leetcode.com/problems/group-anagrams/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ]
    },
    "powx-n": {
        "quesName": "Pow(x, n)",
        "quesLink": "https://leetcode.com/problems/powx-n/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Recursion"
        ]
    },
    "n-queens": {
        "quesName": "N-Queens",
        "quesLink": "https://leetcode.com/problems/n-queens/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking"
        ]
    },
    "n-queens-ii": {
        "quesName": "N-Queens II",
        "quesLink": "https://leetcode.com/problems/n-queens-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Backtracking"
        ]
    },
    "maximum-subarray": {
        "quesName": "Maximum Subarray",
        "quesLink": "https://leetcode.com/problems/maximum-subarray/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Dynamic Programming"
        ]
    },
    "spiral-matrix": {
        "quesName": "Spiral Matrix",
        "quesLink": "https://leetcode.com/problems/spiral-matrix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "jump-game": {
        "quesName": "Jump Game",
        "quesLink": "https://leetcode.com/problems/jump-game/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "merge-intervals": {
        "quesName": "Merge Intervals",
        "quesLink": "https://leetcode.com/problems/merge-intervals/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "insert-interval": {
        "quesName": "Insert Interval",
        "quesLink": "https://leetcode.com/problems/insert-interval/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "length-of-last-word": {
        "quesName": "Length of Last Word",
        "quesLink": "https://leetcode.com/problems/length-of-last-word/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "spiral-matrix-ii": {
        "quesName": "Spiral Matrix II",
        "quesLink": "https://leetcode.com/problems/spiral-matrix-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "permutation-sequence": {
        "quesName": "Permutation Sequence",
        "quesLink": "https://leetcode.com/problems/permutation-sequence/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Recursion"
        ]
    },
    "rotate-list": {
        "quesName": "Rotate List",
        "quesLink": "https://leetcode.com/problems/rotate-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Two Pointers"
        ]
    },
    "unique-paths": {
        "quesName": "Unique Paths",
        "quesLink": "https://leetcode.com/problems/unique-paths/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ]
    },
    "unique-paths-ii": {
        "quesName": "Unique Paths II",
        "quesLink": "https://leetcode.com/problems/unique-paths-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "minimum-path-sum": {
        "quesName": "Minimum Path Sum",
        "quesLink": "https://leetcode.com/problems/minimum-path-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "valid-number": {
        "quesName": "Valid Number",
        "quesLink": "https://leetcode.com/problems/valid-number/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "plus-one": {
        "quesName": "Plus One",
        "quesLink": "https://leetcode.com/problems/plus-one/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "add-binary": {
        "quesName": "Add Binary",
        "quesLink": "https://leetcode.com/problems/add-binary/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Bit Manipulation",
            "Simulation"
        ]
    },
    "text-justification": {
        "quesName": "Text Justification",
        "quesLink": "https://leetcode.com/problems/text-justification/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Simulation"
        ]
    },
    "sqrtx": {
        "quesName": "Sqrt(x)",
        "quesLink": "https://leetcode.com/problems/sqrtx/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search"
        ]
    },
    "climbing-stairs": {
        "quesName": "Climbing Stairs",
        "quesLink": "https://leetcode.com/problems/climbing-stairs/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Memoization"
        ]
    },
    "simplify-path": {
        "quesName": "Simplify Path",
        "quesLink": "https://leetcode.com/problems/simplify-path/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "edit-distance": {
        "quesName": "Edit Distance",
        "quesLink": "https://leetcode.com/problems/edit-distance/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "set-matrix-zeroes": {
        "quesName": "Set Matrix Zeroes",
        "quesLink": "https://leetcode.com/problems/set-matrix-zeroes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix"
        ]
    },
    "search-a-2d-matrix": {
        "quesName": "Search a 2D Matrix",
        "quesLink": "https://leetcode.com/problems/search-a-2d-matrix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Matrix"
        ]
    },
    "sort-colors": {
        "quesName": "Sort Colors",
        "quesLink": "https://leetcode.com/problems/sort-colors/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ]
    },
    "minimum-window-substring": {
        "quesName": "Minimum Window Substring",
        "quesLink": "https://leetcode.com/problems/minimum-window-substring/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ]
    },
    "combinations": {
        "quesName": "Combinations",
        "quesLink": "https://leetcode.com/problems/combinations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Backtracking"
        ]
    },
    "subsets": {
        "quesName": "Subsets",
        "quesLink": "https://leetcode.com/problems/subsets/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation"
        ]
    },
    "word-search": {
        "quesName": "Word Search",
        "quesLink": "https://leetcode.com/problems/word-search/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking",
            "Matrix"
        ]
    },
    "remove-duplicates-from-sorted-array-ii": {
        "quesName": "Remove Duplicates from Sorted Array II",
        "quesLink": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers"
        ]
    },
    "search-in-rotated-sorted-array-ii": {
        "quesName": "Search in Rotated Sorted Array II",
        "quesLink": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "remove-duplicates-from-sorted-list-ii": {
        "quesName": "Remove Duplicates from Sorted List II",
        "quesLink": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Two Pointers"
        ]
    },
    "remove-duplicates-from-sorted-list": {
        "quesName": "Remove Duplicates from Sorted List",
        "quesLink": "https://leetcode.com/problems/remove-duplicates-from-sorted-list/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List"
        ]
    },
    "largest-rectangle-in-histogram": {
        "quesName": "Largest Rectangle in Histogram",
        "quesLink": "https://leetcode.com/problems/largest-rectangle-in-histogram/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "maximal-rectangle": {
        "quesName": "Maximal Rectangle",
        "quesLink": "https://leetcode.com/problems/maximal-rectangle/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Matrix",
            "Monotonic Stack"
        ]
    },
    "partition-list": {
        "quesName": "Partition List",
        "quesLink": "https://leetcode.com/problems/partition-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Two Pointers"
        ]
    },
    "scramble-string": {
        "quesName": "Scramble String",
        "quesLink": "https://leetcode.com/problems/scramble-string/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "merge-sorted-array": {
        "quesName": "Merge Sorted Array",
        "quesLink": "https://leetcode.com/problems/merge-sorted-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ]
    },
    "gray-code": {
        "quesName": "Gray Code",
        "quesLink": "https://leetcode.com/problems/gray-code/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Backtracking",
            "Bit Manipulation"
        ]
    },
    "subsets-ii": {
        "quesName": "Subsets II",
        "quesLink": "https://leetcode.com/problems/subsets-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation"
        ]
    },
    "decode-ways": {
        "quesName": "Decode Ways",
        "quesLink": "https://leetcode.com/problems/decode-ways/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "reverse-linked-list-ii": {
        "quesName": "Reverse Linked List II",
        "quesLink": "https://leetcode.com/problems/reverse-linked-list-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List"
        ]
    },
    "restore-ip-addresses": {
        "quesName": "Restore IP Addresses",
        "quesLink": "https://leetcode.com/problems/restore-ip-addresses/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking"
        ]
    },
    "binary-tree-inorder-traversal": {
        "quesName": "Binary Tree Inorder Traversal",
        "quesLink": "https://leetcode.com/problems/binary-tree-inorder-traversal/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "unique-binary-search-trees-ii": {
        "quesName": "Unique Binary Search Trees II",
        "quesLink": "https://leetcode.com/problems/unique-binary-search-trees-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Backtracking",
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "unique-binary-search-trees": {
        "quesName": "Unique Binary Search Trees",
        "quesLink": "https://leetcode.com/problems/unique-binary-search-trees/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "interleaving-string": {
        "quesName": "Interleaving String",
        "quesLink": "https://leetcode.com/problems/interleaving-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "validate-binary-search-tree": {
        "quesName": "Validate Binary Search Tree",
        "quesLink": "https://leetcode.com/problems/validate-binary-search-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "recover-binary-search-tree": {
        "quesName": "Recover Binary Search Tree",
        "quesLink": "https://leetcode.com/problems/recover-binary-search-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "same-tree": {
        "quesName": "Same Tree",
        "quesLink": "https://leetcode.com/problems/same-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "symmetric-tree": {
        "quesName": "Symmetric Tree",
        "quesLink": "https://leetcode.com/problems/symmetric-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "binary-tree-level-order-traversal": {
        "quesName": "Binary Tree Level Order Traversal",
        "quesLink": "https://leetcode.com/problems/binary-tree-level-order-traversal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "binary-tree-zigzag-level-order-traversal": {
        "quesName": "Binary Tree Zigzag Level Order Traversal",
        "quesLink": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "maximum-depth-of-binary-tree": {
        "quesName": "Maximum Depth of Binary Tree",
        "quesLink": "https://leetcode.com/problems/maximum-depth-of-binary-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "construct-binary-tree-from-preorder-and-inorder-traversal": {
        "quesName": "Construct Binary Tree from Preorder and Inorder Traversal",
        "quesLink": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Tree",
            "Binary Tree"
        ]
    },
    "construct-binary-tree-from-inorder-and-postorder-traversal": {
        "quesName": "Construct Binary Tree from Inorder and Postorder Traversal",
        "quesLink": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Tree",
            "Binary Tree"
        ]
    },
    "binary-tree-level-order-traversal-ii": {
        "quesName": "Binary Tree Level Order Traversal II",
        "quesLink": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "convert-sorted-array-to-binary-search-tree": {
        "quesName": "Convert Sorted Array to Binary Search Tree",
        "quesLink": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "convert-sorted-list-to-binary-search-tree": {
        "quesName": "Convert Sorted List to Binary Search Tree",
        "quesLink": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Divide and Conquer",
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "balanced-binary-tree": {
        "quesName": "Balanced Binary Tree",
        "quesLink": "https://leetcode.com/problems/balanced-binary-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "minimum-depth-of-binary-tree": {
        "quesName": "Minimum Depth of Binary Tree",
        "quesLink": "https://leetcode.com/problems/minimum-depth-of-binary-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "path-sum": {
        "quesName": "Path Sum",
        "quesLink": "https://leetcode.com/problems/path-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "path-sum-ii": {
        "quesName": "Path Sum II",
        "quesLink": "https://leetcode.com/problems/path-sum-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Backtracking",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "flatten-binary-tree-to-linked-list": {
        "quesName": "Flatten Binary Tree to Linked List",
        "quesLink": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Stack",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "distinct-subsequences": {
        "quesName": "Distinct Subsequences",
        "quesLink": "https://leetcode.com/problems/distinct-subsequences/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "populating-next-right-pointers-in-each-node": {
        "quesName": "Populating Next Right Pointers in Each Node",
        "quesLink": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "populating-next-right-pointers-in-each-node-ii": {
        "quesName": "Populating Next Right Pointers in Each Node II",
        "quesLink": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "pascals-triangle": {
        "quesName": "Pascal's Triangle",
        "quesLink": "https://leetcode.com/problems/pascals-triangle/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "pascals-triangle-ii": {
        "quesName": "Pascal's Triangle II",
        "quesLink": "https://leetcode.com/problems/pascals-triangle-ii/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "triangle": {
        "quesName": "Triangle",
        "quesLink": "https://leetcode.com/problems/triangle/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "best-time-to-buy-and-sell-stock": {
        "quesName": "Best Time to Buy and Sell Stock",
        "quesLink": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "best-time-to-buy-and-sell-stock-ii": {
        "quesName": "Best Time to Buy and Sell Stock II",
        "quesLink": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "best-time-to-buy-and-sell-stock-iii": {
        "quesName": "Best Time to Buy and Sell Stock III",
        "quesLink": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "binary-tree-maximum-path-sum": {
        "quesName": "Binary Tree Maximum Path Sum",
        "quesLink": "https://leetcode.com/problems/binary-tree-maximum-path-sum/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "valid-palindrome": {
        "quesName": "Valid Palindrome",
        "quesLink": "https://leetcode.com/problems/valid-palindrome/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "word-ladder-ii": {
        "quesName": "Word Ladder II",
        "quesLink": "https://leetcode.com/problems/word-ladder-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Backtracking",
            "Breadth-First Search"
        ]
    },
    "word-ladder": {
        "quesName": "Word Ladder",
        "quesLink": "https://leetcode.com/problems/word-ladder/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Breadth-First Search"
        ]
    },
    "longest-consecutive-sequence": {
        "quesName": "Longest Consecutive Sequence",
        "quesLink": "https://leetcode.com/problems/longest-consecutive-sequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Union Find"
        ]
    },
    "sum-root-to-leaf-numbers": {
        "quesName": "Sum Root to Leaf Numbers",
        "quesLink": "https://leetcode.com/problems/sum-root-to-leaf-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "surrounded-regions": {
        "quesName": "Surrounded Regions",
        "quesLink": "https://leetcode.com/problems/surrounded-regions/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "palindrome-partitioning": {
        "quesName": "Palindrome Partitioning",
        "quesLink": "https://leetcode.com/problems/palindrome-partitioning/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Backtracking"
        ]
    },
    "palindrome-partitioning-ii": {
        "quesName": "Palindrome Partitioning II",
        "quesLink": "https://leetcode.com/problems/palindrome-partitioning-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "clone-graph": {
        "quesName": "Clone Graph",
        "quesLink": "https://leetcode.com/problems/clone-graph/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "gas-station": {
        "quesName": "Gas Station",
        "quesLink": "https://leetcode.com/problems/gas-station/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "candy": {
        "quesName": "Candy",
        "quesLink": "https://leetcode.com/problems/candy/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "single-number": {
        "quesName": "Single Number",
        "quesLink": "https://leetcode.com/problems/single-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation"
        ]
    },
    "single-number-ii": {
        "quesName": "Single Number II",
        "quesLink": "https://leetcode.com/problems/single-number-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation"
        ]
    },
    "copy-list-with-random-pointer": {
        "quesName": "Copy List with Random Pointer",
        "quesLink": "https://leetcode.com/problems/copy-list-with-random-pointer/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Linked List"
        ]
    },
    "word-break": {
        "quesName": "Word Break",
        "quesLink": "https://leetcode.com/problems/word-break/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Trie",
            "Memoization"
        ]
    },
    "word-break-ii": {
        "quesName": "Word Break II",
        "quesLink": "https://leetcode.com/problems/word-break-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Backtracking",
            "Trie",
            "Memoization"
        ]
    },
    "linked-list-cycle": {
        "quesName": "Linked List Cycle",
        "quesLink": "https://leetcode.com/problems/linked-list-cycle/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Linked List",
            "Two Pointers"
        ]
    },
    "linked-list-cycle-ii": {
        "quesName": "Linked List Cycle II",
        "quesLink": "https://leetcode.com/problems/linked-list-cycle-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Linked List",
            "Two Pointers"
        ]
    },
    "reorder-list": {
        "quesName": "Reorder List",
        "quesLink": "https://leetcode.com/problems/reorder-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Two Pointers",
            "Stack",
            "Recursion"
        ]
    },
    "binary-tree-preorder-traversal": {
        "quesName": "Binary Tree Preorder Traversal",
        "quesLink": "https://leetcode.com/problems/binary-tree-preorder-traversal/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "binary-tree-postorder-traversal": {
        "quesName": "Binary Tree Postorder Traversal",
        "quesLink": "https://leetcode.com/problems/binary-tree-postorder-traversal/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "lru-cache": {
        "quesName": "LRU Cache",
        "quesLink": "https://leetcode.com/problems/lru-cache/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Linked List",
            "Design",
            "Doubly-Linked List"
        ]
    },
    "insertion-sort-list": {
        "quesName": "Insertion Sort List",
        "quesLink": "https://leetcode.com/problems/insertion-sort-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Sorting"
        ]
    },
    "sort-list": {
        "quesName": "Sort List",
        "quesLink": "https://leetcode.com/problems/sort-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Two Pointers",
            "Divide and Conquer",
            "Sorting",
            "Merge Sort"
        ]
    },
    "max-points-on-a-line": {
        "quesName": "Max Points on a Line",
        "quesLink": "https://leetcode.com/problems/max-points-on-a-line/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Geometry"
        ]
    },
    "evaluate-reverse-polish-notation": {
        "quesName": "Evaluate Reverse Polish Notation",
        "quesLink": "https://leetcode.com/problems/evaluate-reverse-polish-notation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Stack"
        ]
    },
    "reverse-words-in-a-string": {
        "quesName": "Reverse Words in a String",
        "quesLink": "https://leetcode.com/problems/reverse-words-in-a-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "maximum-product-subarray": {
        "quesName": "Maximum Product Subarray",
        "quesLink": "https://leetcode.com/problems/maximum-product-subarray/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "find-minimum-in-rotated-sorted-array": {
        "quesName": "Find Minimum in Rotated Sorted Array",
        "quesLink": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "find-minimum-in-rotated-sorted-array-ii": {
        "quesName": "Find Minimum in Rotated Sorted Array II",
        "quesLink": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "min-stack": {
        "quesName": "Min Stack",
        "quesLink": "https://leetcode.com/problems/min-stack/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Design"
        ]
    },
    "intersection-of-two-linked-lists": {
        "quesName": "Intersection of Two Linked Lists",
        "quesLink": "https://leetcode.com/problems/intersection-of-two-linked-lists/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Linked List",
            "Two Pointers"
        ]
    },
    "find-peak-element": {
        "quesName": "Find Peak Element",
        "quesLink": "https://leetcode.com/problems/find-peak-element/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "maximum-gap": {
        "quesName": "Maximum Gap",
        "quesLink": "https://leetcode.com/problems/maximum-gap/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Bucket Sort",
            "Radix Sort"
        ]
    },
    "compare-version-numbers": {
        "quesName": "Compare Version Numbers",
        "quesLink": "https://leetcode.com/problems/compare-version-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "fraction-to-recurring-decimal": {
        "quesName": "Fraction to Recurring Decimal",
        "quesLink": "https://leetcode.com/problems/fraction-to-recurring-decimal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "String"
        ]
    },
    "two-sum-ii-input-array-is-sorted": {
        "quesName": "Two Sum II - Input Array Is Sorted",
        "quesLink": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search"
        ]
    },
    "excel-sheet-column-title": {
        "quesName": "Excel Sheet Column Title",
        "quesLink": "https://leetcode.com/problems/excel-sheet-column-title/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "majority-element": {
        "quesName": "Majority Element",
        "quesLink": "https://leetcode.com/problems/majority-element/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Sorting",
            "Counting"
        ]
    },
    "excel-sheet-column-number": {
        "quesName": "Excel Sheet Column Number",
        "quesLink": "https://leetcode.com/problems/excel-sheet-column-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "factorial-trailing-zeroes": {
        "quesName": "Factorial Trailing Zeroes",
        "quesLink": "https://leetcode.com/problems/factorial-trailing-zeroes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "binary-search-tree-iterator": {
        "quesName": "Binary Search Tree Iterator",
        "quesLink": "https://leetcode.com/problems/binary-search-tree-iterator/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Tree",
            "Design",
            "Binary Search Tree",
            "Binary Tree",
            "Iterator"
        ]
    },
    "dungeon-game": {
        "quesName": "Dungeon Game",
        "quesLink": "https://leetcode.com/problems/dungeon-game/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "combine-two-tables": {
        "quesName": "Combine Two Tables",
        "quesLink": "https://leetcode.com/problems/combine-two-tables/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "second-highest-salary": {
        "quesName": "Second Highest Salary",
        "quesLink": "https://leetcode.com/problems/second-highest-salary/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "nth-highest-salary": {
        "quesName": "Nth Highest Salary",
        "quesLink": "https://leetcode.com/problems/nth-highest-salary/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "rank-scores": {
        "quesName": "Rank Scores",
        "quesLink": "https://leetcode.com/problems/rank-scores/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "largest-number": {
        "quesName": "Largest Number",
        "quesLink": "https://leetcode.com/problems/largest-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Greedy",
            "Sorting"
        ]
    },
    "consecutive-numbers": {
        "quesName": "Consecutive Numbers",
        "quesLink": "https://leetcode.com/problems/consecutive-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "employees-earning-more-than-their-managers": {
        "quesName": "Employees Earning More Than Their Managers",
        "quesLink": "https://leetcode.com/problems/employees-earning-more-than-their-managers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "duplicate-emails": {
        "quesName": "Duplicate Emails",
        "quesLink": "https://leetcode.com/problems/duplicate-emails/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "customers-who-never-order": {
        "quesName": "Customers Who Never Order",
        "quesLink": "https://leetcode.com/problems/customers-who-never-order/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "department-highest-salary": {
        "quesName": "Department Highest Salary",
        "quesLink": "https://leetcode.com/problems/department-highest-salary/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "department-top-three-salaries": {
        "quesName": "Department Top Three Salaries",
        "quesLink": "https://leetcode.com/problems/department-top-three-salaries/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "repeated-dna-sequences": {
        "quesName": "Repeated DNA Sequences",
        "quesLink": "https://leetcode.com/problems/repeated-dna-sequences/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Sliding Window",
            "Rolling Hash",
            "Hash Function"
        ]
    },
    "best-time-to-buy-and-sell-stock-iv": {
        "quesName": "Best Time to Buy and Sell Stock IV",
        "quesLink": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "rotate-array": {
        "quesName": "Rotate Array",
        "quesLink": "https://leetcode.com/problems/rotate-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Two Pointers"
        ]
    },
    "reverse-bits": {
        "quesName": "Reverse Bits",
        "quesLink": "https://leetcode.com/problems/reverse-bits/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Divide and Conquer",
            "Bit Manipulation"
        ]
    },
    "number-of-1-bits": {
        "quesName": "Number of 1 Bits",
        "quesLink": "https://leetcode.com/problems/number-of-1-bits/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Divide and Conquer",
            "Bit Manipulation"
        ]
    },
    "word-frequency": {
        "quesName": "Word Frequency",
        "quesLink": "https://leetcode.com/problems/word-frequency/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Shell"
        ]
    },
    "valid-phone-numbers": {
        "quesName": "Valid Phone Numbers",
        "quesLink": "https://leetcode.com/problems/valid-phone-numbers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Shell"
        ]
    },
    "transpose-file": {
        "quesName": "Transpose File",
        "quesLink": "https://leetcode.com/problems/transpose-file/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Shell"
        ]
    },
    "tenth-line": {
        "quesName": "Tenth Line",
        "quesLink": "https://leetcode.com/problems/tenth-line/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Shell"
        ]
    },
    "delete-duplicate-emails": {
        "quesName": "Delete Duplicate Emails",
        "quesLink": "https://leetcode.com/problems/delete-duplicate-emails/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "rising-temperature": {
        "quesName": "Rising Temperature",
        "quesLink": "https://leetcode.com/problems/rising-temperature/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "house-robber": {
        "quesName": "House Robber",
        "quesLink": "https://leetcode.com/problems/house-robber/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "binary-tree-right-side-view": {
        "quesName": "Binary Tree Right Side View",
        "quesLink": "https://leetcode.com/problems/binary-tree-right-side-view/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "number-of-islands": {
        "quesName": "Number of Islands",
        "quesLink": "https://leetcode.com/problems/number-of-islands/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "bitwise-and-of-numbers-range": {
        "quesName": "Bitwise AND of Numbers Range",
        "quesLink": "https://leetcode.com/problems/bitwise-and-of-numbers-range/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Bit Manipulation"
        ]
    },
    "happy-number": {
        "quesName": "Happy Number",
        "quesLink": "https://leetcode.com/problems/happy-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "Two Pointers"
        ]
    },
    "remove-linked-list-elements": {
        "quesName": "Remove Linked List Elements",
        "quesLink": "https://leetcode.com/problems/remove-linked-list-elements/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Recursion"
        ]
    },
    "count-primes": {
        "quesName": "Count Primes",
        "quesLink": "https://leetcode.com/problems/count-primes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Enumeration",
            "Number Theory"
        ]
    },
    "isomorphic-strings": {
        "quesName": "Isomorphic Strings",
        "quesLink": "https://leetcode.com/problems/isomorphic-strings/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "reverse-linked-list": {
        "quesName": "Reverse Linked List",
        "quesLink": "https://leetcode.com/problems/reverse-linked-list/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Recursion"
        ]
    },
    "course-schedule": {
        "quesName": "Course Schedule",
        "quesLink": "https://leetcode.com/problems/course-schedule/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ]
    },
    "implement-trie-prefix-tree": {
        "quesName": "Implement Trie (Prefix Tree)",
        "quesLink": "https://leetcode.com/problems/implement-trie-prefix-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Design",
            "Trie"
        ]
    },
    "minimum-size-subarray-sum": {
        "quesName": "Minimum Size Subarray Sum",
        "quesLink": "https://leetcode.com/problems/minimum-size-subarray-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "course-schedule-ii": {
        "quesName": "Course Schedule II",
        "quesLink": "https://leetcode.com/problems/course-schedule-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ]
    },
    "design-add-and-search-words-data-structure": {
        "quesName": "Design Add and Search Words Data Structure",
        "quesLink": "https://leetcode.com/problems/design-add-and-search-words-data-structure/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Depth-First Search",
            "Design",
            "Trie"
        ]
    },
    "word-search-ii": {
        "quesName": "Word Search II",
        "quesLink": "https://leetcode.com/problems/word-search-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Backtracking",
            "Trie",
            "Matrix"
        ]
    },
    "house-robber-ii": {
        "quesName": "House Robber II",
        "quesLink": "https://leetcode.com/problems/house-robber-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "shortest-palindrome": {
        "quesName": "Shortest Palindrome",
        "quesLink": "https://leetcode.com/problems/shortest-palindrome/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ]
    },
    "kth-largest-element-in-an-array": {
        "quesName": "Kth Largest Element in an Array",
        "quesLink": "https://leetcode.com/problems/kth-largest-element-in-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Quickselect"
        ]
    },
    "combination-sum-iii": {
        "quesName": "Combination Sum III",
        "quesLink": "https://leetcode.com/problems/combination-sum-iii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking"
        ]
    },
    "contains-duplicate": {
        "quesName": "Contains Duplicate",
        "quesLink": "https://leetcode.com/problems/contains-duplicate/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ]
    },
    "the-skyline-problem": {
        "quesName": "The Skyline Problem",
        "quesLink": "https://leetcode.com/problems/the-skyline-problem/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Line Sweep",
            "Heap (Priority Queue)",
            "Ordered Set"
        ]
    },
    "contains-duplicate-ii": {
        "quesName": "Contains Duplicate II",
        "quesLink": "https://leetcode.com/problems/contains-duplicate-ii/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ]
    },
    "contains-duplicate-iii": {
        "quesName": "Contains Duplicate III",
        "quesLink": "https://leetcode.com/problems/contains-duplicate-iii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sliding Window",
            "Sorting",
            "Bucket Sort",
            "Ordered Set"
        ]
    },
    "maximal-square": {
        "quesName": "Maximal Square",
        "quesLink": "https://leetcode.com/problems/maximal-square/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "count-complete-tree-nodes": {
        "quesName": "Count Complete Tree Nodes",
        "quesLink": "https://leetcode.com/problems/count-complete-tree-nodes/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Binary Search",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "rectangle-area": {
        "quesName": "Rectangle Area",
        "quesLink": "https://leetcode.com/problems/rectangle-area/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Geometry"
        ]
    },
    "basic-calculator": {
        "quesName": "Basic Calculator",
        "quesLink": "https://leetcode.com/problems/basic-calculator/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Stack",
            "Recursion"
        ]
    },
    "implement-stack-using-queues": {
        "quesName": "Implement Stack using Queues",
        "quesLink": "https://leetcode.com/problems/implement-stack-using-queues/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Design",
            "Queue"
        ]
    },
    "invert-binary-tree": {
        "quesName": "Invert Binary Tree",
        "quesLink": "https://leetcode.com/problems/invert-binary-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "basic-calculator-ii": {
        "quesName": "Basic Calculator II",
        "quesLink": "https://leetcode.com/problems/basic-calculator-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Stack"
        ]
    },
    "summary-ranges": {
        "quesName": "Summary Ranges",
        "quesLink": "https://leetcode.com/problems/summary-ranges/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "majority-element-ii": {
        "quesName": "Majority Element II",
        "quesLink": "https://leetcode.com/problems/majority-element-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting"
        ]
    },
    "kth-smallest-element-in-a-bst": {
        "quesName": "Kth Smallest Element in a BST",
        "quesLink": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "power-of-two": {
        "quesName": "Power of Two",
        "quesLink": "https://leetcode.com/problems/power-of-two/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Bit Manipulation",
            "Recursion"
        ]
    },
    "implement-queue-using-stacks": {
        "quesName": "Implement Queue using Stacks",
        "quesLink": "https://leetcode.com/problems/implement-queue-using-stacks/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Design",
            "Queue"
        ]
    },
    "number-of-digit-one": {
        "quesName": "Number of Digit One",
        "quesLink": "https://leetcode.com/problems/number-of-digit-one/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Recursion"
        ]
    },
    "palindrome-linked-list": {
        "quesName": "Palindrome Linked List",
        "quesLink": "https://leetcode.com/problems/palindrome-linked-list/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Two Pointers",
            "Stack",
            "Recursion"
        ]
    },
    "lowest-common-ancestor-of-a-binary-search-tree": {
        "quesName": "Lowest Common Ancestor of a Binary Search Tree",
        "quesLink": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "lowest-common-ancestor-of-a-binary-tree": {
        "quesName": "Lowest Common Ancestor of a Binary Tree",
        "quesLink": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "delete-node-in-a-linked-list": {
        "quesName": "Delete Node in a Linked List",
        "quesLink": "https://leetcode.com/problems/delete-node-in-a-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List"
        ]
    },
    "product-of-array-except-self": {
        "quesName": "Product of Array Except Self",
        "quesLink": "https://leetcode.com/problems/product-of-array-except-self/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "sliding-window-maximum": {
        "quesName": "Sliding Window Maximum",
        "quesLink": "https://leetcode.com/problems/sliding-window-maximum/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Monotonic Queue"
        ]
    },
    "search-a-2d-matrix-ii": {
        "quesName": "Search a 2D Matrix II",
        "quesLink": "https://leetcode.com/problems/search-a-2d-matrix-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Matrix"
        ]
    },
    "different-ways-to-add-parentheses": {
        "quesName": "Different Ways to Add Parentheses",
        "quesLink": "https://leetcode.com/problems/different-ways-to-add-parentheses/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming",
            "Recursion",
            "Memoization"
        ]
    },
    "valid-anagram": {
        "quesName": "Valid Anagram",
        "quesLink": "https://leetcode.com/problems/valid-anagram/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sorting"
        ]
    },
    "binary-tree-paths": {
        "quesName": "Binary Tree Paths",
        "quesLink": "https://leetcode.com/problems/binary-tree-paths/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "add-digits": {
        "quesName": "Add Digits",
        "quesLink": "https://leetcode.com/problems/add-digits/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Simulation",
            "Number Theory"
        ]
    },
    "single-number-iii": {
        "quesName": "Single Number III",
        "quesLink": "https://leetcode.com/problems/single-number-iii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation"
        ]
    },
    "trips-and-users": {
        "quesName": "Trips and Users",
        "quesLink": "https://leetcode.com/problems/trips-and-users/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "ugly-number": {
        "quesName": "Ugly Number",
        "quesLink": "https://leetcode.com/problems/ugly-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "ugly-number-ii": {
        "quesName": "Ugly Number II",
        "quesLink": "https://leetcode.com/problems/ugly-number-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "Dynamic Programming",
            "Heap (Priority Queue)"
        ]
    },
    "missing-number": {
        "quesName": "Missing Number",
        "quesLink": "https://leetcode.com/problems/missing-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Binary Search",
            "Bit Manipulation",
            "Sorting"
        ]
    },
    "integer-to-english-words": {
        "quesName": "Integer to English Words",
        "quesLink": "https://leetcode.com/problems/integer-to-english-words/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Recursion"
        ]
    },
    "h-index": {
        "quesName": "H-Index",
        "quesLink": "https://leetcode.com/problems/h-index/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Counting Sort"
        ]
    },
    "h-index-ii": {
        "quesName": "H-Index II",
        "quesLink": "https://leetcode.com/problems/h-index-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "first-bad-version": {
        "quesName": "First Bad Version",
        "quesLink": "https://leetcode.com/problems/first-bad-version/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Binary Search",
            "Interactive"
        ]
    },
    "perfect-squares": {
        "quesName": "Perfect Squares",
        "quesLink": "https://leetcode.com/problems/perfect-squares/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Breadth-First Search"
        ]
    },
    "expression-add-operators": {
        "quesName": "Expression Add Operators",
        "quesLink": "https://leetcode.com/problems/expression-add-operators/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Backtracking"
        ]
    },
    "move-zeroes": {
        "quesName": "Move Zeroes",
        "quesLink": "https://leetcode.com/problems/move-zeroes/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers"
        ]
    },
    "peeking-iterator": {
        "quesName": "Peeking Iterator",
        "quesLink": "https://leetcode.com/problems/peeking-iterator/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Design",
            "Iterator"
        ]
    },
    "find-the-duplicate-number": {
        "quesName": "Find the Duplicate Number",
        "quesLink": "https://leetcode.com/problems/find-the-duplicate-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Bit Manipulation"
        ]
    },
    "game-of-life": {
        "quesName": "Game of Life",
        "quesLink": "https://leetcode.com/problems/game-of-life/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "word-pattern": {
        "quesName": "Word Pattern",
        "quesLink": "https://leetcode.com/problems/word-pattern/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "nim-game": {
        "quesName": "Nim Game",
        "quesLink": "https://leetcode.com/problems/nim-game/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Brainteaser",
            "Game Theory"
        ]
    },
    "find-median-from-data-stream": {
        "quesName": "Find Median from Data Stream",
        "quesLink": "https://leetcode.com/problems/find-median-from-data-stream/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "Design",
            "Sorting",
            "Heap (Priority Queue)",
            "Data Stream"
        ]
    },
    "serialize-and-deserialize-binary-tree": {
        "quesName": "Serialize and Deserialize Binary Tree",
        "quesLink": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design",
            "Binary Tree"
        ]
    },
    "bulls-and-cows": {
        "quesName": "Bulls and Cows",
        "quesLink": "https://leetcode.com/problems/bulls-and-cows/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "longest-increasing-subsequence": {
        "quesName": "Longest Increasing Subsequence",
        "quesLink": "https://leetcode.com/problems/longest-increasing-subsequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming"
        ]
    },
    "remove-invalid-parentheses": {
        "quesName": "Remove Invalid Parentheses",
        "quesLink": "https://leetcode.com/problems/remove-invalid-parentheses/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking",
            "Breadth-First Search"
        ]
    },
    "range-sum-query-immutable": {
        "quesName": "Range Sum Query - Immutable",
        "quesLink": "https://leetcode.com/problems/range-sum-query-immutable/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Design",
            "Prefix Sum"
        ]
    },
    "range-sum-query-2d-immutable": {
        "quesName": "Range Sum Query 2D - Immutable",
        "quesLink": "https://leetcode.com/problems/range-sum-query-2d-immutable/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Design",
            "Matrix",
            "Prefix Sum"
        ]
    },
    "additive-number": {
        "quesName": "Additive Number",
        "quesLink": "https://leetcode.com/problems/additive-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking"
        ]
    },
    "range-sum-query-mutable": {
        "quesName": "Range Sum Query - Mutable",
        "quesLink": "https://leetcode.com/problems/range-sum-query-mutable/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Design",
            "Binary Indexed Tree",
            "Segment Tree"
        ]
    },
    "best-time-to-buy-and-sell-stock-with-cooldown": {
        "quesName": "Best Time to Buy and Sell Stock with Cooldown",
        "quesLink": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "minimum-height-trees": {
        "quesName": "Minimum Height Trees",
        "quesLink": "https://leetcode.com/problems/minimum-height-trees/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ]
    },
    "burst-balloons": {
        "quesName": "Burst Balloons",
        "quesLink": "https://leetcode.com/problems/burst-balloons/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "super-ugly-number": {
        "quesName": "Super Ugly Number",
        "quesLink": "https://leetcode.com/problems/super-ugly-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming"
        ]
    },
    "count-of-smaller-numbers-after-self": {
        "quesName": "Count of Smaller Numbers After Self",
        "quesLink": "https://leetcode.com/problems/count-of-smaller-numbers-after-self/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Merge Sort",
            "Ordered Set"
        ]
    },
    "remove-duplicate-letters": {
        "quesName": "Remove Duplicate Letters",
        "quesLink": "https://leetcode.com/problems/remove-duplicate-letters/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ]
    },
    "maximum-product-of-word-lengths": {
        "quesName": "Maximum Product of Word Lengths",
        "quesLink": "https://leetcode.com/problems/maximum-product-of-word-lengths/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Bit Manipulation"
        ]
    },
    "bulb-switcher": {
        "quesName": "Bulb Switcher",
        "quesLink": "https://leetcode.com/problems/bulb-switcher/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Brainteaser"
        ]
    },
    "create-maximum-number": {
        "quesName": "Create Maximum Number",
        "quesLink": "https://leetcode.com/problems/create-maximum-number/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ]
    },
    "coin-change": {
        "quesName": "Coin Change",
        "quesLink": "https://leetcode.com/problems/coin-change/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search"
        ]
    },
    "wiggle-sort-ii": {
        "quesName": "Wiggle Sort II",
        "quesLink": "https://leetcode.com/problems/wiggle-sort-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Sorting",
            "Quickselect"
        ]
    },
    "power-of-three": {
        "quesName": "Power of Three",
        "quesLink": "https://leetcode.com/problems/power-of-three/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Recursion"
        ]
    },
    "count-of-range-sum": {
        "quesName": "Count of Range Sum",
        "quesLink": "https://leetcode.com/problems/count-of-range-sum/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Merge Sort",
            "Ordered Set"
        ]
    },
    "odd-even-linked-list": {
        "quesName": "Odd Even Linked List",
        "quesLink": "https://leetcode.com/problems/odd-even-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List"
        ]
    },
    "longest-increasing-path-in-a-matrix": {
        "quesName": "Longest Increasing Path in a Matrix",
        "quesLink": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort",
            "Memoization",
            "Matrix"
        ]
    },
    "patching-array": {
        "quesName": "Patching Array",
        "quesLink": "https://leetcode.com/problems/patching-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "verify-preorder-serialization-of-a-binary-tree": {
        "quesName": "Verify Preorder Serialization of a Binary Tree",
        "quesLink": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Tree",
            "Binary Tree"
        ]
    },
    "reconstruct-itinerary": {
        "quesName": "Reconstruct Itinerary",
        "quesLink": "https://leetcode.com/problems/reconstruct-itinerary/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Graph",
            "Eulerian Circuit"
        ]
    },
    "increasing-triplet-subsequence": {
        "quesName": "Increasing Triplet Subsequence",
        "quesLink": "https://leetcode.com/problems/increasing-triplet-subsequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "self-crossing": {
        "quesName": "Self Crossing",
        "quesLink": "https://leetcode.com/problems/self-crossing/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ]
    },
    "palindrome-pairs": {
        "quesName": "Palindrome Pairs",
        "quesLink": "https://leetcode.com/problems/palindrome-pairs/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Trie"
        ]
    },
    "house-robber-iii": {
        "quesName": "House Robber III",
        "quesLink": "https://leetcode.com/problems/house-robber-iii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "counting-bits": {
        "quesName": "Counting Bits",
        "quesLink": "https://leetcode.com/problems/counting-bits/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation"
        ]
    },
    "flatten-nested-list-iterator": {
        "quesName": "Flatten Nested List Iterator",
        "quesLink": "https://leetcode.com/problems/flatten-nested-list-iterator/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search",
            "Design",
            "Queue",
            "Iterator"
        ]
    },
    "power-of-four": {
        "quesName": "Power of Four",
        "quesLink": "https://leetcode.com/problems/power-of-four/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Bit Manipulation",
            "Recursion"
        ]
    },
    "integer-break": {
        "quesName": "Integer Break",
        "quesLink": "https://leetcode.com/problems/integer-break/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming"
        ]
    },
    "reverse-string": {
        "quesName": "Reverse String",
        "quesLink": "https://leetcode.com/problems/reverse-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "reverse-vowels-of-a-string": {
        "quesName": "Reverse Vowels of a String",
        "quesLink": "https://leetcode.com/problems/reverse-vowels-of-a-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "top-k-frequent-elements": {
        "quesName": "Top K Frequent Elements",
        "quesLink": "https://leetcode.com/problems/top-k-frequent-elements/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Bucket Sort",
            "Counting",
            "Quickselect"
        ]
    },
    "intersection-of-two-arrays": {
        "quesName": "Intersection of Two Arrays",
        "quesLink": "https://leetcode.com/problems/intersection-of-two-arrays/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "intersection-of-two-arrays-ii": {
        "quesName": "Intersection of Two Arrays II",
        "quesLink": "https://leetcode.com/problems/intersection-of-two-arrays-ii/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "data-stream-as-disjoint-intervals": {
        "quesName": "Data Stream as Disjoint Intervals",
        "quesLink": "https://leetcode.com/problems/data-stream-as-disjoint-intervals/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Binary Search",
            "Design",
            "Ordered Set"
        ]
    },
    "russian-doll-envelopes": {
        "quesName": "Russian Doll Envelopes",
        "quesLink": "https://leetcode.com/problems/russian-doll-envelopes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "design-twitter": {
        "quesName": "Design Twitter",
        "quesLink": "https://leetcode.com/problems/design-twitter/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Linked List",
            "Design",
            "Heap (Priority Queue)"
        ]
    },
    "count-numbers-with-unique-digits": {
        "quesName": "Count Numbers with Unique Digits",
        "quesLink": "https://leetcode.com/problems/count-numbers-with-unique-digits/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Backtracking"
        ]
    },
    "max-sum-of-rectangle-no-larger-than-k": {
        "quesName": "Max Sum of Rectangle No Larger Than K",
        "quesLink": "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Matrix",
            "Prefix Sum",
            "Ordered Set"
        ]
    },
    "water-and-jug-problem": {
        "quesName": "Water and Jug Problem",
        "quesLink": "https://leetcode.com/problems/water-and-jug-problem/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Depth-First Search",
            "Breadth-First Search"
        ]
    },
    "valid-perfect-square": {
        "quesName": "Valid Perfect Square",
        "quesLink": "https://leetcode.com/problems/valid-perfect-square/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search"
        ]
    },
    "largest-divisible-subset": {
        "quesName": "Largest Divisible Subset",
        "quesLink": "https://leetcode.com/problems/largest-divisible-subset/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "sum-of-two-integers": {
        "quesName": "Sum of Two Integers",
        "quesLink": "https://leetcode.com/problems/sum-of-two-integers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Bit Manipulation"
        ]
    },
    "super-pow": {
        "quesName": "Super Pow",
        "quesLink": "https://leetcode.com/problems/super-pow/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Divide and Conquer"
        ]
    },
    "find-k-pairs-with-smallest-sums": {
        "quesName": "Find K Pairs with Smallest Sums",
        "quesLink": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Heap (Priority Queue)"
        ]
    },
    "guess-number-higher-or-lower": {
        "quesName": "Guess Number Higher or Lower",
        "quesLink": "https://leetcode.com/problems/guess-number-higher-or-lower/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Binary Search",
            "Interactive"
        ]
    },
    "guess-number-higher-or-lower-ii": {
        "quesName": "Guess Number Higher or Lower II",
        "quesLink": "https://leetcode.com/problems/guess-number-higher-or-lower-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ]
    },
    "wiggle-subsequence": {
        "quesName": "Wiggle Subsequence",
        "quesLink": "https://leetcode.com/problems/wiggle-subsequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "combination-sum-iv": {
        "quesName": "Combination Sum IV",
        "quesLink": "https://leetcode.com/problems/combination-sum-iv/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "kth-smallest-element-in-a-sorted-matrix": {
        "quesName": "Kth Smallest Element in a Sorted Matrix",
        "quesLink": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix"
        ]
    },
    "insert-delete-getrandom-o1": {
        "quesName": "Insert Delete GetRandom O(1)",
        "quesLink": "https://leetcode.com/problems/insert-delete-getrandom-o1/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Design",
            "Randomized"
        ]
    },
    "insert-delete-getrandom-o1-duplicates-allowed": {
        "quesName": "Insert Delete GetRandom O(1) - Duplicates allowed",
        "quesLink": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Design",
            "Randomized"
        ]
    },
    "linked-list-random-node": {
        "quesName": "Linked List Random Node",
        "quesLink": "https://leetcode.com/problems/linked-list-random-node/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Math",
            "Reservoir Sampling",
            "Randomized"
        ]
    },
    "ransom-note": {
        "quesName": "Ransom Note",
        "quesLink": "https://leetcode.com/problems/ransom-note/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "shuffle-an-array": {
        "quesName": "Shuffle an Array",
        "quesLink": "https://leetcode.com/problems/shuffle-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Randomized"
        ]
    },
    "mini-parser": {
        "quesName": "Mini Parser",
        "quesLink": "https://leetcode.com/problems/mini-parser/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Depth-First Search"
        ]
    },
    "lexicographical-numbers": {
        "quesName": "Lexicographical Numbers",
        "quesLink": "https://leetcode.com/problems/lexicographical-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Trie"
        ]
    },
    "first-unique-character-in-a-string": {
        "quesName": "First Unique Character in a String",
        "quesLink": "https://leetcode.com/problems/first-unique-character-in-a-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Queue",
            "Counting"
        ]
    },
    "longest-absolute-file-path": {
        "quesName": "Longest Absolute File Path",
        "quesLink": "https://leetcode.com/problems/longest-absolute-file-path/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Depth-First Search"
        ]
    },
    "find-the-difference": {
        "quesName": "Find the Difference",
        "quesLink": "https://leetcode.com/problems/find-the-difference/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Sorting"
        ]
    },
    "elimination-game": {
        "quesName": "Elimination Game",
        "quesLink": "https://leetcode.com/problems/elimination-game/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Recursion"
        ]
    },
    "perfect-rectangle": {
        "quesName": "Perfect Rectangle",
        "quesLink": "https://leetcode.com/problems/perfect-rectangle/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Line Sweep"
        ]
    },
    "is-subsequence": {
        "quesName": "Is Subsequence",
        "quesLink": "https://leetcode.com/problems/is-subsequence/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ]
    },
    "utf-8-validation": {
        "quesName": "UTF-8 Validation",
        "quesLink": "https://leetcode.com/problems/utf-8-validation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation"
        ]
    },
    "decode-string": {
        "quesName": "Decode String",
        "quesLink": "https://leetcode.com/problems/decode-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Recursion"
        ]
    },
    "longest-substring-with-at-least-k-repeating-characters": {
        "quesName": "Longest Substring with At Least K Repeating Characters",
        "quesLink": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Divide and Conquer",
            "Sliding Window"
        ]
    },
    "rotate-function": {
        "quesName": "Rotate Function",
        "quesLink": "https://leetcode.com/problems/rotate-function/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming"
        ]
    },
    "integer-replacement": {
        "quesName": "Integer Replacement",
        "quesLink": "https://leetcode.com/problems/integer-replacement/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Greedy",
            "Bit Manipulation",
            "Memoization"
        ]
    },
    "random-pick-index": {
        "quesName": "Random Pick Index",
        "quesLink": "https://leetcode.com/problems/random-pick-index/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "Reservoir Sampling",
            "Randomized"
        ]
    },
    "evaluate-division": {
        "quesName": "Evaluate Division",
        "quesLink": "https://leetcode.com/problems/evaluate-division/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph",
            "Shortest Path"
        ]
    },
    "nth-digit": {
        "quesName": "Nth Digit",
        "quesLink": "https://leetcode.com/problems/nth-digit/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search"
        ]
    },
    "binary-watch": {
        "quesName": "Binary Watch",
        "quesLink": "https://leetcode.com/problems/binary-watch/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Backtracking",
            "Bit Manipulation"
        ]
    },
    "remove-k-digits": {
        "quesName": "Remove K Digits",
        "quesLink": "https://leetcode.com/problems/remove-k-digits/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ]
    },
    "frog-jump": {
        "quesName": "Frog Jump",
        "quesLink": "https://leetcode.com/problems/frog-jump/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "sum-of-left-leaves": {
        "quesName": "Sum of Left Leaves",
        "quesLink": "https://leetcode.com/problems/sum-of-left-leaves/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "convert-a-number-to-hexadecimal": {
        "quesName": "Convert a Number to Hexadecimal",
        "quesLink": "https://leetcode.com/problems/convert-a-number-to-hexadecimal/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Bit Manipulation"
        ]
    },
    "queue-reconstruction-by-height": {
        "quesName": "Queue Reconstruction by Height",
        "quesLink": "https://leetcode.com/problems/queue-reconstruction-by-height/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Binary Indexed Tree",
            "Segment Tree",
            "Sorting"
        ]
    },
    "trapping-rain-water-ii": {
        "quesName": "Trapping Rain Water II",
        "quesLink": "https://leetcode.com/problems/trapping-rain-water-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Heap (Priority Queue)",
            "Matrix"
        ]
    },
    "longest-palindrome": {
        "quesName": "Longest Palindrome",
        "quesLink": "https://leetcode.com/problems/longest-palindrome/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Greedy"
        ]
    },
    "split-array-largest-sum": {
        "quesName": "Split Array Largest Sum",
        "quesLink": "https://leetcode.com/problems/split-array-largest-sum/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Greedy",
            "Prefix Sum"
        ]
    },
    "fizz-buzz": {
        "quesName": "Fizz Buzz",
        "quesLink": "https://leetcode.com/problems/fizz-buzz/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ]
    },
    "arithmetic-slices": {
        "quesName": "Arithmetic Slices",
        "quesLink": "https://leetcode.com/problems/arithmetic-slices/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "third-maximum-number": {
        "quesName": "Third Maximum Number",
        "quesLink": "https://leetcode.com/problems/third-maximum-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "add-strings": {
        "quesName": "Add Strings",
        "quesLink": "https://leetcode.com/problems/add-strings/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ]
    },
    "partition-equal-subset-sum": {
        "quesName": "Partition Equal Subset Sum",
        "quesLink": "https://leetcode.com/problems/partition-equal-subset-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "pacific-atlantic-water-flow": {
        "quesName": "Pacific Atlantic Water Flow",
        "quesLink": "https://leetcode.com/problems/pacific-atlantic-water-flow/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "battleships-in-a-board": {
        "quesName": "Battleships in a Board",
        "quesLink": "https://leetcode.com/problems/battleships-in-a-board/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Matrix"
        ]
    },
    "strong-password-checker": {
        "quesName": "Strong Password Checker",
        "quesLink": "https://leetcode.com/problems/strong-password-checker/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "maximum-xor-of-two-numbers-in-an-array": {
        "quesName": "Maximum XOR of Two Numbers in an Array",
        "quesLink": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Trie"
        ]
    },
    "reconstruct-original-digits-from-english": {
        "quesName": "Reconstruct Original Digits from English",
        "quesLink": "https://leetcode.com/problems/reconstruct-original-digits-from-english/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "String"
        ]
    },
    "longest-repeating-character-replacement": {
        "quesName": "Longest Repeating Character Replacement",
        "quesLink": "https://leetcode.com/problems/longest-repeating-character-replacement/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ]
    },
    "construct-quad-tree": {
        "quesName": "Construct Quad Tree",
        "quesLink": "https://leetcode.com/problems/construct-quad-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Tree",
            "Matrix"
        ]
    },
    "n-ary-tree-level-order-traversal": {
        "quesName": "N-ary Tree Level Order Traversal",
        "quesLink": "https://leetcode.com/problems/n-ary-tree-level-order-traversal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Breadth-First Search"
        ]
    },
    "flatten-a-multilevel-doubly-linked-list": {
        "quesName": "Flatten a Multilevel Doubly Linked List",
        "quesLink": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Depth-First Search",
            "Doubly-Linked List"
        ]
    },
    "all-oone-data-structure": {
        "quesName": "All O`one Data Structure",
        "quesLink": "https://leetcode.com/problems/all-oone-data-structure/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Linked List",
            "Design",
            "Doubly-Linked List"
        ]
    },
    "minimum-genetic-mutation": {
        "quesName": "Minimum Genetic Mutation",
        "quesLink": "https://leetcode.com/problems/minimum-genetic-mutation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Breadth-First Search"
        ]
    },
    "number-of-segments-in-a-string": {
        "quesName": "Number of Segments in a String",
        "quesLink": "https://leetcode.com/problems/number-of-segments-in-a-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "non-overlapping-intervals": {
        "quesName": "Non-overlapping Intervals",
        "quesLink": "https://leetcode.com/problems/non-overlapping-intervals/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ]
    },
    "find-right-interval": {
        "quesName": "Find Right Interval",
        "quesLink": "https://leetcode.com/problems/find-right-interval/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ]
    },
    "path-sum-iii": {
        "quesName": "Path Sum III",
        "quesLink": "https://leetcode.com/problems/path-sum-iii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "find-all-anagrams-in-a-string": {
        "quesName": "Find All Anagrams in a String",
        "quesLink": "https://leetcode.com/problems/find-all-anagrams-in-a-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ]
    },
    "k-th-smallest-in-lexicographical-order": {
        "quesName": "K-th Smallest in Lexicographical Order",
        "quesLink": "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Trie"
        ]
    },
    "arranging-coins": {
        "quesName": "Arranging Coins",
        "quesLink": "https://leetcode.com/problems/arranging-coins/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search"
        ]
    },
    "find-all-duplicates-in-an-array": {
        "quesName": "Find All Duplicates in an Array",
        "quesLink": "https://leetcode.com/problems/find-all-duplicates-in-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "string-compression": {
        "quesName": "String Compression",
        "quesLink": "https://leetcode.com/problems/string-compression/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "add-two-numbers-ii": {
        "quesName": "Add Two Numbers II",
        "quesLink": "https://leetcode.com/problems/add-two-numbers-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Math",
            "Stack"
        ]
    },
    "arithmetic-slices-ii-subsequence": {
        "quesName": "Arithmetic Slices II - Subsequence",
        "quesLink": "https://leetcode.com/problems/arithmetic-slices-ii-subsequence/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "number-of-boomerangs": {
        "quesName": "Number of Boomerangs",
        "quesLink": "https://leetcode.com/problems/number-of-boomerangs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math"
        ]
    },
    "find-all-numbers-disappeared-in-an-array": {
        "quesName": "Find All Numbers Disappeared in an Array",
        "quesLink": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "serialize-and-deserialize-bst": {
        "quesName": "Serialize and Deserialize BST",
        "quesLink": "https://leetcode.com/problems/serialize-and-deserialize-bst/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "delete-node-in-a-bst": {
        "quesName": "Delete Node in a BST",
        "quesLink": "https://leetcode.com/problems/delete-node-in-a-bst/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "sort-characters-by-frequency": {
        "quesName": "Sort Characters By Frequency",
        "quesLink": "https://leetcode.com/problems/sort-characters-by-frequency/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sorting",
            "Heap (Priority Queue)",
            "Bucket Sort",
            "Counting"
        ]
    },
    "minimum-number-of-arrows-to-burst-balloons": {
        "quesName": "Minimum Number of Arrows to Burst Balloons",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "minimum-moves-to-equal-array-elements": {
        "quesName": "Minimum Moves to Equal Array Elements",
        "quesLink": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "4sum-ii": {
        "quesName": "4Sum II",
        "quesLink": "https://leetcode.com/problems/4sum-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "assign-cookies": {
        "quesName": "Assign Cookies",
        "quesLink": "https://leetcode.com/problems/assign-cookies/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ]
    },
    "132-pattern": {
        "quesName": "132 Pattern",
        "quesLink": "https://leetcode.com/problems/132-pattern/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Stack",
            "Monotonic Stack",
            "Ordered Set"
        ]
    },
    "circular-array-loop": {
        "quesName": "Circular Array Loop",
        "quesLink": "https://leetcode.com/problems/circular-array-loop/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers"
        ]
    },
    "poor-pigs": {
        "quesName": "Poor Pigs",
        "quesLink": "https://leetcode.com/problems/poor-pigs/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ]
    },
    "repeated-substring-pattern": {
        "quesName": "Repeated Substring Pattern",
        "quesLink": "https://leetcode.com/problems/repeated-substring-pattern/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "String Matching"
        ]
    },
    "lfu-cache": {
        "quesName": "LFU Cache",
        "quesLink": "https://leetcode.com/problems/lfu-cache/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Linked List",
            "Design",
            "Doubly-Linked List"
        ]
    },
    "hamming-distance": {
        "quesName": "Hamming Distance",
        "quesLink": "https://leetcode.com/problems/hamming-distance/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Bit Manipulation"
        ]
    },
    "minimum-moves-to-equal-array-elements-ii": {
        "quesName": "Minimum Moves to Equal Array Elements II",
        "quesLink": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Sorting"
        ]
    },
    "island-perimeter": {
        "quesName": "Island Perimeter",
        "quesLink": "https://leetcode.com/problems/island-perimeter/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "can-i-win": {
        "quesName": "Can I Win",
        "quesLink": "https://leetcode.com/problems/can-i-win/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Bit Manipulation",
            "Memoization",
            "Game Theory",
            "Bitmask"
        ]
    },
    "count-the-repetitions": {
        "quesName": "Count The Repetitions",
        "quesLink": "https://leetcode.com/problems/count-the-repetitions/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "unique-substrings-in-wraparound-string": {
        "quesName": "Unique Substrings in Wraparound String",
        "quesLink": "https://leetcode.com/problems/unique-substrings-in-wraparound-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "validate-ip-address": {
        "quesName": "Validate IP Address",
        "quesLink": "https://leetcode.com/problems/validate-ip-address/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "implement-rand10-using-rand7": {
        "quesName": "Implement Rand10() Using Rand7()",
        "quesLink": "https://leetcode.com/problems/implement-rand10-using-rand7/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Rejection Sampling",
            "Randomized",
            "Probability and Statistics"
        ]
    },
    "concatenated-words": {
        "quesName": "Concatenated Words",
        "quesLink": "https://leetcode.com/problems/concatenated-words/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Depth-First Search",
            "Trie"
        ]
    },
    "matchsticks-to-square": {
        "quesName": "Matchsticks to Square",
        "quesLink": "https://leetcode.com/problems/matchsticks-to-square/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "ones-and-zeroes": {
        "quesName": "Ones and Zeroes",
        "quesLink": "https://leetcode.com/problems/ones-and-zeroes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming"
        ]
    },
    "heaters": {
        "quesName": "Heaters",
        "quesLink": "https://leetcode.com/problems/heaters/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "number-complement": {
        "quesName": "Number Complement",
        "quesLink": "https://leetcode.com/problems/number-complement/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Bit Manipulation"
        ]
    },
    "total-hamming-distance": {
        "quesName": "Total Hamming Distance",
        "quesLink": "https://leetcode.com/problems/total-hamming-distance/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation"
        ]
    },
    "generate-random-point-in-a-circle": {
        "quesName": "Generate Random Point in a Circle",
        "quesLink": "https://leetcode.com/problems/generate-random-point-in-a-circle/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Geometry",
            "Rejection Sampling",
            "Randomized"
        ]
    },
    "largest-palindrome-product": {
        "quesName": "Largest Palindrome Product",
        "quesLink": "https://leetcode.com/problems/largest-palindrome-product/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "sliding-window-median": {
        "quesName": "Sliding Window Median",
        "quesLink": "https://leetcode.com/problems/sliding-window-median/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Heap (Priority Queue)"
        ]
    },
    "magical-string": {
        "quesName": "Magical String",
        "quesLink": "https://leetcode.com/problems/magical-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "license-key-formatting": {
        "quesName": "License Key Formatting",
        "quesLink": "https://leetcode.com/problems/license-key-formatting/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "smallest-good-base": {
        "quesName": "Smallest Good Base",
        "quesLink": "https://leetcode.com/problems/smallest-good-base/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search"
        ]
    },
    "max-consecutive-ones": {
        "quesName": "Max Consecutive Ones",
        "quesLink": "https://leetcode.com/problems/max-consecutive-ones/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "predict-the-winner": {
        "quesName": "Predict the Winner",
        "quesLink": "https://leetcode.com/problems/predict-the-winner/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Recursion",
            "Game Theory"
        ]
    },
    "zuma-game": {
        "quesName": "Zuma Game",
        "quesLink": "https://leetcode.com/problems/zuma-game/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Stack",
            "Breadth-First Search",
            "Memoization"
        ]
    },
    "non-decreasing-subsequences": {
        "quesName": "Non-decreasing Subsequences",
        "quesLink": "https://leetcode.com/problems/non-decreasing-subsequences/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Backtracking",
            "Bit Manipulation"
        ]
    },
    "construct-the-rectangle": {
        "quesName": "Construct the Rectangle",
        "quesLink": "https://leetcode.com/problems/construct-the-rectangle/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "reverse-pairs": {
        "quesName": "Reverse Pairs",
        "quesLink": "https://leetcode.com/problems/reverse-pairs/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Merge Sort",
            "Ordered Set"
        ]
    },
    "target-sum": {
        "quesName": "Target Sum",
        "quesLink": "https://leetcode.com/problems/target-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking"
        ]
    },
    "teemo-attacking": {
        "quesName": "Teemo Attacking",
        "quesLink": "https://leetcode.com/problems/teemo-attacking/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "next-greater-element-i": {
        "quesName": "Next Greater Element I",
        "quesLink": "https://leetcode.com/problems/next-greater-element-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "random-point-in-non-overlapping-rectangles": {
        "quesName": "Random Point in Non-overlapping Rectangles",
        "quesLink": "https://leetcode.com/problems/random-point-in-non-overlapping-rectangles/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Reservoir Sampling",
            "Prefix Sum",
            "Ordered Set",
            "Randomized"
        ]
    },
    "diagonal-traverse": {
        "quesName": "Diagonal Traverse",
        "quesLink": "https://leetcode.com/problems/diagonal-traverse/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "keyboard-row": {
        "quesName": "Keyboard Row",
        "quesLink": "https://leetcode.com/problems/keyboard-row/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "find-mode-in-binary-search-tree": {
        "quesName": "Find Mode in Binary Search Tree",
        "quesLink": "https://leetcode.com/problems/find-mode-in-binary-search-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "ipo": {
        "quesName": "IPO",
        "quesLink": "https://leetcode.com/problems/ipo/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "next-greater-element-ii": {
        "quesName": "Next Greater Element II",
        "quesLink": "https://leetcode.com/problems/next-greater-element-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "base-7": {
        "quesName": "Base 7",
        "quesLink": "https://leetcode.com/problems/base-7/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "relative-ranks": {
        "quesName": "Relative Ranks",
        "quesLink": "https://leetcode.com/problems/relative-ranks/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "perfect-number": {
        "quesName": "Perfect Number",
        "quesLink": "https://leetcode.com/problems/perfect-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "most-frequent-subtree-sum": {
        "quesName": "Most Frequent Subtree Sum",
        "quesLink": "https://leetcode.com/problems/most-frequent-subtree-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "fibonacci-number": {
        "quesName": "Fibonacci Number",
        "quesLink": "https://leetcode.com/problems/fibonacci-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Recursion",
            "Memoization"
        ]
    },
    "game-play-analysis-i": {
        "quesName": "Game Play Analysis I",
        "quesLink": "https://leetcode.com/problems/game-play-analysis-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "find-bottom-left-tree-value": {
        "quesName": "Find Bottom Left Tree Value",
        "quesLink": "https://leetcode.com/problems/find-bottom-left-tree-value/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "freedom-trail": {
        "quesName": "Freedom Trail",
        "quesLink": "https://leetcode.com/problems/freedom-trail/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search"
        ]
    },
    "find-largest-value-in-each-tree-row": {
        "quesName": "Find Largest Value in Each Tree Row",
        "quesLink": "https://leetcode.com/problems/find-largest-value-in-each-tree-row/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "longest-palindromic-subsequence": {
        "quesName": "Longest Palindromic Subsequence",
        "quesLink": "https://leetcode.com/problems/longest-palindromic-subsequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "super-washing-machines": {
        "quesName": "Super Washing Machines",
        "quesLink": "https://leetcode.com/problems/super-washing-machines/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "coin-change-ii": {
        "quesName": "Coin Change II",
        "quesLink": "https://leetcode.com/problems/coin-change-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "random-flip-matrix": {
        "quesName": "Random Flip Matrix",
        "quesLink": "https://leetcode.com/problems/random-flip-matrix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "Reservoir Sampling",
            "Randomized"
        ]
    },
    "detect-capital": {
        "quesName": "Detect Capital",
        "quesLink": "https://leetcode.com/problems/detect-capital/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "longest-uncommon-subsequence-i": {
        "quesName": "Longest Uncommon Subsequence I",
        "quesLink": "https://leetcode.com/problems/longest-uncommon-subsequence-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "longest-uncommon-subsequence-ii": {
        "quesName": "Longest Uncommon Subsequence II",
        "quesLink": "https://leetcode.com/problems/longest-uncommon-subsequence-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "String",
            "Sorting"
        ]
    },
    "continuous-subarray-sum": {
        "quesName": "Continuous Subarray Sum",
        "quesLink": "https://leetcode.com/problems/continuous-subarray-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Prefix Sum"
        ]
    },
    "longest-word-in-dictionary-through-deleting": {
        "quesName": "Longest Word in Dictionary through Deleting",
        "quesLink": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "String",
            "Sorting"
        ]
    },
    "contiguous-array": {
        "quesName": "Contiguous Array",
        "quesLink": "https://leetcode.com/problems/contiguous-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ]
    },
    "beautiful-arrangement": {
        "quesName": "Beautiful Arrangement",
        "quesLink": "https://leetcode.com/problems/beautiful-arrangement/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "random-pick-with-weight": {
        "quesName": "Random Pick with Weight",
        "quesLink": "https://leetcode.com/problems/random-pick-with-weight/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Prefix Sum",
            "Randomized"
        ]
    },
    "minesweeper": {
        "quesName": "Minesweeper",
        "quesLink": "https://leetcode.com/problems/minesweeper/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "minimum-absolute-difference-in-bst": {
        "quesName": "Minimum Absolute Difference in BST",
        "quesLink": "https://leetcode.com/problems/minimum-absolute-difference-in-bst/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "k-diff-pairs-in-an-array": {
        "quesName": "K-diff Pairs in an Array",
        "quesLink": "https://leetcode.com/problems/k-diff-pairs-in-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "encode-and-decode-tinyurl": {
        "quesName": "Encode and Decode TinyURL",
        "quesLink": "https://leetcode.com/problems/encode-and-decode-tinyurl/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Design",
            "Hash Function"
        ]
    },
    "complex-number-multiplication": {
        "quesName": "Complex Number Multiplication",
        "quesLink": "https://leetcode.com/problems/complex-number-multiplication/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ]
    },
    "convert-bst-to-greater-tree": {
        "quesName": "Convert BST to Greater Tree",
        "quesLink": "https://leetcode.com/problems/convert-bst-to-greater-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "minimum-time-difference": {
        "quesName": "Minimum Time Difference",
        "quesLink": "https://leetcode.com/problems/minimum-time-difference/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "String",
            "Sorting"
        ]
    },
    "single-element-in-a-sorted-array": {
        "quesName": "Single Element in a Sorted Array",
        "quesLink": "https://leetcode.com/problems/single-element-in-a-sorted-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "reverse-string-ii": {
        "quesName": "Reverse String II",
        "quesLink": "https://leetcode.com/problems/reverse-string-ii/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "01-matrix": {
        "quesName": "01 Matrix",
        "quesLink": "https://leetcode.com/problems/01-matrix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "diameter-of-binary-tree": {
        "quesName": "Diameter of Binary Tree",
        "quesLink": "https://leetcode.com/problems/diameter-of-binary-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "remove-boxes": {
        "quesName": "Remove Boxes",
        "quesLink": "https://leetcode.com/problems/remove-boxes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Memoization"
        ]
    },
    "number-of-provinces": {
        "quesName": "Number of Provinces",
        "quesLink": "https://leetcode.com/problems/number-of-provinces/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "game-play-analysis-iv": {
        "quesName": "Game Play Analysis IV",
        "quesLink": "https://leetcode.com/problems/game-play-analysis-iv/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "student-attendance-record-i": {
        "quesName": "Student Attendance Record I",
        "quesLink": "https://leetcode.com/problems/student-attendance-record-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "student-attendance-record-ii": {
        "quesName": "Student Attendance Record II",
        "quesLink": "https://leetcode.com/problems/student-attendance-record-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "optimal-division": {
        "quesName": "Optimal Division",
        "quesLink": "https://leetcode.com/problems/optimal-division/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming"
        ]
    },
    "brick-wall": {
        "quesName": "Brick Wall",
        "quesLink": "https://leetcode.com/problems/brick-wall/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "next-greater-element-iii": {
        "quesName": "Next Greater Element III",
        "quesLink": "https://leetcode.com/problems/next-greater-element-iii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Two Pointers",
            "String"
        ]
    },
    "reverse-words-in-a-string-iii": {
        "quesName": "Reverse Words in a String III",
        "quesLink": "https://leetcode.com/problems/reverse-words-in-a-string-iii/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "logical-or-of-two-binary-grids-represented-as-quad-trees": {
        "quesName": "Logical OR of Two Binary Grids Represented as Quad-Trees",
        "quesLink": "https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Divide and Conquer",
            "Tree"
        ]
    },
    "maximum-depth-of-n-ary-tree": {
        "quesName": "Maximum Depth of N-ary Tree",
        "quesLink": "https://leetcode.com/problems/maximum-depth-of-n-ary-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ]
    },
    "subarray-sum-equals-k": {
        "quesName": "Subarray Sum Equals K",
        "quesLink": "https://leetcode.com/problems/subarray-sum-equals-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ]
    },
    "array-partition": {
        "quesName": "Array Partition",
        "quesLink": "https://leetcode.com/problems/array-partition/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Counting Sort"
        ]
    },
    "binary-tree-tilt": {
        "quesName": "Binary Tree Tilt",
        "quesLink": "https://leetcode.com/problems/binary-tree-tilt/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "find-the-closest-palindrome": {
        "quesName": "Find the Closest Palindrome",
        "quesLink": "https://leetcode.com/problems/find-the-closest-palindrome/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "array-nesting": {
        "quesName": "Array Nesting",
        "quesLink": "https://leetcode.com/problems/array-nesting/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search"
        ]
    },
    "reshape-the-matrix": {
        "quesName": "Reshape the Matrix",
        "quesLink": "https://leetcode.com/problems/reshape-the-matrix/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "permutation-in-string": {
        "quesName": "Permutation in String",
        "quesLink": "https://leetcode.com/problems/permutation-in-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Two Pointers",
            "String",
            "Sliding Window"
        ]
    },
    "managers-with-at-least-5-direct-reports": {
        "quesName": "Managers with at Least 5 Direct Reports",
        "quesLink": "https://leetcode.com/problems/managers-with-at-least-5-direct-reports/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "subtree-of-another-tree": {
        "quesName": "Subtree of Another Tree",
        "quesLink": "https://leetcode.com/problems/subtree-of-another-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "String Matching",
            "Binary Tree",
            "Hash Function"
        ]
    },
    "distribute-candies": {
        "quesName": "Distribute Candies",
        "quesLink": "https://leetcode.com/problems/distribute-candies/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "out-of-boundary-paths": {
        "quesName": "Out of Boundary Paths",
        "quesLink": "https://leetcode.com/problems/out-of-boundary-paths/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "employee-bonus": {
        "quesName": "Employee Bonus",
        "quesLink": "https://leetcode.com/problems/employee-bonus/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "shortest-unsorted-continuous-subarray": {
        "quesName": "Shortest Unsorted Continuous Subarray",
        "quesLink": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Stack",
            "Greedy",
            "Sorting",
            "Monotonic Stack"
        ]
    },
    "delete-operation-for-two-strings": {
        "quesName": "Delete Operation for Two Strings",
        "quesLink": "https://leetcode.com/problems/delete-operation-for-two-strings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "find-customer-referee": {
        "quesName": "Find Customer Referee",
        "quesLink": "https://leetcode.com/problems/find-customer-referee/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "investments-in-2016": {
        "quesName": "Investments in 2016",
        "quesLink": "https://leetcode.com/problems/investments-in-2016/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "customer-placing-the-largest-number-of-orders": {
        "quesName": "Customer Placing the Largest Number of Orders",
        "quesLink": "https://leetcode.com/problems/customer-placing-the-largest-number-of-orders/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "erect-the-fence": {
        "quesName": "Erect the Fence",
        "quesLink": "https://leetcode.com/problems/erect-the-fence/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ]
    },
    "n-ary-tree-preorder-traversal": {
        "quesName": "N-ary Tree Preorder Traversal",
        "quesLink": "https://leetcode.com/problems/n-ary-tree-preorder-traversal/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search"
        ]
    },
    "n-ary-tree-postorder-traversal": {
        "quesName": "N-ary Tree Postorder Traversal",
        "quesLink": "https://leetcode.com/problems/n-ary-tree-postorder-traversal/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search"
        ]
    },
    "tag-validator": {
        "quesName": "Tag Validator",
        "quesLink": "https://leetcode.com/problems/tag-validator/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "fraction-addition-and-subtraction": {
        "quesName": "Fraction Addition and Subtraction",
        "quesLink": "https://leetcode.com/problems/fraction-addition-and-subtraction/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ]
    },
    "valid-square": {
        "quesName": "Valid Square",
        "quesLink": "https://leetcode.com/problems/valid-square/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Geometry"
        ]
    },
    "longest-harmonious-subsequence": {
        "quesName": "Longest Harmonious Subsequence",
        "quesLink": "https://leetcode.com/problems/longest-harmonious-subsequence/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ]
    },
    "big-countries": {
        "quesName": "Big Countries",
        "quesLink": "https://leetcode.com/problems/big-countries/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "classes-more-than-5-students": {
        "quesName": "Classes More Than 5 Students",
        "quesLink": "https://leetcode.com/problems/classes-more-than-5-students/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "range-addition-ii": {
        "quesName": "Range Addition II",
        "quesLink": "https://leetcode.com/problems/range-addition-ii/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "minimum-index-sum-of-two-lists": {
        "quesName": "Minimum Index Sum of Two Lists",
        "quesLink": "https://leetcode.com/problems/minimum-index-sum-of-two-lists/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "non-negative-integers-without-consecutive-ones": {
        "quesName": "Non-negative Integers without Consecutive Ones",
        "quesLink": "https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "human-traffic-of-stadium": {
        "quesName": "Human Traffic of Stadium",
        "quesLink": "https://leetcode.com/problems/human-traffic-of-stadium/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "friend-requests-ii-who-has-the-most-friends": {
        "quesName": "Friend Requests II: Who Has the Most Friends",
        "quesLink": "https://leetcode.com/problems/friend-requests-ii-who-has-the-most-friends/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "can-place-flowers": {
        "quesName": "Can Place Flowers",
        "quesLink": "https://leetcode.com/problems/can-place-flowers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "construct-string-from-binary-tree": {
        "quesName": "Construct String from Binary Tree",
        "quesLink": "https://leetcode.com/problems/construct-string-from-binary-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "sales-person": {
        "quesName": "Sales Person",
        "quesLink": "https://leetcode.com/problems/sales-person/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "tree-node": {
        "quesName": "Tree Node",
        "quesLink": "https://leetcode.com/problems/tree-node/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "find-duplicate-file-in-system": {
        "quesName": "Find Duplicate File in System",
        "quesLink": "https://leetcode.com/problems/find-duplicate-file-in-system/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "triangle-judgement": {
        "quesName": "Triangle Judgement",
        "quesLink": "https://leetcode.com/problems/triangle-judgement/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "valid-triangle-number": {
        "quesName": "Valid Triangle Number",
        "quesLink": "https://leetcode.com/problems/valid-triangle-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Sorting"
        ]
    },
    "merge-two-binary-trees": {
        "quesName": "Merge Two Binary Trees",
        "quesLink": "https://leetcode.com/problems/merge-two-binary-trees/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "biggest-single-number": {
        "quesName": "Biggest Single Number",
        "quesLink": "https://leetcode.com/problems/biggest-single-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "not-boring-movies": {
        "quesName": "Not Boring Movies",
        "quesLink": "https://leetcode.com/problems/not-boring-movies/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "task-scheduler": {
        "quesName": "Task Scheduler",
        "quesLink": "https://leetcode.com/problems/task-scheduler/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Counting"
        ]
    },
    "design-circular-queue": {
        "quesName": "Design Circular Queue",
        "quesLink": "https://leetcode.com/problems/design-circular-queue/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Linked List",
            "Design",
            "Queue"
        ]
    },
    "add-one-row-to-tree": {
        "quesName": "Add One Row to Tree",
        "quesLink": "https://leetcode.com/problems/add-one-row-to-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "exchange-seats": {
        "quesName": "Exchange Seats",
        "quesLink": "https://leetcode.com/problems/exchange-seats/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "swap-salary": {
        "quesName": "Swap Salary",
        "quesLink": "https://leetcode.com/problems/swap-salary/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "maximum-product-of-three-numbers": {
        "quesName": "Maximum Product of Three Numbers",
        "quesLink": "https://leetcode.com/problems/maximum-product-of-three-numbers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Sorting"
        ]
    },
    "k-inverse-pairs-array": {
        "quesName": "K Inverse Pairs Array",
        "quesLink": "https://leetcode.com/problems/k-inverse-pairs-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "course-schedule-iii": {
        "quesName": "Course Schedule III",
        "quesLink": "https://leetcode.com/problems/course-schedule-iii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "smallest-range-covering-elements-from-k-lists": {
        "quesName": "Smallest Range Covering Elements from K Lists",
        "quesLink": "https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sliding Window",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "sum-of-square-numbers": {
        "quesName": "Sum of Square Numbers",
        "quesLink": "https://leetcode.com/problems/sum-of-square-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Two Pointers",
            "Binary Search"
        ]
    },
    "exclusive-time-of-functions": {
        "quesName": "Exclusive Time of Functions",
        "quesLink": "https://leetcode.com/problems/exclusive-time-of-functions/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack"
        ]
    },
    "average-of-levels-in-binary-tree": {
        "quesName": "Average of Levels in Binary Tree",
        "quesLink": "https://leetcode.com/problems/average-of-levels-in-binary-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "shopping-offers": {
        "quesName": "Shopping Offers",
        "quesLink": "https://leetcode.com/problems/shopping-offers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Memoization",
            "Bitmask"
        ]
    },
    "decode-ways-ii": {
        "quesName": "Decode Ways II",
        "quesLink": "https://leetcode.com/problems/decode-ways-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "solve-the-equation": {
        "quesName": "Solve the Equation",
        "quesLink": "https://leetcode.com/problems/solve-the-equation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ]
    },
    "design-circular-deque": {
        "quesName": "Design Circular Deque",
        "quesLink": "https://leetcode.com/problems/design-circular-deque/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Linked List",
            "Design",
            "Queue"
        ]
    },
    "maximum-average-subarray-i": {
        "quesName": "Maximum Average Subarray I",
        "quesLink": "https://leetcode.com/problems/maximum-average-subarray-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sliding Window"
        ]
    },
    "set-mismatch": {
        "quesName": "Set Mismatch",
        "quesLink": "https://leetcode.com/problems/set-mismatch/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Sorting"
        ]
    },
    "maximum-length-of-pair-chain": {
        "quesName": "Maximum Length of Pair Chain",
        "quesLink": "https://leetcode.com/problems/maximum-length-of-pair-chain/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ]
    },
    "palindromic-substrings": {
        "quesName": "Palindromic Substrings",
        "quesLink": "https://leetcode.com/problems/palindromic-substrings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "replace-words": {
        "quesName": "Replace Words",
        "quesLink": "https://leetcode.com/problems/replace-words/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Trie"
        ]
    },
    "dota2-senate": {
        "quesName": "Dota2 Senate",
        "quesLink": "https://leetcode.com/problems/dota2-senate/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy",
            "Queue"
        ]
    },
    "2-keys-keyboard": {
        "quesName": "2 Keys Keyboard",
        "quesLink": "https://leetcode.com/problems/2-keys-keyboard/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming"
        ]
    },
    "find-duplicate-subtrees": {
        "quesName": "Find Duplicate Subtrees",
        "quesLink": "https://leetcode.com/problems/find-duplicate-subtrees/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "two-sum-iv-input-is-a-bst": {
        "quesName": "Two Sum IV - Input is a BST",
        "quesLink": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Two Pointers",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "maximum-binary-tree": {
        "quesName": "Maximum Binary Tree",
        "quesLink": "https://leetcode.com/problems/maximum-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Stack",
            "Tree",
            "Monotonic Stack",
            "Binary Tree"
        ]
    },
    "print-binary-tree": {
        "quesName": "Print Binary Tree",
        "quesLink": "https://leetcode.com/problems/print-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "robot-return-to-origin": {
        "quesName": "Robot Return to Origin",
        "quesLink": "https://leetcode.com/problems/robot-return-to-origin/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Simulation"
        ]
    },
    "find-k-closest-elements": {
        "quesName": "Find K Closest Elements",
        "quesLink": "https://leetcode.com/problems/find-k-closest-elements/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sliding Window",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "split-array-into-consecutive-subsequences": {
        "quesName": "Split Array into Consecutive Subsequences",
        "quesLink": "https://leetcode.com/problems/split-array-into-consecutive-subsequences/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "image-smoother": {
        "quesName": "Image Smoother",
        "quesLink": "https://leetcode.com/problems/image-smoother/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "maximum-width-of-binary-tree": {
        "quesName": "Maximum Width of Binary Tree",
        "quesLink": "https://leetcode.com/problems/maximum-width-of-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "strange-printer": {
        "quesName": "Strange Printer",
        "quesLink": "https://leetcode.com/problems/strange-printer/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "non-decreasing-array": {
        "quesName": "Non-decreasing Array",
        "quesLink": "https://leetcode.com/problems/non-decreasing-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "beautiful-arrangement-ii": {
        "quesName": "Beautiful Arrangement II",
        "quesLink": "https://leetcode.com/problems/beautiful-arrangement-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "kth-smallest-number-in-multiplication-table": {
        "quesName": "Kth Smallest Number in Multiplication Table",
        "quesLink": "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search"
        ]
    },
    "trim-a-binary-search-tree": {
        "quesName": "Trim a Binary Search Tree",
        "quesLink": "https://leetcode.com/problems/trim-a-binary-search-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "maximum-swap": {
        "quesName": "Maximum Swap",
        "quesLink": "https://leetcode.com/problems/maximum-swap/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "second-minimum-node-in-a-binary-tree": {
        "quesName": "Second Minimum Node In a Binary Tree",
        "quesLink": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "bulb-switcher-ii": {
        "quesName": "Bulb Switcher II",
        "quesLink": "https://leetcode.com/problems/bulb-switcher-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Bit Manipulation",
            "Depth-First Search",
            "Breadth-First Search"
        ]
    },
    "number-of-longest-increasing-subsequence": {
        "quesName": "Number of Longest Increasing Subsequence",
        "quesLink": "https://leetcode.com/problems/number-of-longest-increasing-subsequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Binary Indexed Tree",
            "Segment Tree"
        ]
    },
    "longest-continuous-increasing-subsequence": {
        "quesName": "Longest Continuous Increasing Subsequence",
        "quesLink": "https://leetcode.com/problems/longest-continuous-increasing-subsequence/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "cut-off-trees-for-golf-event": {
        "quesName": "Cut Off Trees for Golf Event",
        "quesLink": "https://leetcode.com/problems/cut-off-trees-for-golf-event/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Heap (Priority Queue)",
            "Matrix"
        ]
    },
    "implement-magic-dictionary": {
        "quesName": "Implement Magic Dictionary",
        "quesLink": "https://leetcode.com/problems/implement-magic-dictionary/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Depth-First Search",
            "Design",
            "Trie"
        ]
    },
    "map-sum-pairs": {
        "quesName": "Map Sum Pairs",
        "quesLink": "https://leetcode.com/problems/map-sum-pairs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Design",
            "Trie"
        ]
    },
    "valid-parenthesis-string": {
        "quesName": "Valid Parenthesis String",
        "quesLink": "https://leetcode.com/problems/valid-parenthesis-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Stack",
            "Greedy"
        ]
    },
    "24-game": {
        "quesName": "24 Game",
        "quesLink": "https://leetcode.com/problems/24-game/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Backtracking"
        ]
    },
    "valid-palindrome-ii": {
        "quesName": "Valid Palindrome II",
        "quesLink": "https://leetcode.com/problems/valid-palindrome-ii/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "Greedy"
        ]
    },
    "baseball-game": {
        "quesName": "Baseball Game",
        "quesLink": "https://leetcode.com/problems/baseball-game/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Simulation"
        ]
    },
    "redundant-connection": {
        "quesName": "Redundant Connection",
        "quesLink": "https://leetcode.com/problems/redundant-connection/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "redundant-connection-ii": {
        "quesName": "Redundant Connection II",
        "quesLink": "https://leetcode.com/problems/redundant-connection-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "repeated-string-match": {
        "quesName": "Repeated String Match",
        "quesLink": "https://leetcode.com/problems/repeated-string-match/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "String Matching"
        ]
    },
    "longest-univalue-path": {
        "quesName": "Longest Univalue Path",
        "quesLink": "https://leetcode.com/problems/longest-univalue-path/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "knight-probability-in-chessboard": {
        "quesName": "Knight Probability in Chessboard",
        "quesLink": "https://leetcode.com/problems/knight-probability-in-chessboard/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "maximum-sum-of-3-non-overlapping-subarrays": {
        "quesName": "Maximum Sum of 3 Non-Overlapping Subarrays",
        "quesLink": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "employee-importance": {
        "quesName": "Employee Importance",
        "quesLink": "https://leetcode.com/problems/employee-importance/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search"
        ]
    },
    "stickers-to-spell-word": {
        "quesName": "Stickers to Spell Word",
        "quesLink": "https://leetcode.com/problems/stickers-to-spell-word/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "top-k-frequent-words": {
        "quesName": "Top K Frequent Words",
        "quesLink": "https://leetcode.com/problems/top-k-frequent-words/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Trie",
            "Sorting",
            "Heap (Priority Queue)",
            "Bucket Sort",
            "Counting"
        ]
    },
    "binary-number-with-alternating-bits": {
        "quesName": "Binary Number with Alternating Bits",
        "quesLink": "https://leetcode.com/problems/binary-number-with-alternating-bits/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Bit Manipulation"
        ]
    },
    "max-area-of-island": {
        "quesName": "Max Area of Island",
        "quesLink": "https://leetcode.com/problems/max-area-of-island/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "count-binary-substrings": {
        "quesName": "Count Binary Substrings",
        "quesLink": "https://leetcode.com/problems/count-binary-substrings/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "degree-of-an-array": {
        "quesName": "Degree of an Array",
        "quesLink": "https://leetcode.com/problems/degree-of-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "partition-to-k-equal-sum-subsets": {
        "quesName": "Partition to K Equal Sum Subsets",
        "quesLink": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Memoization",
            "Bitmask"
        ]
    },
    "falling-squares": {
        "quesName": "Falling Squares",
        "quesLink": "https://leetcode.com/problems/falling-squares/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Segment Tree",
            "Ordered Set"
        ]
    },
    "search-in-a-binary-search-tree": {
        "quesName": "Search in a Binary Search Tree",
        "quesLink": "https://leetcode.com/problems/search-in-a-binary-search-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "insert-into-a-binary-search-tree": {
        "quesName": "Insert into a Binary Search Tree",
        "quesLink": "https://leetcode.com/problems/insert-into-a-binary-search-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "kth-largest-element-in-a-stream": {
        "quesName": "Kth Largest Element in a Stream",
        "quesLink": "https://leetcode.com/problems/kth-largest-element-in-a-stream/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Design",
            "Binary Search Tree",
            "Heap (Priority Queue)",
            "Binary Tree",
            "Data Stream"
        ]
    },
    "binary-search": {
        "quesName": "Binary Search",
        "quesLink": "https://leetcode.com/problems/binary-search/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "design-hashset": {
        "quesName": "Design HashSet",
        "quesLink": "https://leetcode.com/problems/design-hashset/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Linked List",
            "Design",
            "Hash Function"
        ]
    },
    "design-hashmap": {
        "quesName": "Design HashMap",
        "quesLink": "https://leetcode.com/problems/design-hashmap/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Linked List",
            "Design",
            "Hash Function"
        ]
    },
    "design-linked-list": {
        "quesName": "Design Linked List",
        "quesLink": "https://leetcode.com/problems/design-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Design"
        ]
    },
    "to-lower-case": {
        "quesName": "To Lower Case",
        "quesLink": "https://leetcode.com/problems/to-lower-case/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "random-pick-with-blacklist": {
        "quesName": "Random Pick with Blacklist",
        "quesLink": "https://leetcode.com/problems/random-pick-with-blacklist/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Binary Search",
            "Sorting",
            "Randomized"
        ]
    },
    "minimum-ascii-delete-sum-for-two-strings": {
        "quesName": "Minimum ASCII Delete Sum for Two Strings",
        "quesLink": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "subarray-product-less-than-k": {
        "quesName": "Subarray Product Less Than K",
        "quesLink": "https://leetcode.com/problems/subarray-product-less-than-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sliding Window"
        ]
    },
    "best-time-to-buy-and-sell-stock-with-transaction-fee": {
        "quesName": "Best Time to Buy and Sell Stock with Transaction Fee",
        "quesLink": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "range-module": {
        "quesName": "Range Module",
        "quesLink": "https://leetcode.com/problems/range-module/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Design",
            "Segment Tree",
            "Ordered Set"
        ]
    },
    "1-bit-and-2-bit-characters": {
        "quesName": "1-bit and 2-bit Characters",
        "quesLink": "https://leetcode.com/problems/1-bit-and-2-bit-characters/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "maximum-length-of-repeated-subarray": {
        "quesName": "Maximum Length of Repeated Subarray",
        "quesLink": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sliding Window",
            "Rolling Hash",
            "Hash Function"
        ]
    },
    "find-k-th-smallest-pair-distance": {
        "quesName": "Find K-th Smallest Pair Distance",
        "quesLink": "https://leetcode.com/problems/find-k-th-smallest-pair-distance/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "longest-word-in-dictionary": {
        "quesName": "Longest Word in Dictionary",
        "quesLink": "https://leetcode.com/problems/longest-word-in-dictionary/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Trie",
            "Sorting"
        ]
    },
    "accounts-merge": {
        "quesName": "Accounts Merge",
        "quesLink": "https://leetcode.com/problems/accounts-merge/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Sorting"
        ]
    },
    "remove-comments": {
        "quesName": "Remove Comments",
        "quesLink": "https://leetcode.com/problems/remove-comments/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "find-pivot-index": {
        "quesName": "Find Pivot Index",
        "quesLink": "https://leetcode.com/problems/find-pivot-index/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "split-linked-list-in-parts": {
        "quesName": "Split Linked List in Parts",
        "quesLink": "https://leetcode.com/problems/split-linked-list-in-parts/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List"
        ]
    },
    "number-of-atoms": {
        "quesName": "Number of Atoms",
        "quesLink": "https://leetcode.com/problems/number-of-atoms/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Stack",
            "Sorting"
        ]
    },
    "self-dividing-numbers": {
        "quesName": "Self Dividing Numbers",
        "quesLink": "https://leetcode.com/problems/self-dividing-numbers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "my-calendar-i": {
        "quesName": "My Calendar I",
        "quesLink": "https://leetcode.com/problems/my-calendar-i/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Binary Search",
            "Design",
            "Segment Tree",
            "Ordered Set"
        ]
    },
    "count-different-palindromic-subsequences": {
        "quesName": "Count Different Palindromic Subsequences",
        "quesLink": "https://leetcode.com/problems/count-different-palindromic-subsequences/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "my-calendar-ii": {
        "quesName": "My Calendar II",
        "quesLink": "https://leetcode.com/problems/my-calendar-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Binary Search",
            "Design",
            "Segment Tree",
            "Ordered Set"
        ]
    },
    "my-calendar-iii": {
        "quesName": "My Calendar III",
        "quesLink": "https://leetcode.com/problems/my-calendar-iii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Binary Search",
            "Design",
            "Segment Tree",
            "Ordered Set"
        ]
    },
    "flood-fill": {
        "quesName": "Flood Fill",
        "quesLink": "https://leetcode.com/problems/flood-fill/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "asteroid-collision": {
        "quesName": "Asteroid Collision",
        "quesLink": "https://leetcode.com/problems/asteroid-collision/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Simulation"
        ]
    },
    "parse-lisp-expression": {
        "quesName": "Parse Lisp Expression",
        "quesLink": "https://leetcode.com/problems/parse-lisp-expression/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Stack",
            "Recursion"
        ]
    },
    "monotone-increasing-digits": {
        "quesName": "Monotone Increasing Digits",
        "quesLink": "https://leetcode.com/problems/monotone-increasing-digits/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "daily-temperatures": {
        "quesName": "Daily Temperatures",
        "quesLink": "https://leetcode.com/problems/daily-temperatures/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "delete-and-earn": {
        "quesName": "Delete and Earn",
        "quesLink": "https://leetcode.com/problems/delete-and-earn/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ]
    },
    "cherry-pickup": {
        "quesName": "Cherry Pickup",
        "quesLink": "https://leetcode.com/problems/cherry-pickup/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "network-delay-time": {
        "quesName": "Network Delay Time",
        "quesLink": "https://leetcode.com/problems/network-delay-time/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ]
    },
    "find-smallest-letter-greater-than-target": {
        "quesName": "Find Smallest Letter Greater Than Target",
        "quesLink": "https://leetcode.com/problems/find-smallest-letter-greater-than-target/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "prefix-and-suffix-search": {
        "quesName": "Prefix and Suffix Search",
        "quesLink": "https://leetcode.com/problems/prefix-and-suffix-search/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Design",
            "Trie"
        ]
    },
    "min-cost-climbing-stairs": {
        "quesName": "Min Cost Climbing Stairs",
        "quesLink": "https://leetcode.com/problems/min-cost-climbing-stairs/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "largest-number-at-least-twice-of-others": {
        "quesName": "Largest Number At Least Twice of Others",
        "quesLink": "https://leetcode.com/problems/largest-number-at-least-twice-of-others/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "shortest-completing-word": {
        "quesName": "Shortest Completing Word",
        "quesLink": "https://leetcode.com/problems/shortest-completing-word/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "contain-virus": {
        "quesName": "Contain Virus",
        "quesLink": "https://leetcode.com/problems/contain-virus/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix",
            "Simulation"
        ]
    },
    "open-the-lock": {
        "quesName": "Open the Lock",
        "quesLink": "https://leetcode.com/problems/open-the-lock/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Breadth-First Search"
        ]
    },
    "cracking-the-safe": {
        "quesName": "Cracking the Safe",
        "quesLink": "https://leetcode.com/problems/cracking-the-safe/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Graph",
            "Eulerian Circuit"
        ]
    },
    "reach-a-number": {
        "quesName": "Reach a Number",
        "quesLink": "https://leetcode.com/problems/reach-a-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search"
        ]
    },
    "pyramid-transition-matrix": {
        "quesName": "Pyramid Transition Matrix",
        "quesLink": "https://leetcode.com/problems/pyramid-transition-matrix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Bit Manipulation",
            "Depth-First Search",
            "Breadth-First Search"
        ]
    },
    "set-intersection-size-at-least-two": {
        "quesName": "Set Intersection Size At Least Two",
        "quesLink": "https://leetcode.com/problems/set-intersection-size-at-least-two/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "special-binary-string": {
        "quesName": "Special Binary String",
        "quesLink": "https://leetcode.com/problems/special-binary-string/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Recursion"
        ]
    },
    "prime-number-of-set-bits-in-binary-representation": {
        "quesName": "Prime Number of Set Bits in Binary Representation",
        "quesLink": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Bit Manipulation"
        ]
    },
    "partition-labels": {
        "quesName": "Partition Labels",
        "quesLink": "https://leetcode.com/problems/partition-labels/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Two Pointers",
            "String",
            "Greedy"
        ]
    },
    "largest-plus-sign": {
        "quesName": "Largest Plus Sign",
        "quesLink": "https://leetcode.com/problems/largest-plus-sign/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "couples-holding-hands": {
        "quesName": "Couples Holding Hands",
        "quesLink": "https://leetcode.com/problems/couples-holding-hands/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Greedy",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "toeplitz-matrix": {
        "quesName": "Toeplitz Matrix",
        "quesLink": "https://leetcode.com/problems/toeplitz-matrix/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "reorganize-string": {
        "quesName": "Reorganize String",
        "quesLink": "https://leetcode.com/problems/reorganize-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Counting"
        ]
    },
    "max-chunks-to-make-sorted-ii": {
        "quesName": "Max Chunks To Make Sorted II",
        "quesLink": "https://leetcode.com/problems/max-chunks-to-make-sorted-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Greedy",
            "Sorting",
            "Monotonic Stack"
        ]
    },
    "max-chunks-to-make-sorted": {
        "quesName": "Max Chunks To Make Sorted",
        "quesLink": "https://leetcode.com/problems/max-chunks-to-make-sorted/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Greedy",
            "Sorting",
            "Monotonic Stack"
        ]
    },
    "basic-calculator-iv": {
        "quesName": "Basic Calculator IV",
        "quesLink": "https://leetcode.com/problems/basic-calculator-iv/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "String",
            "Stack",
            "Recursion"
        ]
    },
    "jewels-and-stones": {
        "quesName": "Jewels and Stones",
        "quesLink": "https://leetcode.com/problems/jewels-and-stones/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "sliding-puzzle": {
        "quesName": "Sliding Puzzle",
        "quesLink": "https://leetcode.com/problems/sliding-puzzle/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "global-and-local-inversions": {
        "quesName": "Global and Local Inversions",
        "quesLink": "https://leetcode.com/problems/global-and-local-inversions/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "swap-adjacent-in-lr-string": {
        "quesName": "Swap Adjacent in LR String",
        "quesLink": "https://leetcode.com/problems/swap-adjacent-in-lr-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "swim-in-rising-water": {
        "quesName": "Swim in Rising Water",
        "quesLink": "https://leetcode.com/problems/swim-in-rising-water/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Heap (Priority Queue)",
            "Matrix"
        ]
    },
    "k-th-symbol-in-grammar": {
        "quesName": "K-th Symbol in Grammar",
        "quesLink": "https://leetcode.com/problems/k-th-symbol-in-grammar/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Bit Manipulation",
            "Recursion"
        ]
    },
    "reaching-points": {
        "quesName": "Reaching Points",
        "quesLink": "https://leetcode.com/problems/reaching-points/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "rabbits-in-forest": {
        "quesName": "Rabbits in Forest",
        "quesLink": "https://leetcode.com/problems/rabbits-in-forest/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Greedy"
        ]
    },
    "transform-to-chessboard": {
        "quesName": "Transform to Chessboard",
        "quesLink": "https://leetcode.com/problems/transform-to-chessboard/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation",
            "Matrix"
        ]
    },
    "minimum-distance-between-bst-nodes": {
        "quesName": "Minimum Distance Between BST Nodes",
        "quesLink": "https://leetcode.com/problems/minimum-distance-between-bst-nodes/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "letter-case-permutation": {
        "quesName": "Letter Case Permutation",
        "quesLink": "https://leetcode.com/problems/letter-case-permutation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking",
            "Bit Manipulation"
        ]
    },
    "is-graph-bipartite": {
        "quesName": "Is Graph Bipartite?",
        "quesLink": "https://leetcode.com/problems/is-graph-bipartite/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "k-th-smallest-prime-fraction": {
        "quesName": "K-th Smallest Prime Fraction",
        "quesLink": "https://leetcode.com/problems/k-th-smallest-prime-fraction/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "cheapest-flights-within-k-stops": {
        "quesName": "Cheapest Flights Within K Stops",
        "quesLink": "https://leetcode.com/problems/cheapest-flights-within-k-stops/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ]
    },
    "rotated-digits": {
        "quesName": "Rotated Digits",
        "quesLink": "https://leetcode.com/problems/rotated-digits/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming"
        ]
    },
    "escape-the-ghosts": {
        "quesName": "Escape The Ghosts",
        "quesLink": "https://leetcode.com/problems/escape-the-ghosts/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "domino-and-tromino-tiling": {
        "quesName": "Domino and Tromino Tiling",
        "quesLink": "https://leetcode.com/problems/domino-and-tromino-tiling/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "custom-sort-string": {
        "quesName": "Custom Sort String",
        "quesLink": "https://leetcode.com/problems/custom-sort-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sorting"
        ]
    },
    "number-of-matching-subsequences": {
        "quesName": "Number of Matching Subsequences",
        "quesLink": "https://leetcode.com/problems/number-of-matching-subsequences/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Binary Search",
            "Dynamic Programming",
            "Trie",
            "Sorting"
        ]
    },
    "preimage-size-of-factorial-zeroes-function": {
        "quesName": "Preimage Size of Factorial Zeroes Function",
        "quesLink": "https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search"
        ]
    },
    "valid-tic-tac-toe-state": {
        "quesName": "Valid Tic-Tac-Toe State",
        "quesLink": "https://leetcode.com/problems/valid-tic-tac-toe-state/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "number-of-subarrays-with-bounded-maximum": {
        "quesName": "Number of Subarrays with Bounded Maximum",
        "quesLink": "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers"
        ]
    },
    "rotate-string": {
        "quesName": "Rotate String",
        "quesLink": "https://leetcode.com/problems/rotate-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "String Matching"
        ]
    },
    "all-paths-from-source-to-target": {
        "quesName": "All Paths From Source to Target",
        "quesLink": "https://leetcode.com/problems/all-paths-from-source-to-target/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Backtracking",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "smallest-rotation-with-highest-score": {
        "quesName": "Smallest Rotation with Highest Score",
        "quesLink": "https://leetcode.com/problems/smallest-rotation-with-highest-score/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "champagne-tower": {
        "quesName": "Champagne Tower",
        "quesLink": "https://leetcode.com/problems/champagne-tower/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "minimum-swaps-to-make-sequences-increasing": {
        "quesName": "Minimum Swaps To Make Sequences Increasing",
        "quesLink": "https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "find-eventual-safe-states": {
        "quesName": "Find Eventual Safe States",
        "quesLink": "https://leetcode.com/problems/find-eventual-safe-states/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ]
    },
    "bricks-falling-when-hit": {
        "quesName": "Bricks Falling When Hit",
        "quesLink": "https://leetcode.com/problems/bricks-falling-when-hit/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Union Find",
            "Matrix"
        ]
    },
    "unique-morse-code-words": {
        "quesName": "Unique Morse Code Words",
        "quesLink": "https://leetcode.com/problems/unique-morse-code-words/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "split-array-with-same-average": {
        "quesName": "Split Array With Same Average",
        "quesLink": "https://leetcode.com/problems/split-array-with-same-average/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "number-of-lines-to-write-string": {
        "quesName": "Number of Lines To Write String",
        "quesLink": "https://leetcode.com/problems/number-of-lines-to-write-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "max-increase-to-keep-city-skyline": {
        "quesName": "Max Increase to Keep City Skyline",
        "quesLink": "https://leetcode.com/problems/max-increase-to-keep-city-skyline/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Matrix"
        ]
    },
    "soup-servings": {
        "quesName": "Soup Servings",
        "quesLink": "https://leetcode.com/problems/soup-servings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Probability and Statistics"
        ]
    },
    "expressive-words": {
        "quesName": "Expressive Words",
        "quesLink": "https://leetcode.com/problems/expressive-words/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "String"
        ]
    },
    "chalkboard-xor-game": {
        "quesName": "Chalkboard XOR Game",
        "quesLink": "https://leetcode.com/problems/chalkboard-xor-game/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation",
            "Brainteaser",
            "Game Theory"
        ]
    },
    "subdomain-visit-count": {
        "quesName": "Subdomain Visit Count",
        "quesLink": "https://leetcode.com/problems/subdomain-visit-count/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "largest-triangle-area": {
        "quesName": "Largest Triangle Area",
        "quesLink": "https://leetcode.com/problems/largest-triangle-area/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ]
    },
    "largest-sum-of-averages": {
        "quesName": "Largest Sum of Averages",
        "quesLink": "https://leetcode.com/problems/largest-sum-of-averages/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ]
    },
    "binary-tree-pruning": {
        "quesName": "Binary Tree Pruning",
        "quesLink": "https://leetcode.com/problems/binary-tree-pruning/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "bus-routes": {
        "quesName": "Bus Routes",
        "quesLink": "https://leetcode.com/problems/bus-routes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Breadth-First Search"
        ]
    },
    "ambiguous-coordinates": {
        "quesName": "Ambiguous Coordinates",
        "quesLink": "https://leetcode.com/problems/ambiguous-coordinates/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking"
        ]
    },
    "linked-list-components": {
        "quesName": "Linked List Components",
        "quesLink": "https://leetcode.com/problems/linked-list-components/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Linked List"
        ]
    },
    "race-car": {
        "quesName": "Race Car",
        "quesLink": "https://leetcode.com/problems/race-car/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "most-common-word": {
        "quesName": "Most Common Word",
        "quesLink": "https://leetcode.com/problems/most-common-word/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "short-encoding-of-words": {
        "quesName": "Short Encoding of Words",
        "quesLink": "https://leetcode.com/problems/short-encoding-of-words/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Trie"
        ]
    },
    "shortest-distance-to-a-character": {
        "quesName": "Shortest Distance to a Character",
        "quesLink": "https://leetcode.com/problems/shortest-distance-to-a-character/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "String"
        ]
    },
    "card-flipping-game": {
        "quesName": "Card Flipping Game",
        "quesLink": "https://leetcode.com/problems/card-flipping-game/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "binary-trees-with-factors": {
        "quesName": "Binary Trees With Factors",
        "quesLink": "https://leetcode.com/problems/binary-trees-with-factors/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "goat-latin": {
        "quesName": "Goat Latin",
        "quesLink": "https://leetcode.com/problems/goat-latin/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "friends-of-appropriate-ages": {
        "quesName": "Friends Of Appropriate Ages",
        "quesLink": "https://leetcode.com/problems/friends-of-appropriate-ages/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "most-profit-assigning-work": {
        "quesName": "Most Profit Assigning Work",
        "quesLink": "https://leetcode.com/problems/most-profit-assigning-work/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Sorting"
        ]
    },
    "making-a-large-island": {
        "quesName": "Making A Large Island",
        "quesLink": "https://leetcode.com/problems/making-a-large-island/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "count-unique-characters-of-all-substrings-of-a-given-string": {
        "quesName": "Count Unique Characters of All Substrings of a Given String",
        "quesLink": "https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Dynamic Programming"
        ]
    },
    "consecutive-numbers-sum": {
        "quesName": "Consecutive Numbers Sum",
        "quesLink": "https://leetcode.com/problems/consecutive-numbers-sum/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Enumeration"
        ]
    },
    "positions-of-large-groups": {
        "quesName": "Positions of Large Groups",
        "quesLink": "https://leetcode.com/problems/positions-of-large-groups/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "masking-personal-information": {
        "quesName": "Masking Personal Information",
        "quesLink": "https://leetcode.com/problems/masking-personal-information/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "flipping-an-image": {
        "quesName": "Flipping an Image",
        "quesLink": "https://leetcode.com/problems/flipping-an-image/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Matrix",
            "Simulation"
        ]
    },
    "find-and-replace-in-string": {
        "quesName": "Find And Replace in String",
        "quesLink": "https://leetcode.com/problems/find-and-replace-in-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Sorting"
        ]
    },
    "sum-of-distances-in-tree": {
        "quesName": "Sum of Distances in Tree",
        "quesLink": "https://leetcode.com/problems/sum-of-distances-in-tree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Graph"
        ]
    },
    "image-overlap": {
        "quesName": "Image Overlap",
        "quesLink": "https://leetcode.com/problems/image-overlap/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "rectangle-overlap": {
        "quesName": "Rectangle Overlap",
        "quesLink": "https://leetcode.com/problems/rectangle-overlap/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Geometry"
        ]
    },
    "new-21-game": {
        "quesName": "New 21 Game",
        "quesLink": "https://leetcode.com/problems/new-21-game/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Sliding Window",
            "Probability and Statistics"
        ]
    },
    "push-dominoes": {
        "quesName": "Push Dominoes",
        "quesLink": "https://leetcode.com/problems/push-dominoes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ]
    },
    "similar-string-groups": {
        "quesName": "Similar String Groups",
        "quesLink": "https://leetcode.com/problems/similar-string-groups/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find"
        ]
    },
    "magic-squares-in-grid": {
        "quesName": "Magic Squares In Grid",
        "quesLink": "https://leetcode.com/problems/magic-squares-in-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Matrix"
        ]
    },
    "keys-and-rooms": {
        "quesName": "Keys and Rooms",
        "quesLink": "https://leetcode.com/problems/keys-and-rooms/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "split-array-into-fibonacci-sequence": {
        "quesName": "Split Array into Fibonacci Sequence",
        "quesLink": "https://leetcode.com/problems/split-array-into-fibonacci-sequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking"
        ]
    },
    "guess-the-word": {
        "quesName": "Guess the Word",
        "quesLink": "https://leetcode.com/problems/guess-the-word/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "String",
            "Interactive",
            "Game Theory"
        ]
    },
    "backspace-string-compare": {
        "quesName": "Backspace String Compare",
        "quesLink": "https://leetcode.com/problems/backspace-string-compare/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "Stack",
            "Simulation"
        ]
    },
    "longest-mountain-in-array": {
        "quesName": "Longest Mountain in Array",
        "quesLink": "https://leetcode.com/problems/longest-mountain-in-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Dynamic Programming",
            "Enumeration"
        ]
    },
    "hand-of-straights": {
        "quesName": "Hand of Straights",
        "quesLink": "https://leetcode.com/problems/hand-of-straights/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting"
        ]
    },
    "shortest-path-visiting-all-nodes": {
        "quesName": "Shortest Path Visiting All Nodes",
        "quesLink": "https://leetcode.com/problems/shortest-path-visiting-all-nodes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation",
            "Breadth-First Search",
            "Graph",
            "Bitmask"
        ]
    },
    "shifting-letters": {
        "quesName": "Shifting Letters",
        "quesLink": "https://leetcode.com/problems/shifting-letters/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "maximize-distance-to-closest-person": {
        "quesName": "Maximize Distance to Closest Person",
        "quesLink": "https://leetcode.com/problems/maximize-distance-to-closest-person/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "rectangle-area-ii": {
        "quesName": "Rectangle Area II",
        "quesLink": "https://leetcode.com/problems/rectangle-area-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Segment Tree",
            "Line Sweep",
            "Ordered Set"
        ]
    },
    "loud-and-rich": {
        "quesName": "Loud and Rich",
        "quesLink": "https://leetcode.com/problems/loud-and-rich/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Graph",
            "Topological Sort"
        ]
    },
    "peak-index-in-a-mountain-array": {
        "quesName": "Peak Index in a Mountain Array",
        "quesLink": "https://leetcode.com/problems/peak-index-in-a-mountain-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "car-fleet": {
        "quesName": "Car Fleet",
        "quesLink": "https://leetcode.com/problems/car-fleet/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Sorting",
            "Monotonic Stack"
        ]
    },
    "k-similar-strings": {
        "quesName": "K-Similar Strings",
        "quesLink": "https://leetcode.com/problems/k-similar-strings/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Breadth-First Search"
        ]
    },
    "exam-room": {
        "quesName": "Exam Room",
        "quesLink": "https://leetcode.com/problems/exam-room/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ]
    },
    "score-of-parentheses": {
        "quesName": "Score of Parentheses",
        "quesLink": "https://leetcode.com/problems/score-of-parentheses/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "minimum-cost-to-hire-k-workers": {
        "quesName": "Minimum Cost to Hire K Workers",
        "quesLink": "https://leetcode.com/problems/minimum-cost-to-hire-k-workers/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "mirror-reflection": {
        "quesName": "Mirror Reflection",
        "quesLink": "https://leetcode.com/problems/mirror-reflection/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Geometry",
            "Number Theory"
        ]
    },
    "buddy-strings": {
        "quesName": "Buddy Strings",
        "quesLink": "https://leetcode.com/problems/buddy-strings/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "lemonade-change": {
        "quesName": "Lemonade Change",
        "quesLink": "https://leetcode.com/problems/lemonade-change/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "score-after-flipping-matrix": {
        "quesName": "Score After Flipping Matrix",
        "quesLink": "https://leetcode.com/problems/score-after-flipping-matrix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Bit Manipulation",
            "Matrix"
        ]
    },
    "shortest-subarray-with-sum-at-least-k": {
        "quesName": "Shortest Subarray with Sum at Least K",
        "quesLink": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Prefix Sum",
            "Monotonic Queue"
        ]
    },
    "all-nodes-distance-k-in-binary-tree": {
        "quesName": "All Nodes Distance K in Binary Tree",
        "quesLink": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "shortest-path-to-get-all-keys": {
        "quesName": "Shortest Path to Get All Keys",
        "quesLink": "https://leetcode.com/problems/shortest-path-to-get-all-keys/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "smallest-subtree-with-all-the-deepest-nodes": {
        "quesName": "Smallest Subtree with all the Deepest Nodes",
        "quesLink": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "prime-palindrome": {
        "quesName": "Prime Palindrome",
        "quesLink": "https://leetcode.com/problems/prime-palindrome/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "transpose-matrix": {
        "quesName": "Transpose Matrix",
        "quesLink": "https://leetcode.com/problems/transpose-matrix/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "binary-gap": {
        "quesName": "Binary Gap",
        "quesLink": "https://leetcode.com/problems/binary-gap/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Bit Manipulation"
        ]
    },
    "reordered-power-of-2": {
        "quesName": "Reordered Power of 2",
        "quesLink": "https://leetcode.com/problems/reordered-power-of-2/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Sorting",
            "Counting",
            "Enumeration"
        ]
    },
    "advantage-shuffle": {
        "quesName": "Advantage Shuffle",
        "quesLink": "https://leetcode.com/problems/advantage-shuffle/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ]
    },
    "minimum-number-of-refueling-stops": {
        "quesName": "Minimum Number of Refueling Stops",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-refueling-stops/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "leaf-similar-trees": {
        "quesName": "Leaf-Similar Trees",
        "quesLink": "https://leetcode.com/problems/leaf-similar-trees/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "length-of-longest-fibonacci-subsequence": {
        "quesName": "Length of Longest Fibonacci Subsequence",
        "quesLink": "https://leetcode.com/problems/length-of-longest-fibonacci-subsequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ]
    },
    "walking-robot-simulation": {
        "quesName": "Walking Robot Simulation",
        "quesLink": "https://leetcode.com/problems/walking-robot-simulation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "koko-eating-bananas": {
        "quesName": "Koko Eating Bananas",
        "quesLink": "https://leetcode.com/problems/koko-eating-bananas/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "middle-of-the-linked-list": {
        "quesName": "Middle of the Linked List",
        "quesLink": "https://leetcode.com/problems/middle-of-the-linked-list/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Two Pointers"
        ]
    },
    "stone-game": {
        "quesName": "Stone Game",
        "quesLink": "https://leetcode.com/problems/stone-game/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ]
    },
    "nth-magical-number": {
        "quesName": "Nth Magical Number",
        "quesLink": "https://leetcode.com/problems/nth-magical-number/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search"
        ]
    },
    "profitable-schemes": {
        "quesName": "Profitable Schemes",
        "quesLink": "https://leetcode.com/problems/profitable-schemes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "decoded-string-at-index": {
        "quesName": "Decoded String at Index",
        "quesLink": "https://leetcode.com/problems/decoded-string-at-index/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "boats-to-save-people": {
        "quesName": "Boats to Save People",
        "quesLink": "https://leetcode.com/problems/boats-to-save-people/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ]
    },
    "reachable-nodes-in-subdivided-graph": {
        "quesName": "Reachable Nodes In Subdivided Graph",
        "quesLink": "https://leetcode.com/problems/reachable-nodes-in-subdivided-graph/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ]
    },
    "projection-area-of-3d-shapes": {
        "quesName": "Projection Area of 3D Shapes",
        "quesLink": "https://leetcode.com/problems/projection-area-of-3d-shapes/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Matrix"
        ]
    },
    "uncommon-words-from-two-sentences": {
        "quesName": "Uncommon Words from Two Sentences",
        "quesLink": "https://leetcode.com/problems/uncommon-words-from-two-sentences/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "spiral-matrix-iii": {
        "quesName": "Spiral Matrix III",
        "quesLink": "https://leetcode.com/problems/spiral-matrix-iii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "possible-bipartition": {
        "quesName": "Possible Bipartition",
        "quesLink": "https://leetcode.com/problems/possible-bipartition/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "super-egg-drop": {
        "quesName": "Super Egg Drop",
        "quesLink": "https://leetcode.com/problems/super-egg-drop/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search",
            "Dynamic Programming"
        ]
    },
    "fair-candy-swap": {
        "quesName": "Fair Candy Swap",
        "quesLink": "https://leetcode.com/problems/fair-candy-swap/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Sorting"
        ]
    },
    "construct-binary-tree-from-preorder-and-postorder-traversal": {
        "quesName": "Construct Binary Tree from Preorder and Postorder Traversal",
        "quesLink": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Tree",
            "Binary Tree"
        ]
    },
    "find-and-replace-pattern": {
        "quesName": "Find and Replace Pattern",
        "quesLink": "https://leetcode.com/problems/find-and-replace-pattern/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "sum-of-subsequence-widths": {
        "quesName": "Sum of Subsequence Widths",
        "quesLink": "https://leetcode.com/problems/sum-of-subsequence-widths/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Sorting"
        ]
    },
    "surface-area-of-3d-shapes": {
        "quesName": "Surface Area of 3D Shapes",
        "quesLink": "https://leetcode.com/problems/surface-area-of-3d-shapes/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Matrix"
        ]
    },
    "groups-of-special-equivalent-strings": {
        "quesName": "Groups of Special-Equivalent Strings",
        "quesLink": "https://leetcode.com/problems/groups-of-special-equivalent-strings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "all-possible-full-binary-trees": {
        "quesName": "All Possible Full Binary Trees",
        "quesLink": "https://leetcode.com/problems/all-possible-full-binary-trees/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Recursion",
            "Memoization",
            "Binary Tree"
        ]
    },
    "maximum-frequency-stack": {
        "quesName": "Maximum Frequency Stack",
        "quesLink": "https://leetcode.com/problems/maximum-frequency-stack/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Stack",
            "Design",
            "Ordered Set"
        ]
    },
    "monotonic-array": {
        "quesName": "Monotonic Array",
        "quesLink": "https://leetcode.com/problems/monotonic-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "increasing-order-search-tree": {
        "quesName": "Increasing Order Search Tree",
        "quesLink": "https://leetcode.com/problems/increasing-order-search-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "bitwise-ors-of-subarrays": {
        "quesName": "Bitwise ORs of Subarrays",
        "quesLink": "https://leetcode.com/problems/bitwise-ors-of-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation"
        ]
    },
    "orderly-queue": {
        "quesName": "Orderly Queue",
        "quesLink": "https://leetcode.com/problems/orderly-queue/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Sorting"
        ]
    },
    "rle-iterator": {
        "quesName": "RLE Iterator",
        "quesLink": "https://leetcode.com/problems/rle-iterator/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Design",
            "Counting",
            "Iterator"
        ]
    },
    "online-stock-span": {
        "quesName": "Online Stock Span",
        "quesLink": "https://leetcode.com/problems/online-stock-span/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Stack",
            "Design",
            "Monotonic Stack",
            "Data Stream"
        ]
    },
    "numbers-at-most-n-given-digit-set": {
        "quesName": "Numbers At Most N Given Digit Set",
        "quesLink": "https://leetcode.com/problems/numbers-at-most-n-given-digit-set/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "String",
            "Binary Search",
            "Dynamic Programming"
        ]
    },
    "valid-permutations-for-di-sequence": {
        "quesName": "Valid Permutations for DI Sequence",
        "quesLink": "https://leetcode.com/problems/valid-permutations-for-di-sequence/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Prefix Sum"
        ]
    },
    "fruit-into-baskets": {
        "quesName": "Fruit Into Baskets",
        "quesLink": "https://leetcode.com/problems/fruit-into-baskets/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ]
    },
    "sort-array-by-parity": {
        "quesName": "Sort Array By Parity",
        "quesLink": "https://leetcode.com/problems/sort-array-by-parity/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ]
    },
    "super-palindromes": {
        "quesName": "Super Palindromes",
        "quesLink": "https://leetcode.com/problems/super-palindromes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Enumeration"
        ]
    },
    "sum-of-subarray-minimums": {
        "quesName": "Sum of Subarray Minimums",
        "quesLink": "https://leetcode.com/problems/sum-of-subarray-minimums/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "smallest-range-i": {
        "quesName": "Smallest Range I",
        "quesLink": "https://leetcode.com/problems/smallest-range-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "snakes-and-ladders": {
        "quesName": "Snakes and Ladders",
        "quesLink": "https://leetcode.com/problems/snakes-and-ladders/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "smallest-range-ii": {
        "quesName": "Smallest Range II",
        "quesLink": "https://leetcode.com/problems/smallest-range-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Sorting"
        ]
    },
    "online-election": {
        "quesName": "Online Election",
        "quesLink": "https://leetcode.com/problems/online-election/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Design"
        ]
    },
    "sort-an-array": {
        "quesName": "Sort an Array",
        "quesLink": "https://leetcode.com/problems/sort-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Merge Sort",
            "Bucket Sort",
            "Radix Sort",
            "Counting Sort"
        ]
    },
    "cat-and-mouse": {
        "quesName": "Cat and Mouse",
        "quesLink": "https://leetcode.com/problems/cat-and-mouse/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Graph",
            "Topological Sort",
            "Memoization",
            "Game Theory"
        ]
    },
    "x-of-a-kind-in-a-deck-of-cards": {
        "quesName": "X of a Kind in a Deck of Cards",
        "quesLink": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Counting",
            "Number Theory"
        ]
    },
    "partition-array-into-disjoint-intervals": {
        "quesName": "Partition Array into Disjoint Intervals",
        "quesLink": "https://leetcode.com/problems/partition-array-into-disjoint-intervals/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "word-subsets": {
        "quesName": "Word Subsets",
        "quesLink": "https://leetcode.com/problems/word-subsets/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "reverse-only-letters": {
        "quesName": "Reverse Only Letters",
        "quesLink": "https://leetcode.com/problems/reverse-only-letters/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "maximum-sum-circular-subarray": {
        "quesName": "Maximum Sum Circular Subarray",
        "quesLink": "https://leetcode.com/problems/maximum-sum-circular-subarray/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Dynamic Programming",
            "Queue",
            "Monotonic Queue"
        ]
    },
    "complete-binary-tree-inserter": {
        "quesName": "Complete Binary Tree Inserter",
        "quesLink": "https://leetcode.com/problems/complete-binary-tree-inserter/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Design",
            "Binary Tree"
        ]
    },
    "number-of-music-playlists": {
        "quesName": "Number of Music Playlists",
        "quesLink": "https://leetcode.com/problems/number-of-music-playlists/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ]
    },
    "minimum-add-to-make-parentheses-valid": {
        "quesName": "Minimum Add to Make Parentheses Valid",
        "quesLink": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Greedy"
        ]
    },
    "sort-array-by-parity-ii": {
        "quesName": "Sort Array By Parity II",
        "quesLink": "https://leetcode.com/problems/sort-array-by-parity-ii/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ]
    },
    "3sum-with-multiplicity": {
        "quesName": "3Sum With Multiplicity",
        "quesLink": "https://leetcode.com/problems/3sum-with-multiplicity/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting",
            "Counting"
        ]
    },
    "minimize-malware-spread": {
        "quesName": "Minimize Malware Spread",
        "quesLink": "https://leetcode.com/problems/minimize-malware-spread/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "long-pressed-name": {
        "quesName": "Long Pressed Name",
        "quesLink": "https://leetcode.com/problems/long-pressed-name/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "flip-string-to-monotone-increasing": {
        "quesName": "Flip String to Monotone Increasing",
        "quesLink": "https://leetcode.com/problems/flip-string-to-monotone-increasing/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "three-equal-parts": {
        "quesName": "Three Equal Parts",
        "quesLink": "https://leetcode.com/problems/three-equal-parts/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "minimize-malware-spread-ii": {
        "quesName": "Minimize Malware Spread II",
        "quesLink": "https://leetcode.com/problems/minimize-malware-spread-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "unique-email-addresses": {
        "quesName": "Unique Email Addresses",
        "quesLink": "https://leetcode.com/problems/unique-email-addresses/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "binary-subarrays-with-sum": {
        "quesName": "Binary Subarrays With Sum",
        "quesLink": "https://leetcode.com/problems/binary-subarrays-with-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "minimum-falling-path-sum": {
        "quesName": "Minimum Falling Path Sum",
        "quesLink": "https://leetcode.com/problems/minimum-falling-path-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "beautiful-array": {
        "quesName": "Beautiful Array",
        "quesLink": "https://leetcode.com/problems/beautiful-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Divide and Conquer"
        ]
    },
    "number-of-recent-calls": {
        "quesName": "Number of Recent Calls",
        "quesLink": "https://leetcode.com/problems/number-of-recent-calls/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Design",
            "Queue",
            "Data Stream"
        ]
    },
    "shortest-bridge": {
        "quesName": "Shortest Bridge",
        "quesLink": "https://leetcode.com/problems/shortest-bridge/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "knight-dialer": {
        "quesName": "Knight Dialer",
        "quesLink": "https://leetcode.com/problems/knight-dialer/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "stamping-the-sequence": {
        "quesName": "Stamping The Sequence",
        "quesLink": "https://leetcode.com/problems/stamping-the-sequence/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Greedy",
            "Queue"
        ]
    },
    "reorder-data-in-log-files": {
        "quesName": "Reorder Data in Log Files",
        "quesLink": "https://leetcode.com/problems/reorder-data-in-log-files/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Sorting"
        ]
    },
    "range-sum-of-bst": {
        "quesName": "Range Sum of BST",
        "quesLink": "https://leetcode.com/problems/range-sum-of-bst/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "minimum-area-rectangle": {
        "quesName": "Minimum Area Rectangle",
        "quesLink": "https://leetcode.com/problems/minimum-area-rectangle/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Geometry",
            "Sorting"
        ]
    },
    "distinct-subsequences-ii": {
        "quesName": "Distinct Subsequences II",
        "quesLink": "https://leetcode.com/problems/distinct-subsequences-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "valid-mountain-array": {
        "quesName": "Valid Mountain Array",
        "quesLink": "https://leetcode.com/problems/valid-mountain-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "di-string-match": {
        "quesName": "DI String Match",
        "quesLink": "https://leetcode.com/problems/di-string-match/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "String",
            "Greedy"
        ]
    },
    "find-the-shortest-superstring": {
        "quesName": "Find the Shortest Superstring",
        "quesLink": "https://leetcode.com/problems/find-the-shortest-superstring/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "delete-columns-to-make-sorted": {
        "quesName": "Delete Columns to Make Sorted",
        "quesLink": "https://leetcode.com/problems/delete-columns-to-make-sorted/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "minimum-increment-to-make-array-unique": {
        "quesName": "Minimum Increment to Make Array Unique",
        "quesLink": "https://leetcode.com/problems/minimum-increment-to-make-array-unique/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Counting"
        ]
    },
    "validate-stack-sequences": {
        "quesName": "Validate Stack Sequences",
        "quesLink": "https://leetcode.com/problems/validate-stack-sequences/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Simulation"
        ]
    },
    "most-stones-removed-with-same-row-or-column": {
        "quesName": "Most Stones Removed with Same Row or Column",
        "quesLink": "https://leetcode.com/problems/most-stones-removed-with-same-row-or-column/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Depth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "bag-of-tokens": {
        "quesName": "Bag of Tokens",
        "quesLink": "https://leetcode.com/problems/bag-of-tokens/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ]
    },
    "largest-time-for-given-digits": {
        "quesName": "Largest Time for Given Digits",
        "quesLink": "https://leetcode.com/problems/largest-time-for-given-digits/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Enumeration"
        ]
    },
    "reveal-cards-in-increasing-order": {
        "quesName": "Reveal Cards In Increasing Order",
        "quesLink": "https://leetcode.com/problems/reveal-cards-in-increasing-order/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Queue",
            "Sorting",
            "Simulation"
        ]
    },
    "flip-equivalent-binary-trees": {
        "quesName": "Flip Equivalent Binary Trees",
        "quesLink": "https://leetcode.com/problems/flip-equivalent-binary-trees/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "largest-component-size-by-common-factor": {
        "quesName": "Largest Component Size by Common Factor",
        "quesLink": "https://leetcode.com/problems/largest-component-size-by-common-factor/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Union Find",
            "Number Theory"
        ]
    },
    "verifying-an-alien-dictionary": {
        "quesName": "Verifying an Alien Dictionary",
        "quesLink": "https://leetcode.com/problems/verifying-an-alien-dictionary/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "array-of-doubled-pairs": {
        "quesName": "Array of Doubled Pairs",
        "quesLink": "https://leetcode.com/problems/array-of-doubled-pairs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting"
        ]
    },
    "delete-columns-to-make-sorted-ii": {
        "quesName": "Delete Columns to Make Sorted II",
        "quesLink": "https://leetcode.com/problems/delete-columns-to-make-sorted-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Greedy"
        ]
    },
    "tallest-billboard": {
        "quesName": "Tallest Billboard",
        "quesLink": "https://leetcode.com/problems/tallest-billboard/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "prison-cells-after-n-days": {
        "quesName": "Prison Cells After N Days",
        "quesLink": "https://leetcode.com/problems/prison-cells-after-n-days/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Bit Manipulation"
        ]
    },
    "check-completeness-of-a-binary-tree": {
        "quesName": "Check Completeness of a Binary Tree",
        "quesLink": "https://leetcode.com/problems/check-completeness-of-a-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "regions-cut-by-slashes": {
        "quesName": "Regions Cut By Slashes",
        "quesLink": "https://leetcode.com/problems/regions-cut-by-slashes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "delete-columns-to-make-sorted-iii": {
        "quesName": "Delete Columns to Make Sorted III",
        "quesLink": "https://leetcode.com/problems/delete-columns-to-make-sorted-iii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming"
        ]
    },
    "n-repeated-element-in-size-2n-array": {
        "quesName": "N-Repeated Element in Size 2N Array",
        "quesLink": "https://leetcode.com/problems/n-repeated-element-in-size-2n-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "maximum-width-ramp": {
        "quesName": "Maximum Width Ramp",
        "quesLink": "https://leetcode.com/problems/maximum-width-ramp/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "minimum-area-rectangle-ii": {
        "quesName": "Minimum Area Rectangle II",
        "quesLink": "https://leetcode.com/problems/minimum-area-rectangle-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ]
    },
    "least-operators-to-express-number": {
        "quesName": "Least Operators to Express Number",
        "quesLink": "https://leetcode.com/problems/least-operators-to-express-number/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Memoization"
        ]
    },
    "univalued-binary-tree": {
        "quesName": "Univalued Binary Tree",
        "quesLink": "https://leetcode.com/problems/univalued-binary-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "vowel-spellchecker": {
        "quesName": "Vowel Spellchecker",
        "quesLink": "https://leetcode.com/problems/vowel-spellchecker/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "numbers-with-same-consecutive-differences": {
        "quesName": "Numbers With Same Consecutive Differences",
        "quesLink": "https://leetcode.com/problems/numbers-with-same-consecutive-differences/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Backtracking",
            "Breadth-First Search"
        ]
    },
    "binary-tree-cameras": {
        "quesName": "Binary Tree Cameras",
        "quesLink": "https://leetcode.com/problems/binary-tree-cameras/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "pancake-sorting": {
        "quesName": "Pancake Sorting",
        "quesLink": "https://leetcode.com/problems/pancake-sorting/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ]
    },
    "powerful-integers": {
        "quesName": "Powerful Integers",
        "quesLink": "https://leetcode.com/problems/powerful-integers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math"
        ]
    },
    "flip-binary-tree-to-match-preorder-traversal": {
        "quesName": "Flip Binary Tree To Match Preorder Traversal",
        "quesLink": "https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "equal-rational-numbers": {
        "quesName": "Equal Rational Numbers",
        "quesLink": "https://leetcode.com/problems/equal-rational-numbers/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "k-closest-points-to-origin": {
        "quesName": "K Closest Points to Origin",
        "quesLink": "https://leetcode.com/problems/k-closest-points-to-origin/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Divide and Conquer",
            "Geometry",
            "Sorting",
            "Heap (Priority Queue)",
            "Quickselect"
        ]
    },
    "subarray-sums-divisible-by-k": {
        "quesName": "Subarray Sums Divisible by K",
        "quesLink": "https://leetcode.com/problems/subarray-sums-divisible-by-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ]
    },
    "odd-even-jump": {
        "quesName": "Odd Even Jump",
        "quesLink": "https://leetcode.com/problems/odd-even-jump/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Monotonic Stack",
            "Ordered Set"
        ]
    },
    "largest-perimeter-triangle": {
        "quesName": "Largest Perimeter Triangle",
        "quesLink": "https://leetcode.com/problems/largest-perimeter-triangle/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Sorting"
        ]
    },
    "squares-of-a-sorted-array": {
        "quesName": "Squares of a Sorted Array",
        "quesLink": "https://leetcode.com/problems/squares-of-a-sorted-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ]
    },
    "longest-turbulent-subarray": {
        "quesName": "Longest Turbulent Subarray",
        "quesLink": "https://leetcode.com/problems/longest-turbulent-subarray/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sliding Window"
        ]
    },
    "distribute-coins-in-binary-tree": {
        "quesName": "Distribute Coins in Binary Tree",
        "quesLink": "https://leetcode.com/problems/distribute-coins-in-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "unique-paths-iii": {
        "quesName": "Unique Paths III",
        "quesLink": "https://leetcode.com/problems/unique-paths-iii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Matrix"
        ]
    },
    "time-based-key-value-store": {
        "quesName": "Time Based Key-Value Store",
        "quesLink": "https://leetcode.com/problems/time-based-key-value-store/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Binary Search",
            "Design"
        ]
    },
    "triples-with-bitwise-and-equal-to-zero": {
        "quesName": "Triples with Bitwise AND Equal To Zero",
        "quesLink": "https://leetcode.com/problems/triples-with-bitwise-and-equal-to-zero/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation"
        ]
    },
    "minimum-cost-for-tickets": {
        "quesName": "Minimum Cost For Tickets",
        "quesLink": "https://leetcode.com/problems/minimum-cost-for-tickets/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "string-without-aaa-or-bbb": {
        "quesName": "String Without AAA or BBB",
        "quesLink": "https://leetcode.com/problems/string-without-aaa-or-bbb/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "sum-of-even-numbers-after-queries": {
        "quesName": "Sum of Even Numbers After Queries",
        "quesLink": "https://leetcode.com/problems/sum-of-even-numbers-after-queries/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "interval-list-intersections": {
        "quesName": "Interval List Intersections",
        "quesLink": "https://leetcode.com/problems/interval-list-intersections/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers"
        ]
    },
    "vertical-order-traversal-of-a-binary-tree": {
        "quesName": "Vertical Order Traversal of a Binary Tree",
        "quesLink": "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "smallest-string-starting-from-leaf": {
        "quesName": "Smallest String Starting From Leaf",
        "quesLink": "https://leetcode.com/problems/smallest-string-starting-from-leaf/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "add-to-array-form-of-integer": {
        "quesName": "Add to Array-Form of Integer",
        "quesLink": "https://leetcode.com/problems/add-to-array-form-of-integer/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "satisfiability-of-equality-equations": {
        "quesName": "Satisfiability of Equality Equations",
        "quesLink": "https://leetcode.com/problems/satisfiability-of-equality-equations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Union Find",
            "Graph"
        ]
    },
    "broken-calculator": {
        "quesName": "Broken Calculator",
        "quesLink": "https://leetcode.com/problems/broken-calculator/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "subarrays-with-k-different-integers": {
        "quesName": "Subarrays with K Different Integers",
        "quesLink": "https://leetcode.com/problems/subarrays-with-k-different-integers/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Counting"
        ]
    },
    "cousins-in-binary-tree": {
        "quesName": "Cousins in Binary Tree",
        "quesLink": "https://leetcode.com/problems/cousins-in-binary-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "rotting-oranges": {
        "quesName": "Rotting Oranges",
        "quesLink": "https://leetcode.com/problems/rotting-oranges/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "minimum-number-of-k-consecutive-bit-flips": {
        "quesName": "Minimum Number of K Consecutive Bit Flips",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Queue",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "number-of-squareful-arrays": {
        "quesName": "Number of Squareful Arrays",
        "quesLink": "https://leetcode.com/problems/number-of-squareful-arrays/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "find-the-town-judge": {
        "quesName": "Find the Town Judge",
        "quesLink": "https://leetcode.com/problems/find-the-town-judge/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Graph"
        ]
    },
    "maximum-binary-tree-ii": {
        "quesName": "Maximum Binary Tree II",
        "quesLink": "https://leetcode.com/problems/maximum-binary-tree-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Binary Tree"
        ]
    },
    "available-captures-for-rook": {
        "quesName": "Available Captures for Rook",
        "quesLink": "https://leetcode.com/problems/available-captures-for-rook/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "minimum-cost-to-merge-stones": {
        "quesName": "Minimum Cost to Merge Stones",
        "quesLink": "https://leetcode.com/problems/minimum-cost-to-merge-stones/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ]
    },
    "grid-illumination": {
        "quesName": "Grid Illumination",
        "quesLink": "https://leetcode.com/problems/grid-illumination/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "find-common-characters": {
        "quesName": "Find Common Characters",
        "quesLink": "https://leetcode.com/problems/find-common-characters/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "check-if-word-is-valid-after-substitutions": {
        "quesName": "Check If Word Is Valid After Substitutions",
        "quesLink": "https://leetcode.com/problems/check-if-word-is-valid-after-substitutions/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "max-consecutive-ones-iii": {
        "quesName": "Max Consecutive Ones III",
        "quesLink": "https://leetcode.com/problems/max-consecutive-ones-iii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "maximize-sum-of-array-after-k-negations": {
        "quesName": "Maximize Sum Of Array After K Negations",
        "quesLink": "https://leetcode.com/problems/maximize-sum-of-array-after-k-negations/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "clumsy-factorial": {
        "quesName": "Clumsy Factorial",
        "quesLink": "https://leetcode.com/problems/clumsy-factorial/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Stack",
            "Simulation"
        ]
    },
    "minimum-domino-rotations-for-equal-row": {
        "quesName": "Minimum Domino Rotations For Equal Row",
        "quesLink": "https://leetcode.com/problems/minimum-domino-rotations-for-equal-row/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "construct-binary-search-tree-from-preorder-traversal": {
        "quesName": "Construct Binary Search Tree from Preorder Traversal",
        "quesLink": "https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Tree",
            "Binary Search Tree",
            "Monotonic Stack",
            "Binary Tree"
        ]
    },
    "complement-of-base-10-integer": {
        "quesName": "Complement of Base 10 Integer",
        "quesLink": "https://leetcode.com/problems/complement-of-base-10-integer/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Bit Manipulation"
        ]
    },
    "pairs-of-songs-with-total-durations-divisible-by-60": {
        "quesName": "Pairs of Songs With Total Durations Divisible by 60",
        "quesLink": "https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "capacity-to-ship-packages-within-d-days": {
        "quesName": "Capacity To Ship Packages Within D Days",
        "quesLink": "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "numbers-with-repeated-digits": {
        "quesName": "Numbers With Repeated Digits",
        "quesLink": "https://leetcode.com/problems/numbers-with-repeated-digits/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming"
        ]
    },
    "partition-array-into-three-parts-with-equal-sum": {
        "quesName": "Partition Array Into Three Parts With Equal Sum",
        "quesLink": "https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "best-sightseeing-pair": {
        "quesName": "Best Sightseeing Pair",
        "quesLink": "https://leetcode.com/problems/best-sightseeing-pair/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "smallest-integer-divisible-by-k": {
        "quesName": "Smallest Integer Divisible by K",
        "quesLink": "https://leetcode.com/problems/smallest-integer-divisible-by-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math"
        ]
    },
    "binary-string-with-substrings-representing-1-to-n": {
        "quesName": "Binary String With Substrings Representing 1 To N",
        "quesLink": "https://leetcode.com/problems/binary-string-with-substrings-representing-1-to-n/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "convert-to-base-2": {
        "quesName": "Convert to Base -2",
        "quesLink": "https://leetcode.com/problems/convert-to-base-2/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "binary-prefix-divisible-by-5": {
        "quesName": "Binary Prefix Divisible By 5",
        "quesLink": "https://leetcode.com/problems/binary-prefix-divisible-by-5/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "next-greater-node-in-linked-list": {
        "quesName": "Next Greater Node In Linked List",
        "quesLink": "https://leetcode.com/problems/next-greater-node-in-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Linked List",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "number-of-enclaves": {
        "quesName": "Number of Enclaves",
        "quesLink": "https://leetcode.com/problems/number-of-enclaves/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "remove-outermost-parentheses": {
        "quesName": "Remove Outermost Parentheses",
        "quesLink": "https://leetcode.com/problems/remove-outermost-parentheses/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "sum-of-root-to-leaf-binary-numbers": {
        "quesName": "Sum of Root To Leaf Binary Numbers",
        "quesLink": "https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "camelcase-matching": {
        "quesName": "Camelcase Matching",
        "quesLink": "https://leetcode.com/problems/camelcase-matching/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "Trie",
            "String Matching"
        ]
    },
    "video-stitching": {
        "quesName": "Video Stitching",
        "quesLink": "https://leetcode.com/problems/video-stitching/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "divisor-game": {
        "quesName": "Divisor Game",
        "quesLink": "https://leetcode.com/problems/divisor-game/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Brainteaser",
            "Game Theory"
        ]
    },
    "maximum-difference-between-node-and-ancestor": {
        "quesName": "Maximum Difference Between Node and Ancestor",
        "quesLink": "https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "longest-arithmetic-subsequence": {
        "quesName": "Longest Arithmetic Subsequence",
        "quesLink": "https://leetcode.com/problems/longest-arithmetic-subsequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming"
        ]
    },
    "recover-a-tree-from-preorder-traversal": {
        "quesName": "Recover a Tree From Preorder Traversal",
        "quesLink": "https://leetcode.com/problems/recover-a-tree-from-preorder-traversal/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "two-city-scheduling": {
        "quesName": "Two City Scheduling",
        "quesLink": "https://leetcode.com/problems/two-city-scheduling/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "matrix-cells-in-distance-order": {
        "quesName": "Matrix Cells in Distance Order",
        "quesLink": "https://leetcode.com/problems/matrix-cells-in-distance-order/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Sorting",
            "Matrix"
        ]
    },
    "maximum-sum-of-two-non-overlapping-subarrays": {
        "quesName": "Maximum Sum of Two Non-Overlapping Subarrays",
        "quesLink": "https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sliding Window"
        ]
    },
    "stream-of-characters": {
        "quesName": "Stream of Characters",
        "quesLink": "https://leetcode.com/problems/stream-of-characters/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Design",
            "Trie",
            "Data Stream"
        ]
    },
    "moving-stones-until-consecutive": {
        "quesName": "Moving Stones Until Consecutive",
        "quesLink": "https://leetcode.com/problems/moving-stones-until-consecutive/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Brainteaser"
        ]
    },
    "coloring-a-border": {
        "quesName": "Coloring A Border",
        "quesLink": "https://leetcode.com/problems/coloring-a-border/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "uncrossed-lines": {
        "quesName": "Uncrossed Lines",
        "quesLink": "https://leetcode.com/problems/uncrossed-lines/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "escape-a-large-maze": {
        "quesName": "Escape a Large Maze",
        "quesLink": "https://leetcode.com/problems/escape-a-large-maze/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search"
        ]
    },
    "valid-boomerang": {
        "quesName": "Valid Boomerang",
        "quesLink": "https://leetcode.com/problems/valid-boomerang/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ]
    },
    "binary-search-tree-to-greater-sum-tree": {
        "quesName": "Binary Search Tree to Greater Sum Tree",
        "quesLink": "https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "minimum-score-triangulation-of-polygon": {
        "quesName": "Minimum Score Triangulation of Polygon",
        "quesLink": "https://leetcode.com/problems/minimum-score-triangulation-of-polygon/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "moving-stones-until-consecutive-ii": {
        "quesName": "Moving Stones Until Consecutive II",
        "quesLink": "https://leetcode.com/problems/moving-stones-until-consecutive-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Two Pointers",
            "Sorting"
        ]
    },
    "robot-bounded-in-circle": {
        "quesName": "Robot Bounded In Circle",
        "quesLink": "https://leetcode.com/problems/robot-bounded-in-circle/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Simulation"
        ]
    },
    "flower-planting-with-no-adjacent": {
        "quesName": "Flower Planting With No Adjacent",
        "quesLink": "https://leetcode.com/problems/flower-planting-with-no-adjacent/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "partition-array-for-maximum-sum": {
        "quesName": "Partition Array for Maximum Sum",
        "quesLink": "https://leetcode.com/problems/partition-array-for-maximum-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "longest-duplicate-substring": {
        "quesName": "Longest Duplicate Substring",
        "quesLink": "https://leetcode.com/problems/longest-duplicate-substring/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Binary Search",
            "Sliding Window",
            "Rolling Hash",
            "Suffix Array",
            "Hash Function"
        ]
    },
    "customers-who-bought-all-products": {
        "quesName": "Customers Who Bought All Products",
        "quesLink": "https://leetcode.com/problems/customers-who-bought-all-products/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "last-stone-weight": {
        "quesName": "Last Stone Weight",
        "quesLink": "https://leetcode.com/problems/last-stone-weight/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Heap (Priority Queue)"
        ]
    },
    "remove-all-adjacent-duplicates-in-string": {
        "quesName": "Remove All Adjacent Duplicates In String",
        "quesLink": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "longest-string-chain": {
        "quesName": "Longest String Chain",
        "quesLink": "https://leetcode.com/problems/longest-string-chain/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ]
    },
    "last-stone-weight-ii": {
        "quesName": "Last Stone Weight II",
        "quesLink": "https://leetcode.com/problems/last-stone-weight-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "actors-and-directors-who-cooperated-at-least-three-times": {
        "quesName": "Actors and Directors Who Cooperated At Least Three Times",
        "quesLink": "https://leetcode.com/problems/actors-and-directors-who-cooperated-at-least-three-times/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "height-checker": {
        "quesName": "Height Checker",
        "quesLink": "https://leetcode.com/problems/height-checker/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Counting Sort"
        ]
    },
    "grumpy-bookstore-owner": {
        "quesName": "Grumpy Bookstore Owner",
        "quesLink": "https://leetcode.com/problems/grumpy-bookstore-owner/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sliding Window"
        ]
    },
    "previous-permutation-with-one-swap": {
        "quesName": "Previous Permutation With One Swap",
        "quesLink": "https://leetcode.com/problems/previous-permutation-with-one-swap/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "distant-barcodes": {
        "quesName": "Distant Barcodes",
        "quesLink": "https://leetcode.com/problems/distant-barcodes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Counting"
        ]
    },
    "lexicographically-smallest-equivalent-string": {
        "quesName": "Lexicographically Smallest Equivalent String",
        "quesLink": "https://leetcode.com/problems/lexicographically-smallest-equivalent-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Union Find"
        ]
    },
    "product-sales-analysis-i": {
        "quesName": "Product Sales Analysis I",
        "quesLink": "https://leetcode.com/problems/product-sales-analysis-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "product-sales-analysis-iii": {
        "quesName": "Product Sales Analysis III",
        "quesLink": "https://leetcode.com/problems/product-sales-analysis-iii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "greatest-common-divisor-of-strings": {
        "quesName": "Greatest Common Divisor of Strings",
        "quesLink": "https://leetcode.com/problems/greatest-common-divisor-of-strings/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "flip-columns-for-maximum-number-of-equal-rows": {
        "quesName": "Flip Columns For Maximum Number of Equal Rows",
        "quesLink": "https://leetcode.com/problems/flip-columns-for-maximum-number-of-equal-rows/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix"
        ]
    },
    "adding-two-negabinary-numbers": {
        "quesName": "Adding Two Negabinary Numbers",
        "quesLink": "https://leetcode.com/problems/adding-two-negabinary-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "number-of-submatrices-that-sum-to-target": {
        "quesName": "Number of Submatrices That Sum to Target",
        "quesLink": "https://leetcode.com/problems/number-of-submatrices-that-sum-to-target/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix",
            "Prefix Sum"
        ]
    },
    "project-employees-i": {
        "quesName": "Project Employees I",
        "quesLink": "https://leetcode.com/problems/project-employees-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "occurrences-after-bigram": {
        "quesName": "Occurrences After Bigram",
        "quesLink": "https://leetcode.com/problems/occurrences-after-bigram/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "letter-tile-possibilities": {
        "quesName": "Letter Tile Possibilities",
        "quesLink": "https://leetcode.com/problems/letter-tile-possibilities/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Backtracking",
            "Counting"
        ]
    },
    "insufficient-nodes-in-root-to-leaf-paths": {
        "quesName": "Insufficient Nodes in Root to Leaf Paths",
        "quesLink": "https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "smallest-subsequence-of-distinct-characters": {
        "quesName": "Smallest Subsequence of Distinct Characters",
        "quesLink": "https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ]
    },
    "sales-analysis-iii": {
        "quesName": "Sales Analysis III",
        "quesLink": "https://leetcode.com/problems/sales-analysis-iii/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "duplicate-zeros": {
        "quesName": "Duplicate Zeros",
        "quesLink": "https://leetcode.com/problems/duplicate-zeros/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers"
        ]
    },
    "largest-values-from-labels": {
        "quesName": "Largest Values From Labels",
        "quesLink": "https://leetcode.com/problems/largest-values-from-labels/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Counting"
        ]
    },
    "shortest-path-in-binary-matrix": {
        "quesName": "Shortest Path in Binary Matrix",
        "quesLink": "https://leetcode.com/problems/shortest-path-in-binary-matrix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "shortest-common-supersequence": {
        "quesName": "Shortest Common Supersequence ",
        "quesLink": "https://leetcode.com/problems/shortest-common-supersequence/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "statistics-from-a-large-sample": {
        "quesName": "Statistics from a Large Sample",
        "quesLink": "https://leetcode.com/problems/statistics-from-a-large-sample/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Probability and Statistics"
        ]
    },
    "car-pooling": {
        "quesName": "Car Pooling",
        "quesLink": "https://leetcode.com/problems/car-pooling/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)",
            "Simulation",
            "Prefix Sum"
        ]
    },
    "find-in-mountain-array": {
        "quesName": "Find in Mountain Array",
        "quesLink": "https://leetcode.com/problems/find-in-mountain-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Interactive"
        ]
    },
    "brace-expansion-ii": {
        "quesName": "Brace Expansion II",
        "quesLink": "https://leetcode.com/problems/brace-expansion-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking",
            "Stack",
            "Breadth-First Search"
        ]
    },
    "distribute-candies-to-people": {
        "quesName": "Distribute Candies to People",
        "quesLink": "https://leetcode.com/problems/distribute-candies-to-people/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Simulation"
        ]
    },
    "path-in-zigzag-labelled-binary-tree": {
        "quesName": "Path In Zigzag Labelled Binary Tree",
        "quesLink": "https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Tree",
            "Binary Tree"
        ]
    },
    "filling-bookcase-shelves": {
        "quesName": "Filling Bookcase Shelves",
        "quesLink": "https://leetcode.com/problems/filling-bookcase-shelves/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "parsing-a-boolean-expression": {
        "quesName": "Parsing A Boolean Expression",
        "quesLink": "https://leetcode.com/problems/parsing-a-boolean-expression/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Recursion"
        ]
    },
    "defanging-an-ip-address": {
        "quesName": "Defanging an IP Address",
        "quesLink": "https://leetcode.com/problems/defanging-an-ip-address/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "corporate-flight-bookings": {
        "quesName": "Corporate Flight Bookings",
        "quesLink": "https://leetcode.com/problems/corporate-flight-bookings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "delete-nodes-and-return-forest": {
        "quesName": "Delete Nodes And Return Forest",
        "quesLink": "https://leetcode.com/problems/delete-nodes-and-return-forest/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "maximum-nesting-depth-of-two-valid-parentheses-strings": {
        "quesName": "Maximum Nesting Depth of Two Valid Parentheses Strings",
        "quesLink": "https://leetcode.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "print-in-order": {
        "quesName": "Print in Order",
        "quesLink": "https://leetcode.com/problems/print-in-order/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Concurrency"
        ]
    },
    "print-foobar-alternately": {
        "quesName": "Print FooBar Alternately",
        "quesLink": "https://leetcode.com/problems/print-foobar-alternately/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Concurrency"
        ]
    },
    "print-zero-even-odd": {
        "quesName": "Print Zero Even Odd",
        "quesLink": "https://leetcode.com/problems/print-zero-even-odd/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Concurrency"
        ]
    },
    "building-h2o": {
        "quesName": "Building H2O",
        "quesLink": "https://leetcode.com/problems/building-h2o/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Concurrency"
        ]
    },
    "relative-sort-array": {
        "quesName": "Relative Sort Array",
        "quesLink": "https://leetcode.com/problems/relative-sort-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting Sort"
        ]
    },
    "lowest-common-ancestor-of-deepest-leaves": {
        "quesName": "Lowest Common Ancestor of Deepest Leaves",
        "quesLink": "https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "longest-well-performing-interval": {
        "quesName": "Longest Well-Performing Interval",
        "quesLink": "https://leetcode.com/problems/longest-well-performing-interval/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Stack",
            "Monotonic Stack",
            "Prefix Sum"
        ]
    },
    "smallest-sufficient-team": {
        "quesName": "Smallest Sufficient Team",
        "quesLink": "https://leetcode.com/problems/smallest-sufficient-team/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "number-of-equivalent-domino-pairs": {
        "quesName": "Number of Equivalent Domino Pairs",
        "quesLink": "https://leetcode.com/problems/number-of-equivalent-domino-pairs/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "shortest-path-with-alternating-colors": {
        "quesName": "Shortest Path with Alternating Colors",
        "quesLink": "https://leetcode.com/problems/shortest-path-with-alternating-colors/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Breadth-First Search",
            "Graph"
        ]
    },
    "minimum-cost-tree-from-leaf-values": {
        "quesName": "Minimum Cost Tree From Leaf Values",
        "quesLink": "https://leetcode.com/problems/minimum-cost-tree-from-leaf-values/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ]
    },
    "maximum-of-absolute-value-expression": {
        "quesName": "Maximum of Absolute Value Expression",
        "quesLink": "https://leetcode.com/problems/maximum-of-absolute-value-expression/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "n-th-tribonacci-number": {
        "quesName": "N-th Tribonacci Number",
        "quesLink": "https://leetcode.com/problems/n-th-tribonacci-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Memoization"
        ]
    },
    "alphabet-board-path": {
        "quesName": "Alphabet Board Path",
        "quesLink": "https://leetcode.com/problems/alphabet-board-path/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "largest-1-bordered-square": {
        "quesName": "Largest 1-Bordered Square",
        "quesLink": "https://leetcode.com/problems/largest-1-bordered-square/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "stone-game-ii": {
        "quesName": "Stone Game II",
        "quesLink": "https://leetcode.com/problems/stone-game-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Prefix Sum",
            "Game Theory"
        ]
    },
    "user-activity-for-the-past-30-days-i": {
        "quesName": "User Activity for the Past 30 Days I",
        "quesLink": "https://leetcode.com/problems/user-activity-for-the-past-30-days-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "longest-common-subsequence": {
        "quesName": "Longest Common Subsequence",
        "quesLink": "https://leetcode.com/problems/longest-common-subsequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "decrease-elements-to-make-array-zigzag": {
        "quesName": "Decrease Elements To Make Array Zigzag",
        "quesLink": "https://leetcode.com/problems/decrease-elements-to-make-array-zigzag/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "binary-tree-coloring-game": {
        "quesName": "Binary Tree Coloring Game",
        "quesLink": "https://leetcode.com/problems/binary-tree-coloring-game/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "snapshot-array": {
        "quesName": "Snapshot Array",
        "quesLink": "https://leetcode.com/problems/snapshot-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Design"
        ]
    },
    "longest-chunked-palindrome-decomposition": {
        "quesName": "Longest Chunked Palindrome Decomposition",
        "quesLink": "https://leetcode.com/problems/longest-chunked-palindrome-decomposition/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "Dynamic Programming",
            "Greedy",
            "Rolling Hash",
            "Hash Function"
        ]
    },
    "article-views-i": {
        "quesName": "Article Views I",
        "quesLink": "https://leetcode.com/problems/article-views-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "day-of-the-year": {
        "quesName": "Day of the Year",
        "quesLink": "https://leetcode.com/problems/day-of-the-year/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "number-of-dice-rolls-with-target-sum": {
        "quesName": "Number of Dice Rolls With Target Sum",
        "quesLink": "https://leetcode.com/problems/number-of-dice-rolls-with-target-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "swap-for-longest-repeated-character-substring": {
        "quesName": "Swap For Longest Repeated Character Substring",
        "quesLink": "https://leetcode.com/problems/swap-for-longest-repeated-character-substring/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ]
    },
    "online-majority-element-in-subarray": {
        "quesName": "Online Majority Element In Subarray",
        "quesLink": "https://leetcode.com/problems/online-majority-element-in-subarray/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Design",
            "Binary Indexed Tree",
            "Segment Tree"
        ]
    },
    "market-analysis-i": {
        "quesName": "Market Analysis I",
        "quesLink": "https://leetcode.com/problems/market-analysis-i/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "find-words-that-can-be-formed-by-characters": {
        "quesName": "Find Words That Can Be Formed by Characters",
        "quesLink": "https://leetcode.com/problems/find-words-that-can-be-formed-by-characters/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "maximum-level-sum-of-a-binary-tree": {
        "quesName": "Maximum Level Sum of a Binary Tree",
        "quesLink": "https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "as-far-from-land-as-possible": {
        "quesName": "As Far from Land as Possible",
        "quesLink": "https://leetcode.com/problems/as-far-from-land-as-possible/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "last-substring-in-lexicographical-order": {
        "quesName": "Last Substring in Lexicographical Order",
        "quesLink": "https://leetcode.com/problems/last-substring-in-lexicographical-order/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "product-price-at-a-given-date": {
        "quesName": "Product Price at a Given Date",
        "quesLink": "https://leetcode.com/problems/product-price-at-a-given-date/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "invalid-transactions": {
        "quesName": "Invalid Transactions",
        "quesLink": "https://leetcode.com/problems/invalid-transactions/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ]
    },
    "compare-strings-by-frequency-of-the-smallest-character": {
        "quesName": "Compare Strings by Frequency of the Smallest Character",
        "quesLink": "https://leetcode.com/problems/compare-strings-by-frequency-of-the-smallest-character/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Binary Search",
            "Sorting"
        ]
    },
    "remove-zero-sum-consecutive-nodes-from-linked-list": {
        "quesName": "Remove Zero Sum Consecutive Nodes from Linked List",
        "quesLink": "https://leetcode.com/problems/remove-zero-sum-consecutive-nodes-from-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Linked List"
        ]
    },
    "dinner-plate-stacks": {
        "quesName": "Dinner Plate Stacks",
        "quesLink": "https://leetcode.com/problems/dinner-plate-stacks/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Stack",
            "Design",
            "Heap (Priority Queue)"
        ]
    },
    "immediate-food-delivery-ii": {
        "quesName": "Immediate Food Delivery II",
        "quesLink": "https://leetcode.com/problems/immediate-food-delivery-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "prime-arrangements": {
        "quesName": "Prime Arrangements",
        "quesLink": "https://leetcode.com/problems/prime-arrangements/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "can-make-palindrome-from-substring": {
        "quesName": "Can Make Palindrome from Substring",
        "quesLink": "https://leetcode.com/problems/can-make-palindrome-from-substring/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Prefix Sum"
        ]
    },
    "number-of-valid-words-for-each-puzzle": {
        "quesName": "Number of Valid Words for Each Puzzle",
        "quesLink": "https://leetcode.com/problems/number-of-valid-words-for-each-puzzle/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Trie"
        ]
    },
    "reformat-department-table": {
        "quesName": "Reformat Department Table",
        "quesLink": "https://leetcode.com/problems/reformat-department-table/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "distance-between-bus-stops": {
        "quesName": "Distance Between Bus Stops",
        "quesLink": "https://leetcode.com/problems/distance-between-bus-stops/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "day-of-the-week": {
        "quesName": "Day of the Week",
        "quesLink": "https://leetcode.com/problems/day-of-the-week/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "maximum-subarray-sum-with-one-deletion": {
        "quesName": "Maximum Subarray Sum with One Deletion",
        "quesLink": "https://leetcode.com/problems/maximum-subarray-sum-with-one-deletion/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "make-array-strictly-increasing": {
        "quesName": "Make Array Strictly Increasing",
        "quesLink": "https://leetcode.com/problems/make-array-strictly-increasing/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "maximum-number-of-balloons": {
        "quesName": "Maximum Number of Balloons",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-balloons/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "reverse-substrings-between-each-pair-of-parentheses": {
        "quesName": "Reverse Substrings Between Each Pair of Parentheses",
        "quesLink": "https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "k-concatenation-maximum-sum": {
        "quesName": "K-Concatenation Maximum Sum",
        "quesLink": "https://leetcode.com/problems/k-concatenation-maximum-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "critical-connections-in-a-network": {
        "quesName": "Critical Connections in a Network",
        "quesLink": "https://leetcode.com/problems/critical-connections-in-a-network/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Graph",
            "Biconnected Component"
        ]
    },
    "monthly-transactions-i": {
        "quesName": "Monthly Transactions I",
        "quesLink": "https://leetcode.com/problems/monthly-transactions-i/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "fizz-buzz-multithreaded": {
        "quesName": "Fizz Buzz Multithreaded",
        "quesLink": "https://leetcode.com/problems/fizz-buzz-multithreaded/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Concurrency"
        ]
    },
    "minimum-absolute-difference": {
        "quesName": "Minimum Absolute Difference",
        "quesLink": "https://leetcode.com/problems/minimum-absolute-difference/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "ugly-number-iii": {
        "quesName": "Ugly Number III",
        "quesLink": "https://leetcode.com/problems/ugly-number-iii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search",
            "Number Theory"
        ]
    },
    "smallest-string-with-swaps": {
        "quesName": "Smallest String With Swaps",
        "quesLink": "https://leetcode.com/problems/smallest-string-with-swaps/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Sorting"
        ]
    },
    "sort-items-by-groups-respecting-dependencies": {
        "quesName": "Sort Items by Groups Respecting Dependencies",
        "quesLink": "https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ]
    },
    "last-person-to-fit-in-the-bus": {
        "quesName": "Last Person to Fit in the Bus",
        "quesLink": "https://leetcode.com/problems/last-person-to-fit-in-the-bus/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "design-skiplist": {
        "quesName": "Design Skiplist",
        "quesLink": "https://leetcode.com/problems/design-skiplist/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Design"
        ]
    },
    "unique-number-of-occurrences": {
        "quesName": "Unique Number of Occurrences",
        "quesLink": "https://leetcode.com/problems/unique-number-of-occurrences/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "get-equal-substrings-within-budget": {
        "quesName": "Get Equal Substrings Within Budget",
        "quesLink": "https://leetcode.com/problems/get-equal-substrings-within-budget/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "remove-all-adjacent-duplicates-in-string-ii": {
        "quesName": "Remove All Adjacent Duplicates in String II",
        "quesLink": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "minimum-moves-to-reach-target-with-rotations": {
        "quesName": "Minimum Moves to Reach Target with Rotations",
        "quesLink": "https://leetcode.com/problems/minimum-moves-to-reach-target-with-rotations/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "queries-quality-and-percentage": {
        "quesName": "Queries Quality and Percentage",
        "quesLink": "https://leetcode.com/problems/queries-quality-and-percentage/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "minimum-cost-to-move-chips-to-the-same-position": {
        "quesName": "Minimum Cost to Move Chips to The Same Position",
        "quesLink": "https://leetcode.com/problems/minimum-cost-to-move-chips-to-the-same-position/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Greedy"
        ]
    },
    "longest-arithmetic-subsequence-of-given-difference": {
        "quesName": "Longest Arithmetic Subsequence of Given Difference",
        "quesLink": "https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ]
    },
    "path-with-maximum-gold": {
        "quesName": "Path with Maximum Gold",
        "quesLink": "https://leetcode.com/problems/path-with-maximum-gold/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking",
            "Matrix"
        ]
    },
    "count-vowels-permutation": {
        "quesName": "Count Vowels Permutation",
        "quesLink": "https://leetcode.com/problems/count-vowels-permutation/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "split-a-string-in-balanced-strings": {
        "quesName": "Split a String in Balanced Strings",
        "quesLink": "https://leetcode.com/problems/split-a-string-in-balanced-strings/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy",
            "Counting"
        ]
    },
    "queens-that-can-attack-the-king": {
        "quesName": "Queens That Can Attack the King",
        "quesLink": "https://leetcode.com/problems/queens-that-can-attack-the-king/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "dice-roll-simulation": {
        "quesName": "Dice Roll Simulation",
        "quesLink": "https://leetcode.com/problems/dice-roll-simulation/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "maximum-equal-frequency": {
        "quesName": "Maximum Equal Frequency",
        "quesLink": "https://leetcode.com/problems/maximum-equal-frequency/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "the-dining-philosophers": {
        "quesName": "The Dining Philosophers",
        "quesLink": "https://leetcode.com/problems/the-dining-philosophers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Concurrency"
        ]
    },
    "airplane-seat-assignment-probability": {
        "quesName": "Airplane Seat Assignment Probability",
        "quesLink": "https://leetcode.com/problems/airplane-seat-assignment-probability/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Brainteaser",
            "Probability and Statistics"
        ]
    },
    "check-if-it-is-a-straight-line": {
        "quesName": "Check If It Is a Straight Line",
        "quesLink": "https://leetcode.com/problems/check-if-it-is-a-straight-line/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ]
    },
    "remove-sub-folders-from-the-filesystem": {
        "quesName": "Remove Sub-Folders from the Filesystem",
        "quesLink": "https://leetcode.com/problems/remove-sub-folders-from-the-filesystem/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Depth-First Search",
            "Trie"
        ]
    },
    "replace-the-substring-for-balanced-string": {
        "quesName": "Replace the Substring for Balanced String",
        "quesLink": "https://leetcode.com/problems/replace-the-substring-for-balanced-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Sliding Window"
        ]
    },
    "maximum-profit-in-job-scheduling": {
        "quesName": "Maximum Profit in Job Scheduling",
        "quesLink": "https://leetcode.com/problems/maximum-profit-in-job-scheduling/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "find-positive-integer-solution-for-a-given-equation": {
        "quesName": "Find Positive Integer Solution for a Given Equation",
        "quesLink": "https://leetcode.com/problems/find-positive-integer-solution-for-a-given-equation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Two Pointers",
            "Binary Search",
            "Interactive"
        ]
    },
    "circular-permutation-in-binary-representation": {
        "quesName": "Circular Permutation in Binary Representation",
        "quesLink": "https://leetcode.com/problems/circular-permutation-in-binary-representation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Backtracking",
            "Bit Manipulation"
        ]
    },
    "maximum-length-of-a-concatenated-string-with-unique-characters": {
        "quesName": "Maximum Length of a Concatenated String with Unique Characters",
        "quesLink": "https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Backtracking",
            "Bit Manipulation"
        ]
    },
    "tiling-a-rectangle-with-the-fewest-squares": {
        "quesName": "Tiling a Rectangle with the Fewest Squares",
        "quesLink": "https://leetcode.com/problems/tiling-a-rectangle-with-the-fewest-squares/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Backtracking"
        ]
    },
    "minimum-swaps-to-make-strings-equal": {
        "quesName": "Minimum Swaps to Make Strings Equal",
        "quesLink": "https://leetcode.com/problems/minimum-swaps-to-make-strings-equal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Greedy"
        ]
    },
    "count-number-of-nice-subarrays": {
        "quesName": "Count Number of Nice Subarrays",
        "quesLink": "https://leetcode.com/problems/count-number-of-nice-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Sliding Window"
        ]
    },
    "minimum-remove-to-make-valid-parentheses": {
        "quesName": "Minimum Remove to Make Valid Parentheses",
        "quesLink": "https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "check-if-it-is-a-good-array": {
        "quesName": "Check If It Is a Good Array",
        "quesLink": "https://leetcode.com/problems/check-if-it-is-a-good-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ]
    },
    "average-selling-price": {
        "quesName": "Average Selling Price",
        "quesLink": "https://leetcode.com/problems/average-selling-price/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "cells-with-odd-values-in-a-matrix": {
        "quesName": "Cells with Odd Values in a Matrix",
        "quesLink": "https://leetcode.com/problems/cells-with-odd-values-in-a-matrix/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Simulation"
        ]
    },
    "reconstruct-a-2-row-binary-matrix": {
        "quesName": "Reconstruct a 2-Row Binary Matrix",
        "quesLink": "https://leetcode.com/problems/reconstruct-a-2-row-binary-matrix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Matrix"
        ]
    },
    "number-of-closed-islands": {
        "quesName": "Number of Closed Islands",
        "quesLink": "https://leetcode.com/problems/number-of-closed-islands/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "maximum-score-words-formed-by-letters": {
        "quesName": "Maximum Score Words Formed by Letters",
        "quesLink": "https://leetcode.com/problems/maximum-score-words-formed-by-letters/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "shift-2d-grid": {
        "quesName": "Shift 2D Grid",
        "quesLink": "https://leetcode.com/problems/shift-2d-grid/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "find-elements-in-a-contaminated-binary-tree": {
        "quesName": "Find Elements in a Contaminated Binary Tree",
        "quesLink": "https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design",
            "Binary Tree"
        ]
    },
    "greatest-sum-divisible-by-three": {
        "quesName": "Greatest Sum Divisible by Three",
        "quesLink": "https://leetcode.com/problems/greatest-sum-divisible-by-three/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ]
    },
    "minimum-moves-to-move-a-box-to-their-target-location": {
        "quesName": "Minimum Moves to Move a Box to Their Target Location",
        "quesLink": "https://leetcode.com/problems/minimum-moves-to-move-a-box-to-their-target-location/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Heap (Priority Queue)",
            "Matrix"
        ]
    },
    "minimum-time-visiting-all-points": {
        "quesName": "Minimum Time Visiting All Points",
        "quesLink": "https://leetcode.com/problems/minimum-time-visiting-all-points/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ]
    },
    "count-servers-that-communicate": {
        "quesName": "Count Servers that Communicate",
        "quesLink": "https://leetcode.com/problems/count-servers-that-communicate/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix",
            "Counting"
        ]
    },
    "search-suggestions-system": {
        "quesName": "Search Suggestions System",
        "quesLink": "https://leetcode.com/problems/search-suggestions-system/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Binary Search",
            "Trie",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "number-of-ways-to-stay-in-the-same-place-after-some-steps": {
        "quesName": "Number of Ways to Stay in the Same Place After Some Steps",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "find-winner-on-a-tic-tac-toe-game": {
        "quesName": "Find Winner on a Tic Tac Toe Game",
        "quesLink": "https://leetcode.com/problems/find-winner-on-a-tic-tac-toe-game/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix",
            "Simulation"
        ]
    },
    "number-of-burgers-with-no-waste-of-ingredients": {
        "quesName": "Number of Burgers with No Waste of Ingredients",
        "quesLink": "https://leetcode.com/problems/number-of-burgers-with-no-waste-of-ingredients/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "count-square-submatrices-with-all-ones": {
        "quesName": "Count Square Submatrices with All Ones",
        "quesLink": "https://leetcode.com/problems/count-square-submatrices-with-all-ones/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "palindrome-partitioning-iii": {
        "quesName": "Palindrome Partitioning III",
        "quesLink": "https://leetcode.com/problems/palindrome-partitioning-iii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "students-and-examinations": {
        "quesName": "Students and Examinations",
        "quesLink": "https://leetcode.com/problems/students-and-examinations/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "subtract-the-product-and-sum-of-digits-of-an-integer": {
        "quesName": "Subtract the Product and Sum of Digits of an Integer",
        "quesLink": "https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "group-the-people-given-the-group-size-they-belong-to": {
        "quesName": "Group the People Given the Group Size They Belong To",
        "quesLink": "https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "find-the-smallest-divisor-given-a-threshold": {
        "quesName": "Find the Smallest Divisor Given a Threshold",
        "quesLink": "https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix": {
        "quesName": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "iterator-for-combination": {
        "quesName": "Iterator for Combination",
        "quesLink": "https://leetcode.com/problems/iterator-for-combination/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking",
            "Design",
            "Iterator"
        ]
    },
    "element-appearing-more-than-25-in-sorted-array": {
        "quesName": "Element Appearing More Than 25% In Sorted Array",
        "quesLink": "https://leetcode.com/problems/element-appearing-more-than-25-in-sorted-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "remove-covered-intervals": {
        "quesName": "Remove Covered Intervals",
        "quesLink": "https://leetcode.com/problems/remove-covered-intervals/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "minimum-falling-path-sum-ii": {
        "quesName": "Minimum Falling Path Sum II",
        "quesLink": "https://leetcode.com/problems/minimum-falling-path-sum-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "convert-binary-number-in-a-linked-list-to-integer": {
        "quesName": "Convert Binary Number in a Linked List to Integer",
        "quesLink": "https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Math"
        ]
    },
    "sequential-digits": {
        "quesName": "Sequential Digits",
        "quesLink": "https://leetcode.com/problems/sequential-digits/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Enumeration"
        ]
    },
    "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold": {
        "quesName": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold",
        "quesLink": "https://leetcode.com/problems/maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Matrix",
            "Prefix Sum"
        ]
    },
    "shortest-path-in-a-grid-with-obstacles-elimination": {
        "quesName": "Shortest Path in a Grid with Obstacles Elimination",
        "quesLink": "https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "find-numbers-with-even-number-of-digits": {
        "quesName": "Find Numbers with Even Number of Digits",
        "quesLink": "https://leetcode.com/problems/find-numbers-with-even-number-of-digits/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "divide-array-in-sets-of-k-consecutive-numbers": {
        "quesName": "Divide Array in Sets of K Consecutive Numbers",
        "quesLink": "https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting"
        ]
    },
    "maximum-number-of-occurrences-of-a-substring": {
        "quesName": "Maximum Number of Occurrences of a Substring",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-occurrences-of-a-substring/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ]
    },
    "maximum-candies-you-can-get-from-boxes": {
        "quesName": "Maximum Candies You Can Get from Boxes",
        "quesLink": "https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "replace-elements-with-greatest-element-on-right-side": {
        "quesName": "Replace Elements with Greatest Element on Right Side",
        "quesLink": "https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "sum-of-mutated-array-closest-to-target": {
        "quesName": "Sum of Mutated Array Closest to Target",
        "quesLink": "https://leetcode.com/problems/sum-of-mutated-array-closest-to-target/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ]
    },
    "number-of-paths-with-max-score": {
        "quesName": "Number of Paths with Max Score",
        "quesLink": "https://leetcode.com/problems/number-of-paths-with-max-score/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "deepest-leaves-sum": {
        "quesName": "Deepest Leaves Sum",
        "quesLink": "https://leetcode.com/problems/deepest-leaves-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "find-n-unique-integers-sum-up-to-zero": {
        "quesName": "Find N Unique Integers Sum up to Zero",
        "quesLink": "https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "all-elements-in-two-binary-search-trees": {
        "quesName": "All Elements in Two Binary Search Trees",
        "quesLink": "https://leetcode.com/problems/all-elements-in-two-binary-search-trees/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Sorting",
            "Binary Tree"
        ]
    },
    "jump-game-iii": {
        "quesName": "Jump Game III",
        "quesLink": "https://leetcode.com/problems/jump-game-iii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search"
        ]
    },
    "verbal-arithmetic-puzzle": {
        "quesName": "Verbal Arithmetic Puzzle",
        "quesLink": "https://leetcode.com/problems/verbal-arithmetic-puzzle/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "String",
            "Backtracking"
        ]
    },
    "decrypt-string-from-alphabet-to-integer-mapping": {
        "quesName": "Decrypt String from Alphabet to Integer Mapping",
        "quesLink": "https://leetcode.com/problems/decrypt-string-from-alphabet-to-integer-mapping/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "xor-queries-of-a-subarray": {
        "quesName": "XOR Queries of a Subarray",
        "quesLink": "https://leetcode.com/problems/xor-queries-of-a-subarray/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Prefix Sum"
        ]
    },
    "get-watched-videos-by-your-friends": {
        "quesName": "Get Watched Videos by Your Friends",
        "quesLink": "https://leetcode.com/problems/get-watched-videos-by-your-friends/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Breadth-First Search",
            "Graph",
            "Sorting"
        ]
    },
    "minimum-insertion-steps-to-make-a-string-palindrome": {
        "quesName": "Minimum Insertion Steps to Make a String Palindrome",
        "quesLink": "https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "decompress-run-length-encoded-list": {
        "quesName": "Decompress Run-Length Encoded List",
        "quesLink": "https://leetcode.com/problems/decompress-run-length-encoded-list/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "matrix-block-sum": {
        "quesName": "Matrix Block Sum",
        "quesLink": "https://leetcode.com/problems/matrix-block-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ]
    },
    "sum-of-nodes-with-even-valued-grandparent": {
        "quesName": "Sum of Nodes with Even-Valued Grandparent",
        "quesLink": "https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "distinct-echo-substrings": {
        "quesName": "Distinct Echo Substrings",
        "quesLink": "https://leetcode.com/problems/distinct-echo-substrings/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Trie",
            "Rolling Hash",
            "Hash Function"
        ]
    },
    "convert-integer-to-the-sum-of-two-no-zero-integers": {
        "quesName": "Convert Integer to the Sum of Two No-Zero Integers",
        "quesLink": "https://leetcode.com/problems/convert-integer-to-the-sum-of-two-no-zero-integers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "minimum-flips-to-make-a-or-b-equal-to-c": {
        "quesName": "Minimum Flips to Make a OR b Equal to c",
        "quesLink": "https://leetcode.com/problems/minimum-flips-to-make-a-or-b-equal-to-c/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Bit Manipulation"
        ]
    },
    "number-of-operations-to-make-network-connected": {
        "quesName": "Number of Operations to Make Network Connected",
        "quesLink": "https://leetcode.com/problems/number-of-operations-to-make-network-connected/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "minimum-distance-to-type-a-word-using-two-fingers": {
        "quesName": "Minimum Distance to Type a Word Using Two Fingers",
        "quesLink": "https://leetcode.com/problems/minimum-distance-to-type-a-word-using-two-fingers/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "restaurant-growth": {
        "quesName": "Restaurant Growth",
        "quesLink": "https://leetcode.com/problems/restaurant-growth/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "maximum-69-number": {
        "quesName": "Maximum 69 Number",
        "quesLink": "https://leetcode.com/problems/maximum-69-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "print-words-vertically": {
        "quesName": "Print Words Vertically",
        "quesLink": "https://leetcode.com/problems/print-words-vertically/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Simulation"
        ]
    },
    "delete-leaves-with-a-given-value": {
        "quesName": "Delete Leaves With a Given Value",
        "quesLink": "https://leetcode.com/problems/delete-leaves-with-a-given-value/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "minimum-number-of-taps-to-open-to-water-a-garden": {
        "quesName": "Minimum Number of Taps to Open to Water a Garden",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "list-the-products-ordered-in-a-period": {
        "quesName": "List the Products Ordered in a Period",
        "quesLink": "https://leetcode.com/problems/list-the-products-ordered-in-a-period/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "break-a-palindrome": {
        "quesName": "Break a Palindrome",
        "quesLink": "https://leetcode.com/problems/break-a-palindrome/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "sort-the-matrix-diagonally": {
        "quesName": "Sort the Matrix Diagonally",
        "quesLink": "https://leetcode.com/problems/sort-the-matrix-diagonally/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Matrix"
        ]
    },
    "reverse-subarray-to-maximize-array-value": {
        "quesName": "Reverse Subarray To Maximize Array Value",
        "quesLink": "https://leetcode.com/problems/reverse-subarray-to-maximize-array-value/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Greedy"
        ]
    },
    "rank-transform-of-an-array": {
        "quesName": "Rank Transform of an Array",
        "quesLink": "https://leetcode.com/problems/rank-transform-of-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ]
    },
    "remove-palindromic-subsequences": {
        "quesName": "Remove Palindromic Subsequences",
        "quesLink": "https://leetcode.com/problems/remove-palindromic-subsequences/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "filter-restaurants-by-vegan-friendly-price-and-distance": {
        "quesName": "Filter Restaurants by Vegan-Friendly, Price and Distance",
        "quesLink": "https://leetcode.com/problems/filter-restaurants-by-vegan-friendly-price-and-distance/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance": {
        "quesName": "Find the City With the Smallest Number of Neighbors at a Threshold Distance",
        "quesLink": "https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Graph",
            "Shortest Path"
        ]
    },
    "minimum-difficulty-of-a-job-schedule": {
        "quesName": "Minimum Difficulty of a Job Schedule",
        "quesLink": "https://leetcode.com/problems/minimum-difficulty-of-a-job-schedule/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "the-k-weakest-rows-in-a-matrix": {
        "quesName": "The K Weakest Rows in a Matrix",
        "quesLink": "https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix"
        ]
    },
    "reduce-array-size-to-the-half": {
        "quesName": "Reduce Array Size to The Half",
        "quesLink": "https://leetcode.com/problems/reduce-array-size-to-the-half/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "maximum-product-of-splitted-binary-tree": {
        "quesName": "Maximum Product of Splitted Binary Tree",
        "quesLink": "https://leetcode.com/problems/maximum-product-of-splitted-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "jump-game-v": {
        "quesName": "Jump Game V",
        "quesLink": "https://leetcode.com/problems/jump-game-v/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "movie-rating": {
        "quesName": "Movie Rating",
        "quesLink": "https://leetcode.com/problems/movie-rating/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "number-of-steps-to-reduce-a-number-to-zero": {
        "quesName": "Number of Steps to Reduce a Number to Zero",
        "quesLink": "https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Bit Manipulation"
        ]
    },
    "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold": {
        "quesName": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
        "quesLink": "https://leetcode.com/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sliding Window"
        ]
    },
    "angle-between-hands-of-a-clock": {
        "quesName": "Angle Between Hands of a Clock",
        "quesLink": "https://leetcode.com/problems/angle-between-hands-of-a-clock/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "jump-game-iv": {
        "quesName": "Jump Game IV",
        "quesLink": "https://leetcode.com/problems/jump-game-iv/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Breadth-First Search"
        ]
    },
    "check-if-n-and-its-double-exist": {
        "quesName": "Check If N and Its Double Exist",
        "quesLink": "https://leetcode.com/problems/check-if-n-and-its-double-exist/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "minimum-number-of-steps-to-make-two-strings-anagram": {
        "quesName": "Minimum Number of Steps to Make Two Strings Anagram",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "tweet-counts-per-frequency": {
        "quesName": "Tweet Counts Per Frequency",
        "quesLink": "https://leetcode.com/problems/tweet-counts-per-frequency/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Binary Search",
            "Design",
            "Sorting",
            "Ordered Set"
        ]
    },
    "maximum-students-taking-exam": {
        "quesName": "Maximum Students Taking Exam",
        "quesLink": "https://leetcode.com/problems/maximum-students-taking-exam/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Matrix",
            "Bitmask"
        ]
    },
    "count-negative-numbers-in-a-sorted-matrix": {
        "quesName": "Count Negative Numbers in a Sorted Matrix",
        "quesLink": "https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Matrix"
        ]
    },
    "product-of-the-last-k-numbers": {
        "quesName": "Product of the Last K Numbers",
        "quesLink": "https://leetcode.com/problems/product-of-the-last-k-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Design",
            "Queue",
            "Data Stream"
        ]
    },
    "maximum-number-of-events-that-can-be-attended": {
        "quesName": "Maximum Number of Events That Can Be Attended",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "construct-target-array-with-multiple-sums": {
        "quesName": "Construct Target Array With Multiple Sums",
        "quesLink": "https://leetcode.com/problems/construct-target-array-with-multiple-sums/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Heap (Priority Queue)"
        ]
    },
    "sort-integers-by-the-number-of-1-bits": {
        "quesName": "Sort Integers by The Number of 1 Bits",
        "quesLink": "https://leetcode.com/problems/sort-integers-by-the-number-of-1-bits/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Sorting",
            "Counting"
        ]
    },
    "apply-discount-every-n-orders": {
        "quesName": "Apply Discount Every n Orders",
        "quesLink": "https://leetcode.com/problems/apply-discount-every-n-orders/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Design"
        ]
    },
    "number-of-substrings-containing-all-three-characters": {
        "quesName": "Number of Substrings Containing All Three Characters",
        "quesLink": "https://leetcode.com/problems/number-of-substrings-containing-all-three-characters/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ]
    },
    "count-all-valid-pickup-and-delivery-options": {
        "quesName": "Count All Valid Pickup and Delivery Options",
        "quesLink": "https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ]
    },
    "number-of-days-between-two-dates": {
        "quesName": "Number of Days Between Two Dates",
        "quesLink": "https://leetcode.com/problems/number-of-days-between-two-dates/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "validate-binary-tree-nodes": {
        "quesName": "Validate Binary Tree Nodes",
        "quesLink": "https://leetcode.com/problems/validate-binary-tree-nodes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph",
            "Binary Tree"
        ]
    },
    "closest-divisors": {
        "quesName": "Closest Divisors",
        "quesLink": "https://leetcode.com/problems/closest-divisors/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "largest-multiple-of-three": {
        "quesName": "Largest Multiple of Three",
        "quesLink": "https://leetcode.com/problems/largest-multiple-of-three/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "how-many-numbers-are-smaller-than-the-current-number": {
        "quesName": "How Many Numbers Are Smaller Than the Current Number",
        "quesLink": "https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting"
        ]
    },
    "rank-teams-by-votes": {
        "quesName": "Rank Teams by Votes",
        "quesLink": "https://leetcode.com/problems/rank-teams-by-votes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting",
            "Counting"
        ]
    },
    "linked-list-in-binary-tree": {
        "quesName": "Linked List in Binary Tree",
        "quesLink": "https://leetcode.com/problems/linked-list-in-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "minimum-cost-to-make-at-least-one-valid-path-in-a-grid": {
        "quesName": "Minimum Cost to Make at Least One Valid Path in a Grid",
        "quesLink": "https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ]
    },
    "increasing-decreasing-string": {
        "quesName": "Increasing Decreasing String",
        "quesLink": "https://leetcode.com/problems/increasing-decreasing-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "find-the-longest-substring-containing-vowels-in-even-counts": {
        "quesName": "Find the Longest Substring Containing Vowels in Even Counts",
        "quesLink": "https://leetcode.com/problems/find-the-longest-substring-containing-vowels-in-even-counts/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Prefix Sum"
        ]
    },
    "longest-zigzag-path-in-a-binary-tree": {
        "quesName": "Longest ZigZag Path in a Binary Tree",
        "quesLink": "https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "maximum-sum-bst-in-binary-tree": {
        "quesName": "Maximum Sum BST in Binary Tree",
        "quesLink": "https://leetcode.com/problems/maximum-sum-bst-in-binary-tree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "generate-a-string-with-characters-that-have-odd-counts": {
        "quesName": "Generate a String With Characters That Have Odd Counts",
        "quesLink": "https://leetcode.com/problems/generate-a-string-with-characters-that-have-odd-counts/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "number-of-times-binary-string-is-prefix-aligned": {
        "quesName": "Number of Times Binary String Is Prefix-Aligned",
        "quesLink": "https://leetcode.com/problems/number-of-times-binary-string-is-prefix-aligned/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "time-needed-to-inform-all-employees": {
        "quesName": "Time Needed to Inform All Employees",
        "quesLink": "https://leetcode.com/problems/time-needed-to-inform-all-employees/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ]
    },
    "frog-position-after-t-seconds": {
        "quesName": "Frog Position After T Seconds",
        "quesLink": "https://leetcode.com/problems/frog-position-after-t-seconds/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "replace-employee-id-with-the-unique-identifier": {
        "quesName": "Replace Employee ID With The Unique Identifier",
        "quesLink": "https://leetcode.com/problems/replace-employee-id-with-the-unique-identifier/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree": {
        "quesName": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
        "quesLink": "https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "lucky-numbers-in-a-matrix": {
        "quesName": "Lucky Numbers in a Matrix",
        "quesLink": "https://leetcode.com/problems/lucky-numbers-in-a-matrix/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "design-a-stack-with-increment-operation": {
        "quesName": "Design a Stack With Increment Operation",
        "quesLink": "https://leetcode.com/problems/design-a-stack-with-increment-operation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Design"
        ]
    },
    "balance-a-binary-search-tree": {
        "quesName": "Balance a Binary Search Tree",
        "quesLink": "https://leetcode.com/problems/balance-a-binary-search-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Divide and Conquer",
            "Greedy",
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ]
    },
    "maximum-performance-of-a-team": {
        "quesName": "Maximum Performance of a Team",
        "quesLink": "https://leetcode.com/problems/maximum-performance-of-a-team/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "find-the-distance-value-between-two-arrays": {
        "quesName": "Find the Distance Value Between Two Arrays",
        "quesLink": "https://leetcode.com/problems/find-the-distance-value-between-two-arrays/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "cinema-seat-allocation": {
        "quesName": "Cinema Seat Allocation",
        "quesLink": "https://leetcode.com/problems/cinema-seat-allocation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Bit Manipulation"
        ]
    },
    "sort-integers-by-the-power-value": {
        "quesName": "Sort Integers by The Power Value",
        "quesLink": "https://leetcode.com/problems/sort-integers-by-the-power-value/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Memoization",
            "Sorting"
        ]
    },
    "pizza-with-3n-slices": {
        "quesName": "Pizza With 3n Slices",
        "quesLink": "https://leetcode.com/problems/pizza-with-3n-slices/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "create-target-array-in-the-given-order": {
        "quesName": "Create Target Array in the Given Order",
        "quesLink": "https://leetcode.com/problems/create-target-array-in-the-given-order/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "four-divisors": {
        "quesName": "Four Divisors",
        "quesLink": "https://leetcode.com/problems/four-divisors/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "check-if-there-is-a-valid-path-in-a-grid": {
        "quesName": "Check if There is a Valid Path in a Grid",
        "quesLink": "https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "longest-happy-prefix": {
        "quesName": "Longest Happy Prefix",
        "quesLink": "https://leetcode.com/problems/longest-happy-prefix/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ]
    },
    "capital-gainloss": {
        "quesName": "Capital Gain/Loss",
        "quesLink": "https://leetcode.com/problems/capital-gainloss/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "find-lucky-integer-in-an-array": {
        "quesName": "Find Lucky Integer in an Array",
        "quesLink": "https://leetcode.com/problems/find-lucky-integer-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "count-number-of-teams": {
        "quesName": "Count Number of Teams",
        "quesLink": "https://leetcode.com/problems/count-number-of-teams/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Binary Indexed Tree"
        ]
    },
    "design-underground-system": {
        "quesName": "Design Underground System",
        "quesLink": "https://leetcode.com/problems/design-underground-system/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Design"
        ]
    },
    "find-all-good-strings": {
        "quesName": "Find All Good Strings",
        "quesLink": "https://leetcode.com/problems/find-all-good-strings/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "String Matching"
        ]
    },
    "count-largest-group": {
        "quesName": "Count Largest Group",
        "quesLink": "https://leetcode.com/problems/count-largest-group/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math"
        ]
    },
    "construct-k-palindrome-strings": {
        "quesName": "Construct K Palindrome Strings",
        "quesLink": "https://leetcode.com/problems/construct-k-palindrome-strings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Greedy",
            "Counting"
        ]
    },
    "circle-and-rectangle-overlapping": {
        "quesName": "Circle and Rectangle Overlapping",
        "quesLink": "https://leetcode.com/problems/circle-and-rectangle-overlapping/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Geometry"
        ]
    },
    "reducing-dishes": {
        "quesName": "Reducing Dishes",
        "quesLink": "https://leetcode.com/problems/reducing-dishes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ]
    },
    "minimum-subsequence-in-non-increasing-order": {
        "quesName": "Minimum Subsequence in Non-Increasing Order",
        "quesLink": "https://leetcode.com/problems/minimum-subsequence-in-non-increasing-order/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "number-of-steps-to-reduce-a-number-in-binary-representation-to-one": {
        "quesName": "Number of Steps to Reduce a Number in Binary Representation to One",
        "quesLink": "https://leetcode.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Bit Manipulation"
        ]
    },
    "longest-happy-string": {
        "quesName": "Longest Happy String",
        "quesLink": "https://leetcode.com/problems/longest-happy-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "stone-game-iii": {
        "quesName": "Stone Game III",
        "quesLink": "https://leetcode.com/problems/stone-game-iii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ]
    },
    "top-travellers": {
        "quesName": "Top Travellers",
        "quesLink": "https://leetcode.com/problems/top-travellers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "string-matching-in-an-array": {
        "quesName": "String Matching in an Array",
        "quesLink": "https://leetcode.com/problems/string-matching-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "String Matching"
        ]
    },
    "queries-on-a-permutation-with-key": {
        "quesName": "Queries on a Permutation With Key",
        "quesLink": "https://leetcode.com/problems/queries-on-a-permutation-with-key/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Indexed Tree",
            "Simulation"
        ]
    },
    "html-entity-parser": {
        "quesName": "HTML Entity Parser",
        "quesLink": "https://leetcode.com/problems/html-entity-parser/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "number-of-ways-to-paint-n-3-grid": {
        "quesName": "Number of Ways to Paint N \u00d7 3 Grid",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-paint-n-3-grid/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "minimum-value-to-get-positive-step-by-step-sum": {
        "quesName": "Minimum Value to Get Positive Step by Step Sum",
        "quesLink": "https://leetcode.com/problems/minimum-value-to-get-positive-step-by-step-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k": {
        "quesName": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K",
        "quesLink": "https://leetcode.com/problems/find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n": {
        "quesName": "The k-th Lexicographical String of All Happy Strings of Length n",
        "quesLink": "https://leetcode.com/problems/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking"
        ]
    },
    "restore-the-array": {
        "quesName": "Restore The Array",
        "quesLink": "https://leetcode.com/problems/restore-the-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "reformat-the-string": {
        "quesName": "Reformat The String",
        "quesLink": "https://leetcode.com/problems/reformat-the-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "display-table-of-food-orders-in-a-restaurant": {
        "quesName": "Display Table of Food Orders in a Restaurant",
        "quesLink": "https://leetcode.com/problems/display-table-of-food-orders-in-a-restaurant/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting",
            "Ordered Set"
        ]
    },
    "minimum-number-of-frogs-croaking": {
        "quesName": "Minimum Number of Frogs Croaking",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-frogs-croaking/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Counting"
        ]
    },
    "build-array-where-you-can-find-the-maximum-exactly-k-comparisons": {
        "quesName": "Build Array Where You Can Find The Maximum Exactly K Comparisons",
        "quesLink": "https://leetcode.com/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Prefix Sum"
        ]
    },
    "maximum-score-after-splitting-a-string": {
        "quesName": "Maximum Score After Splitting a String",
        "quesLink": "https://leetcode.com/problems/maximum-score-after-splitting-a-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "maximum-points-you-can-obtain-from-cards": {
        "quesName": "Maximum Points You Can Obtain from Cards",
        "quesLink": "https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "diagonal-traverse-ii": {
        "quesName": "Diagonal Traverse II",
        "quesLink": "https://leetcode.com/problems/diagonal-traverse-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "constrained-subsequence-sum": {
        "quesName": "Constrained Subsequence Sum",
        "quesLink": "https://leetcode.com/problems/constrained-subsequence-sum/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Monotonic Queue"
        ]
    },
    "kids-with-the-greatest-number-of-candies": {
        "quesName": "Kids With the Greatest Number of Candies",
        "quesLink": "https://leetcode.com/problems/kids-with-the-greatest-number-of-candies/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "max-difference-you-can-get-from-changing-an-integer": {
        "quesName": "Max Difference You Can Get From Changing an Integer",
        "quesLink": "https://leetcode.com/problems/max-difference-you-can-get-from-changing-an-integer/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "check-if-a-string-can-break-another-string": {
        "quesName": "Check If a String Can Break Another String",
        "quesLink": "https://leetcode.com/problems/check-if-a-string-can-break-another-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy",
            "Sorting"
        ]
    },
    "number-of-ways-to-wear-different-hats-to-each-other": {
        "quesName": "Number of Ways to Wear Different Hats to Each Other",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-wear-different-hats-to-each-other/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "destination-city": {
        "quesName": "Destination City",
        "quesLink": "https://leetcode.com/problems/destination-city/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "check-if-all-1s-are-at-least-length-k-places-away": {
        "quesName": "Check If All 1's Are at Least Length K Places Away",
        "quesLink": "https://leetcode.com/problems/check-if-all-1s-are-at-least-length-k-places-away/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit": {
        "quesName": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
        "quesLink": "https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Ordered Set",
            "Monotonic Queue"
        ]
    },
    "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows": {
        "quesName": "Find the Kth Smallest Sum of a Matrix With Sorted Rows",
        "quesLink": "https://leetcode.com/problems/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Heap (Priority Queue)",
            "Matrix"
        ]
    },
    "build-an-array-with-stack-operations": {
        "quesName": "Build an Array With Stack Operations",
        "quesLink": "https://leetcode.com/problems/build-an-array-with-stack-operations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Simulation"
        ]
    },
    "count-triplets-that-can-form-two-arrays-of-equal-xor": {
        "quesName": "Count Triplets That Can Form Two Arrays of Equal XOR",
        "quesLink": "https://leetcode.com/problems/count-triplets-that-can-form-two-arrays-of-equal-xor/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Bit Manipulation",
            "Prefix Sum"
        ]
    },
    "minimum-time-to-collect-all-apples-in-a-tree": {
        "quesName": "Minimum Time to Collect All Apples in a Tree",
        "quesLink": "https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ]
    },
    "number-of-ways-of-cutting-a-pizza": {
        "quesName": "Number of Ways of Cutting a Pizza",
        "quesLink": "https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Memoization",
            "Matrix"
        ]
    },
    "consecutive-characters": {
        "quesName": "Consecutive Characters",
        "quesLink": "https://leetcode.com/problems/consecutive-characters/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "simplified-fractions": {
        "quesName": "Simplified Fractions",
        "quesLink": "https://leetcode.com/problems/simplified-fractions/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Number Theory"
        ]
    },
    "count-good-nodes-in-binary-tree": {
        "quesName": "Count Good Nodes in Binary Tree",
        "quesLink": "https://leetcode.com/problems/count-good-nodes-in-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "form-largest-integer-with-digits-that-add-up-to-target": {
        "quesName": "Form Largest Integer With Digits That Add up to Target",
        "quesLink": "https://leetcode.com/problems/form-largest-integer-with-digits-that-add-up-to-target/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "number-of-students-doing-homework-at-a-given-time": {
        "quesName": "Number of Students Doing Homework at a Given Time",
        "quesLink": "https://leetcode.com/problems/number-of-students-doing-homework-at-a-given-time/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "rearrange-words-in-a-sentence": {
        "quesName": "Rearrange Words in a Sentence",
        "quesLink": "https://leetcode.com/problems/rearrange-words-in-a-sentence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Sorting"
        ]
    },
    "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list": {
        "quesName": "People Whose List of Favorite Companies Is Not a Subset of Another List",
        "quesLink": "https://leetcode.com/problems/people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "maximum-number-of-darts-inside-of-a-circular-dartboard": {
        "quesName": "Maximum Number of Darts Inside of a Circular Dartboard",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-darts-inside-of-a-circular-dartboard/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ]
    },
    "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence": {
        "quesName": "Check If a Word Occurs As a Prefix of Any Word in a Sentence",
        "quesLink": "https://leetcode.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "String Matching"
        ]
    },
    "maximum-number-of-vowels-in-a-substring-of-given-length": {
        "quesName": "Maximum Number of Vowels in a Substring of Given Length",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Sliding Window"
        ]
    },
    "pseudo-palindromic-paths-in-a-binary-tree": {
        "quesName": "Pseudo-Palindromic Paths in a Binary Tree",
        "quesLink": "https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Bit Manipulation",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "max-dot-product-of-two-subsequences": {
        "quesName": "Max Dot Product of Two Subsequences",
        "quesLink": "https://leetcode.com/problems/max-dot-product-of-two-subsequences/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "make-two-arrays-equal-by-reversing-subarrays": {
        "quesName": "Make Two Arrays Equal by Reversing Subarrays",
        "quesLink": "https://leetcode.com/problems/make-two-arrays-equal-by-reversing-subarrays/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ]
    },
    "check-if-a-string-contains-all-binary-codes-of-size-k": {
        "quesName": "Check If a String Contains All Binary Codes of Size K",
        "quesLink": "https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Rolling Hash",
            "Hash Function"
        ]
    },
    "course-schedule-iv": {
        "quesName": "Course Schedule IV",
        "quesLink": "https://leetcode.com/problems/course-schedule-iv/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ]
    },
    "cherry-pickup-ii": {
        "quesName": "Cherry Pickup II",
        "quesLink": "https://leetcode.com/problems/cherry-pickup-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "maximum-product-of-two-elements-in-an-array": {
        "quesName": "Maximum Product of Two Elements in an Array",
        "quesLink": "https://leetcode.com/problems/maximum-product-of-two-elements-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts": {
        "quesName": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",
        "quesLink": "https://leetcode.com/problems/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "reorder-routes-to-make-all-paths-lead-to-the-city-zero": {
        "quesName": "Reorder Routes to Make All Paths Lead to the City Zero",
        "quesLink": "https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "probability-of-a-two-boxes-having-the-same-number-of-distinct-balls": {
        "quesName": "Probability of a Two Boxes Having The Same Number of Distinct Balls",
        "quesLink": "https://leetcode.com/problems/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Backtracking",
            "Combinatorics",
            "Probability and Statistics"
        ]
    },
    "shuffle-the-array": {
        "quesName": "Shuffle the Array",
        "quesLink": "https://leetcode.com/problems/shuffle-the-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "the-k-strongest-values-in-an-array": {
        "quesName": "The k Strongest Values in an Array",
        "quesLink": "https://leetcode.com/problems/the-k-strongest-values-in-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ]
    },
    "design-browser-history": {
        "quesName": "Design Browser History",
        "quesLink": "https://leetcode.com/problems/design-browser-history/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Linked List",
            "Stack",
            "Design",
            "Doubly-Linked List",
            "Data Stream"
        ]
    },
    "paint-house-iii": {
        "quesName": "Paint House III",
        "quesLink": "https://leetcode.com/problems/paint-house-iii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "final-prices-with-a-special-discount-in-a-shop": {
        "quesName": "Final Prices With a Special Discount in a Shop",
        "quesLink": "https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "subrectangle-queries": {
        "quesName": "Subrectangle Queries",
        "quesLink": "https://leetcode.com/problems/subrectangle-queries/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Design",
            "Matrix"
        ]
    },
    "find-two-non-overlapping-sub-arrays-each-with-target-sum": {
        "quesName": "Find Two Non-overlapping Sub-arrays Each With Target Sum",
        "quesLink": "https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming",
            "Sliding Window"
        ]
    },
    "allocate-mailboxes": {
        "quesName": "Allocate Mailboxes",
        "quesLink": "https://leetcode.com/problems/allocate-mailboxes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "running-sum-of-1d-array": {
        "quesName": "Running Sum of 1d Array",
        "quesLink": "https://leetcode.com/problems/running-sum-of-1d-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "least-number-of-unique-integers-after-k-removals": {
        "quesName": "Least Number of Unique Integers after K Removals",
        "quesLink": "https://leetcode.com/problems/least-number-of-unique-integers-after-k-removals/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Counting"
        ]
    },
    "minimum-number-of-days-to-make-m-bouquets": {
        "quesName": "Minimum Number of Days to Make m Bouquets",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "kth-ancestor-of-a-tree-node": {
        "quesName": "Kth Ancestor of a Tree Node",
        "quesLink": "https://leetcode.com/problems/kth-ancestor-of-a-tree-node/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Binary Search",
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design"
        ]
    },
    "group-sold-products-by-the-date": {
        "quesName": "Group Sold Products By The Date",
        "quesLink": "https://leetcode.com/problems/group-sold-products-by-the-date/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "xor-operation-in-an-array": {
        "quesName": "XOR Operation in an Array",
        "quesLink": "https://leetcode.com/problems/xor-operation-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Bit Manipulation"
        ]
    },
    "making-file-names-unique": {
        "quesName": "Making File Names Unique",
        "quesLink": "https://leetcode.com/problems/making-file-names-unique/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "avoid-flood-in-the-city": {
        "quesName": "Avoid Flood in The City",
        "quesLink": "https://leetcode.com/problems/avoid-flood-in-the-city/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree": {
        "quesName": "Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree",
        "quesLink": "https://leetcode.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Union Find",
            "Graph",
            "Sorting",
            "Minimum Spanning Tree",
            "Strongly Connected Component"
        ]
    },
    "average-salary-excluding-the-minimum-and-maximum-salary": {
        "quesName": "Average Salary Excluding the Minimum and Maximum Salary",
        "quesLink": "https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "the-kth-factor-of-n": {
        "quesName": "The kth Factor of n",
        "quesLink": "https://leetcode.com/problems/the-kth-factor-of-n/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Number Theory"
        ]
    },
    "longest-subarray-of-1s-after-deleting-one-element": {
        "quesName": "Longest Subarray of 1's After Deleting One Element",
        "quesLink": "https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sliding Window"
        ]
    },
    "parallel-courses-ii": {
        "quesName": "Parallel Courses II",
        "quesLink": "https://leetcode.com/problems/parallel-courses-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation",
            "Graph",
            "Bitmask"
        ]
    },
    "path-crossing": {
        "quesName": "Path Crossing",
        "quesLink": "https://leetcode.com/problems/path-crossing/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "check-if-array-pairs-are-divisible-by-k": {
        "quesName": "Check If Array Pairs Are Divisible by k",
        "quesLink": "https://leetcode.com/problems/check-if-array-pairs-are-divisible-by-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "number-of-subsequences-that-satisfy-the-given-sum-condition": {
        "quesName": "Number of Subsequences That Satisfy the Given Sum Condition",
        "quesLink": "https://leetcode.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "max-value-of-equation": {
        "quesName": "Max Value of Equation",
        "quesLink": "https://leetcode.com/problems/max-value-of-equation/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Monotonic Queue"
        ]
    },
    "can-make-arithmetic-progression-from-sequence": {
        "quesName": "Can Make Arithmetic Progression From Sequence",
        "quesLink": "https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "last-moment-before-all-ants-fall-out-of-a-plank": {
        "quesName": "Last Moment Before All Ants Fall Out of a Plank",
        "quesLink": "https://leetcode.com/problems/last-moment-before-all-ants-fall-out-of-a-plank/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Brainteaser",
            "Simulation"
        ]
    },
    "count-submatrices-with-all-ones": {
        "quesName": "Count Submatrices With All Ones",
        "quesLink": "https://leetcode.com/problems/count-submatrices-with-all-ones/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Matrix",
            "Monotonic Stack"
        ]
    },
    "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits": {
        "quesName": "Minimum Possible Integer After at Most K Adjacent Swaps On Digits",
        "quesLink": "https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy",
            "Binary Indexed Tree",
            "Segment Tree"
        ]
    },
    "reformat-date": {
        "quesName": "Reformat Date",
        "quesLink": "https://leetcode.com/problems/reformat-date/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "range-sum-of-sorted-subarray-sums": {
        "quesName": "Range Sum of Sorted Subarray Sums",
        "quesLink": "https://leetcode.com/problems/range-sum-of-sorted-subarray-sums/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "minimum-difference-between-largest-and-smallest-value-in-three-moves": {
        "quesName": "Minimum Difference Between Largest and Smallest Value in Three Moves",
        "quesLink": "https://leetcode.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "stone-game-iv": {
        "quesName": "Stone Game IV",
        "quesLink": "https://leetcode.com/problems/stone-game-iv/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ]
    },
    "number-of-good-pairs": {
        "quesName": "Number of Good Pairs",
        "quesLink": "https://leetcode.com/problems/number-of-good-pairs/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Counting"
        ]
    },
    "number-of-substrings-with-only-1s": {
        "quesName": "Number of Substrings With Only 1s",
        "quesLink": "https://leetcode.com/problems/number-of-substrings-with-only-1s/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "path-with-maximum-probability": {
        "quesName": "Path with Maximum Probability",
        "quesLink": "https://leetcode.com/problems/path-with-maximum-probability/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ]
    },
    "best-position-for-a-service-centre": {
        "quesName": "Best Position for a Service Centre",
        "quesLink": "https://leetcode.com/problems/best-position-for-a-service-centre/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Geometry",
            "Randomized"
        ]
    },
    "find-users-with-valid-e-mails": {
        "quesName": "Find Users With Valid E-Mails",
        "quesLink": "https://leetcode.com/problems/find-users-with-valid-e-mails/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "water-bottles": {
        "quesName": "Water Bottles",
        "quesLink": "https://leetcode.com/problems/water-bottles/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Simulation"
        ]
    },
    "number-of-nodes-in-the-sub-tree-with-the-same-label": {
        "quesName": "Number of Nodes in the Sub-Tree With the Same Label",
        "quesLink": "https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Counting"
        ]
    },
    "maximum-number-of-non-overlapping-substrings": {
        "quesName": "Maximum Number of Non-Overlapping Substrings",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-non-overlapping-substrings/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "find-a-value-of-a-mysterious-function-closest-to-target": {
        "quesName": "Find a Value of a Mysterious Function Closest to Target",
        "quesLink": "https://leetcode.com/problems/find-a-value-of-a-mysterious-function-closest-to-target/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Bit Manipulation",
            "Segment Tree"
        ]
    },
    "count-odd-numbers-in-an-interval-range": {
        "quesName": "Count Odd Numbers in an Interval Range",
        "quesLink": "https://leetcode.com/problems/count-odd-numbers-in-an-interval-range/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "number-of-sub-arrays-with-odd-sum": {
        "quesName": "Number of Sub-arrays With Odd Sum",
        "quesLink": "https://leetcode.com/problems/number-of-sub-arrays-with-odd-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Prefix Sum"
        ]
    },
    "number-of-good-ways-to-split-a-string": {
        "quesName": "Number of Good Ways to Split a String",
        "quesLink": "https://leetcode.com/problems/number-of-good-ways-to-split-a-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Bit Manipulation"
        ]
    },
    "minimum-number-of-increments-on-subarrays-to-form-a-target-array": {
        "quesName": "Minimum Number of Increments on Subarrays to Form a Target Array",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ]
    },
    "patients-with-a-condition": {
        "quesName": "Patients With a Condition",
        "quesLink": "https://leetcode.com/problems/patients-with-a-condition/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "shuffle-string": {
        "quesName": "Shuffle String",
        "quesLink": "https://leetcode.com/problems/shuffle-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "minimum-suffix-flips": {
        "quesName": "Minimum Suffix Flips",
        "quesLink": "https://leetcode.com/problems/minimum-suffix-flips/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "number-of-good-leaf-nodes-pairs": {
        "quesName": "Number of Good Leaf Nodes Pairs",
        "quesLink": "https://leetcode.com/problems/number-of-good-leaf-nodes-pairs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "string-compression-ii": {
        "quesName": "String Compression II",
        "quesLink": "https://leetcode.com/problems/string-compression-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "count-good-triplets": {
        "quesName": "Count Good Triplets",
        "quesLink": "https://leetcode.com/problems/count-good-triplets/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Enumeration"
        ]
    },
    "find-the-winner-of-an-array-game": {
        "quesName": "Find the Winner of an Array Game",
        "quesLink": "https://leetcode.com/problems/find-the-winner-of-an-array-game/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "minimum-swaps-to-arrange-a-binary-grid": {
        "quesName": "Minimum Swaps to Arrange a Binary Grid",
        "quesLink": "https://leetcode.com/problems/minimum-swaps-to-arrange-a-binary-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Matrix"
        ]
    },
    "get-the-maximum-score": {
        "quesName": "Get the Maximum Score",
        "quesLink": "https://leetcode.com/problems/get-the-maximum-score/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "kth-missing-positive-number": {
        "quesName": "Kth Missing Positive Number",
        "quesLink": "https://leetcode.com/problems/kth-missing-positive-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "can-convert-string-in-k-moves": {
        "quesName": "Can Convert String in K Moves",
        "quesLink": "https://leetcode.com/problems/can-convert-string-in-k-moves/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "minimum-insertions-to-balance-a-parentheses-string": {
        "quesName": "Minimum Insertions to Balance a Parentheses String",
        "quesLink": "https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Greedy"
        ]
    },
    "find-longest-awesome-substring": {
        "quesName": "Find Longest Awesome Substring",
        "quesLink": "https://leetcode.com/problems/find-longest-awesome-substring/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation"
        ]
    },
    "make-the-string-great": {
        "quesName": "Make The String Great",
        "quesLink": "https://leetcode.com/problems/make-the-string-great/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "find-kth-bit-in-nth-binary-string": {
        "quesName": "Find Kth Bit in Nth Binary String",
        "quesLink": "https://leetcode.com/problems/find-kth-bit-in-nth-binary-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Recursion"
        ]
    },
    "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target": {
        "quesName": "Maximum Number of Non-Overlapping Subarrays With Sum Equals Target",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-non-overlapping-subarrays-with-sum-equals-target/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Prefix Sum"
        ]
    },
    "minimum-cost-to-cut-a-stick": {
        "quesName": "Minimum Cost to Cut a Stick",
        "quesLink": "https://leetcode.com/problems/minimum-cost-to-cut-a-stick/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "three-consecutive-odds": {
        "quesName": "Three Consecutive Odds",
        "quesLink": "https://leetcode.com/problems/three-consecutive-odds/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "minimum-operations-to-make-array-equal": {
        "quesName": "Minimum Operations to Make Array Equal",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-make-array-equal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "magnetic-force-between-two-balls": {
        "quesName": "Magnetic Force Between Two Balls",
        "quesLink": "https://leetcode.com/problems/magnetic-force-between-two-balls/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ]
    },
    "minimum-number-of-days-to-eat-n-oranges": {
        "quesName": "Minimum Number of Days to Eat N Oranges",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Memoization"
        ]
    },
    "thousand-separator": {
        "quesName": "Thousand Separator",
        "quesLink": "https://leetcode.com/problems/thousand-separator/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "minimum-number-of-vertices-to-reach-all-nodes": {
        "quesName": "Minimum Number of Vertices to Reach All Nodes",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-vertices-to-reach-all-nodes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Graph"
        ]
    },
    "minimum-numbers-of-function-calls-to-make-target-array": {
        "quesName": "Minimum Numbers of Function Calls to Make Target Array",
        "quesLink": "https://leetcode.com/problems/minimum-numbers-of-function-calls-to-make-target-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Bit Manipulation"
        ]
    },
    "detect-cycles-in-2d-grid": {
        "quesName": "Detect Cycles in 2D Grid",
        "quesLink": "https://leetcode.com/problems/detect-cycles-in-2d-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "most-visited-sector-in-a-circular-track": {
        "quesName": "Most Visited Sector in  a Circular Track",
        "quesLink": "https://leetcode.com/problems/most-visited-sector-in-a-circular-track/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "maximum-number-of-coins-you-can-get": {
        "quesName": "Maximum Number of Coins You Can Get",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-coins-you-can-get/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Sorting",
            "Game Theory"
        ]
    },
    "find-latest-group-of-size-m": {
        "quesName": "Find Latest Group of Size M",
        "quesLink": "https://leetcode.com/problems/find-latest-group-of-size-m/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Simulation"
        ]
    },
    "stone-game-v": {
        "quesName": "Stone Game V",
        "quesLink": "https://leetcode.com/problems/stone-game-v/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ]
    },
    "detect-pattern-of-length-m-repeated-k-or-more-times": {
        "quesName": "Detect Pattern of Length M Repeated K or More Times",
        "quesLink": "https://leetcode.com/problems/detect-pattern-of-length-m-repeated-k-or-more-times/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Enumeration"
        ]
    },
    "maximum-length-of-subarray-with-positive-product": {
        "quesName": "Maximum Length of Subarray With Positive Product",
        "quesLink": "https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "minimum-number-of-days-to-disconnect-island": {
        "quesName": "Minimum Number of Days to Disconnect Island",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix",
            "Strongly Connected Component"
        ]
    },
    "number-of-ways-to-reorder-array-to-get-same-bst": {
        "quesName": "Number of Ways to Reorder Array to Get Same BST",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Divide and Conquer",
            "Dynamic Programming",
            "Tree",
            "Union Find",
            "Binary Search Tree",
            "Memoization",
            "Combinatorics",
            "Binary Tree"
        ]
    },
    "matrix-diagonal-sum": {
        "quesName": "Matrix Diagonal Sum",
        "quesLink": "https://leetcode.com/problems/matrix-diagonal-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "number-of-ways-to-split-a-string": {
        "quesName": "Number of Ways to Split a String",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-split-a-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "shortest-subarray-to-be-removed-to-make-array-sorted": {
        "quesName": "Shortest Subarray to be Removed to Make Array Sorted",
        "quesLink": "https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "count-all-possible-routes": {
        "quesName": "Count All Possible Routes",
        "quesLink": "https://leetcode.com/problems/count-all-possible-routes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Memoization"
        ]
    },
    "replace-all-s-to-avoid-consecutive-repeating-characters": {
        "quesName": "Replace All ?'s to Avoid Consecutive Repeating Characters",
        "quesLink": "https://leetcode.com/problems/replace-all-s-to-avoid-consecutive-repeating-characters/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers": {
        "quesName": "Number of Ways Where Square of Number Is Equal to Product of Two Numbers",
        "quesLink": "https://leetcode.com/problems/number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Two Pointers"
        ]
    },
    "minimum-time-to-make-rope-colorful": {
        "quesName": "Minimum Time to Make Rope Colorful",
        "quesLink": "https://leetcode.com/problems/minimum-time-to-make-rope-colorful/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "remove-max-number-of-edges-to-keep-graph-fully-traversable": {
        "quesName": "Remove Max Number of Edges to Keep Graph Fully Traversable",
        "quesLink": "https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Union Find",
            "Graph"
        ]
    },
    "customer-who-visited-but-did-not-make-any-transactions": {
        "quesName": "Customer Who Visited but Did Not Make Any Transactions",
        "quesLink": "https://leetcode.com/problems/customer-who-visited-but-did-not-make-any-transactions/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "special-positions-in-a-binary-matrix": {
        "quesName": "Special Positions in a Binary Matrix",
        "quesLink": "https://leetcode.com/problems/special-positions-in-a-binary-matrix/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "count-unhappy-friends": {
        "quesName": "Count Unhappy Friends",
        "quesLink": "https://leetcode.com/problems/count-unhappy-friends/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "min-cost-to-connect-all-points": {
        "quesName": "Min Cost to Connect All Points",
        "quesLink": "https://leetcode.com/problems/min-cost-to-connect-all-points/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Union Find",
            "Graph",
            "Minimum Spanning Tree"
        ]
    },
    "check-if-string-is-transformable-with-substring-sort-operations": {
        "quesName": "Check If String Is Transformable With Substring Sort Operations",
        "quesLink": "https://leetcode.com/problems/check-if-string-is-transformable-with-substring-sort-operations/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy",
            "Sorting"
        ]
    },
    "bank-account-summary-ii": {
        "quesName": "Bank Account Summary II",
        "quesLink": "https://leetcode.com/problems/bank-account-summary-ii/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "sum-of-all-odd-length-subarrays": {
        "quesName": "Sum of All Odd Length Subarrays",
        "quesLink": "https://leetcode.com/problems/sum-of-all-odd-length-subarrays/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Prefix Sum"
        ]
    },
    "maximum-sum-obtained-of-any-permutation": {
        "quesName": "Maximum Sum Obtained of Any Permutation",
        "quesLink": "https://leetcode.com/problems/maximum-sum-obtained-of-any-permutation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ]
    },
    "make-sum-divisible-by-p": {
        "quesName": "Make Sum Divisible by P",
        "quesLink": "https://leetcode.com/problems/make-sum-divisible-by-p/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ]
    },
    "strange-printer-ii": {
        "quesName": "Strange Printer II",
        "quesLink": "https://leetcode.com/problems/strange-printer-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Graph",
            "Topological Sort",
            "Matrix"
        ]
    },
    "rearrange-spaces-between-words": {
        "quesName": "Rearrange Spaces Between Words",
        "quesLink": "https://leetcode.com/problems/rearrange-spaces-between-words/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "split-a-string-into-the-max-number-of-unique-substrings": {
        "quesName": "Split a String Into the Max Number of Unique Substrings",
        "quesLink": "https://leetcode.com/problems/split-a-string-into-the-max-number-of-unique-substrings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Backtracking"
        ]
    },
    "maximum-non-negative-product-in-a-matrix": {
        "quesName": "Maximum Non Negative Product in a Matrix",
        "quesLink": "https://leetcode.com/problems/maximum-non-negative-product-in-a-matrix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "minimum-cost-to-connect-two-groups-of-points": {
        "quesName": "Minimum Cost to Connect Two Groups of Points",
        "quesLink": "https://leetcode.com/problems/minimum-cost-to-connect-two-groups-of-points/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Matrix",
            "Bitmask"
        ]
    },
    "crawler-log-folder": {
        "quesName": "Crawler Log Folder",
        "quesLink": "https://leetcode.com/problems/crawler-log-folder/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Stack"
        ]
    },
    "maximum-profit-of-operating-a-centennial-wheel": {
        "quesName": "Maximum Profit of Operating a Centennial Wheel",
        "quesLink": "https://leetcode.com/problems/maximum-profit-of-operating-a-centennial-wheel/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "throne-inheritance": {
        "quesName": "Throne Inheritance",
        "quesLink": "https://leetcode.com/problems/throne-inheritance/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Design"
        ]
    },
    "maximum-number-of-achievable-transfer-requests": {
        "quesName": "Maximum Number of Achievable Transfer Requests",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-achievable-transfer-requests/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Enumeration"
        ]
    },
    "design-parking-system": {
        "quesName": "Design Parking System",
        "quesLink": "https://leetcode.com/problems/design-parking-system/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Design",
            "Simulation",
            "Counting"
        ]
    },
    "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period": {
        "quesName": "Alert Using Same Key-Card Three or More Times in a One Hour Period",
        "quesLink": "https://leetcode.com/problems/alert-using-same-key-card-three-or-more-times-in-a-one-hour-period/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ]
    },
    "find-valid-matrix-given-row-and-column-sums": {
        "quesName": "Find Valid Matrix Given Row and Column Sums",
        "quesLink": "https://leetcode.com/problems/find-valid-matrix-given-row-and-column-sums/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Matrix"
        ]
    },
    "find-servers-that-handled-most-number-of-requests": {
        "quesName": "Find Servers That Handled Most Number of Requests",
        "quesLink": "https://leetcode.com/problems/find-servers-that-handled-most-number-of-requests/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)",
            "Ordered Set"
        ]
    },
    "special-array-with-x-elements-greater-than-or-equal-x": {
        "quesName": "Special Array With X Elements Greater Than or Equal X",
        "quesLink": "https://leetcode.com/problems/special-array-with-x-elements-greater-than-or-equal-x/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ]
    },
    "even-odd-tree": {
        "quesName": "Even Odd Tree",
        "quesLink": "https://leetcode.com/problems/even-odd-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "maximum-number-of-visible-points": {
        "quesName": "Maximum Number of Visible Points",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-visible-points/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Sliding Window",
            "Sorting"
        ]
    },
    "minimum-one-bit-operations-to-make-integers-zero": {
        "quesName": "Minimum One Bit Operations to Make Integers Zero",
        "quesLink": "https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation",
            "Memoization"
        ]
    },
    "maximum-nesting-depth-of-the-parentheses": {
        "quesName": "Maximum Nesting Depth of the Parentheses",
        "quesLink": "https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "maximal-network-rank": {
        "quesName": "Maximal Network Rank",
        "quesLink": "https://leetcode.com/problems/maximal-network-rank/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Graph"
        ]
    },
    "split-two-strings-to-make-palindrome": {
        "quesName": "Split Two Strings to Make Palindrome",
        "quesLink": "https://leetcode.com/problems/split-two-strings-to-make-palindrome/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "count-subtrees-with-max-distance-between-cities": {
        "quesName": "Count Subtrees With Max Distance Between Cities",
        "quesLink": "https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation",
            "Tree",
            "Enumeration",
            "Bitmask"
        ]
    },
    "mean-of-array-after-removing-some-elements": {
        "quesName": "Mean of Array After Removing Some Elements",
        "quesLink": "https://leetcode.com/problems/mean-of-array-after-removing-some-elements/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "coordinate-with-maximum-network-quality": {
        "quesName": "Coordinate With Maximum Network Quality",
        "quesLink": "https://leetcode.com/problems/coordinate-with-maximum-network-quality/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Enumeration"
        ]
    },
    "number-of-sets-of-k-non-overlapping-line-segments": {
        "quesName": "Number of Sets of K Non-Overlapping Line Segments",
        "quesLink": "https://leetcode.com/problems/number-of-sets-of-k-non-overlapping-line-segments/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming"
        ]
    },
    "fancy-sequence": {
        "quesName": "Fancy Sequence",
        "quesLink": "https://leetcode.com/problems/fancy-sequence/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Design",
            "Segment Tree"
        ]
    },
    "largest-substring-between-two-equal-characters": {
        "quesName": "Largest Substring Between Two Equal Characters",
        "quesLink": "https://leetcode.com/problems/largest-substring-between-two-equal-characters/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "lexicographically-smallest-string-after-applying-operations": {
        "quesName": "Lexicographically Smallest String After Applying Operations",
        "quesLink": "https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Breadth-First Search"
        ]
    },
    "best-team-with-no-conflicts": {
        "quesName": "Best Team With No Conflicts",
        "quesLink": "https://leetcode.com/problems/best-team-with-no-conflicts/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "graph-connectivity-with-threshold": {
        "quesName": "Graph Connectivity With Threshold",
        "quesLink": "https://leetcode.com/problems/graph-connectivity-with-threshold/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Union Find",
            "Number Theory"
        ]
    },
    "slowest-key": {
        "quesName": "Slowest Key",
        "quesLink": "https://leetcode.com/problems/slowest-key/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "arithmetic-subarrays": {
        "quesName": "Arithmetic Subarrays",
        "quesLink": "https://leetcode.com/problems/arithmetic-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "path-with-minimum-effort": {
        "quesName": "Path With Minimum Effort",
        "quesLink": "https://leetcode.com/problems/path-with-minimum-effort/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Heap (Priority Queue)",
            "Matrix"
        ]
    },
    "rank-transform-of-a-matrix": {
        "quesName": "Rank Transform of a Matrix",
        "quesLink": "https://leetcode.com/problems/rank-transform-of-a-matrix/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Union Find",
            "Graph",
            "Topological Sort",
            "Sorting",
            "Matrix"
        ]
    },
    "percentage-of-users-attended-a-contest": {
        "quesName": "Percentage of Users Attended a Contest",
        "quesLink": "https://leetcode.com/problems/percentage-of-users-attended-a-contest/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "sort-array-by-increasing-frequency": {
        "quesName": "Sort Array by Increasing Frequency",
        "quesLink": "https://leetcode.com/problems/sort-array-by-increasing-frequency/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ]
    },
    "widest-vertical-area-between-two-points-containing-no-points": {
        "quesName": "Widest Vertical Area Between Two Points Containing No Points",
        "quesLink": "https://leetcode.com/problems/widest-vertical-area-between-two-points-containing-no-points/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "count-substrings-that-differ-by-one-character": {
        "quesName": "Count Substrings That Differ by One Character",
        "quesLink": "https://leetcode.com/problems/count-substrings-that-differ-by-one-character/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Dynamic Programming"
        ]
    },
    "number-of-ways-to-form-a-target-string-given-a-dictionary": {
        "quesName": "Number of Ways to Form a Target String Given a Dictionary",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming"
        ]
    },
    "check-array-formation-through-concatenation": {
        "quesName": "Check Array Formation Through Concatenation",
        "quesLink": "https://leetcode.com/problems/check-array-formation-through-concatenation/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "count-sorted-vowel-strings": {
        "quesName": "Count Sorted Vowel Strings",
        "quesLink": "https://leetcode.com/problems/count-sorted-vowel-strings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ]
    },
    "furthest-building-you-can-reach": {
        "quesName": "Furthest Building You Can Reach",
        "quesLink": "https://leetcode.com/problems/furthest-building-you-can-reach/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "kth-smallest-instructions": {
        "quesName": "Kth Smallest Instructions",
        "quesLink": "https://leetcode.com/problems/kth-smallest-instructions/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ]
    },
    "get-maximum-in-generated-array": {
        "quesName": "Get Maximum in Generated Array",
        "quesLink": "https://leetcode.com/problems/get-maximum-in-generated-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Simulation"
        ]
    },
    "minimum-deletions-to-make-character-frequencies-unique": {
        "quesName": "Minimum Deletions to Make Character Frequencies Unique",
        "quesLink": "https://leetcode.com/problems/minimum-deletions-to-make-character-frequencies-unique/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Greedy",
            "Sorting"
        ]
    },
    "sell-diminishing-valued-colored-balls": {
        "quesName": "Sell Diminishing-Valued Colored Balls",
        "quesLink": "https://leetcode.com/problems/sell-diminishing-valued-colored-balls/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "create-sorted-array-through-instructions": {
        "quesName": "Create Sorted Array through Instructions",
        "quesLink": "https://leetcode.com/problems/create-sorted-array-through-instructions/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Merge Sort",
            "Ordered Set"
        ]
    },
    "defuse-the-bomb": {
        "quesName": "Defuse the Bomb",
        "quesLink": "https://leetcode.com/problems/defuse-the-bomb/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "minimum-deletions-to-make-string-balanced": {
        "quesName": "Minimum Deletions to Make String Balanced",
        "quesLink": "https://leetcode.com/problems/minimum-deletions-to-make-string-balanced/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Stack"
        ]
    },
    "minimum-jumps-to-reach-home": {
        "quesName": "Minimum Jumps to Reach Home",
        "quesLink": "https://leetcode.com/problems/minimum-jumps-to-reach-home/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search"
        ]
    },
    "distribute-repeating-integers": {
        "quesName": "Distribute Repeating Integers",
        "quesLink": "https://leetcode.com/problems/distribute-repeating-integers/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "design-an-ordered-stream": {
        "quesName": "Design an Ordered Stream",
        "quesLink": "https://leetcode.com/problems/design-an-ordered-stream/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Design",
            "Data Stream"
        ]
    },
    "determine-if-two-strings-are-close": {
        "quesName": "Determine if Two Strings Are Close",
        "quesLink": "https://leetcode.com/problems/determine-if-two-strings-are-close/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sorting"
        ]
    },
    "minimum-operations-to-reduce-x-to-zero": {
        "quesName": "Minimum Operations to Reduce X to Zero",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-reduce-x-to-zero/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "maximize-grid-happiness": {
        "quesName": "Maximize Grid Happiness",
        "quesLink": "https://leetcode.com/problems/maximize-grid-happiness/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation",
            "Memoization",
            "Bitmask"
        ]
    },
    "average-time-of-process-per-machine": {
        "quesName": "Average Time of Process per Machine",
        "quesLink": "https://leetcode.com/problems/average-time-of-process-per-machine/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "check-if-two-string-arrays-are-equivalent": {
        "quesName": "Check If Two String Arrays are Equivalent",
        "quesLink": "https://leetcode.com/problems/check-if-two-string-arrays-are-equivalent/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "smallest-string-with-a-given-numeric-value": {
        "quesName": "Smallest String With A Given Numeric Value",
        "quesLink": "https://leetcode.com/problems/smallest-string-with-a-given-numeric-value/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "ways-to-make-a-fair-array": {
        "quesName": "Ways to Make a Fair Array",
        "quesLink": "https://leetcode.com/problems/ways-to-make-a-fair-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "minimum-initial-energy-to-finish-tasks": {
        "quesName": "Minimum Initial Energy to Finish Tasks",
        "quesLink": "https://leetcode.com/problems/minimum-initial-energy-to-finish-tasks/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "fix-names-in-a-table": {
        "quesName": "Fix Names in a Table",
        "quesLink": "https://leetcode.com/problems/fix-names-in-a-table/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "maximum-repeating-substring": {
        "quesName": "Maximum Repeating Substring",
        "quesLink": "https://leetcode.com/problems/maximum-repeating-substring/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "String Matching"
        ]
    },
    "merge-in-between-linked-lists": {
        "quesName": "Merge In Between Linked Lists",
        "quesLink": "https://leetcode.com/problems/merge-in-between-linked-lists/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List"
        ]
    },
    "design-front-middle-back-queue": {
        "quesName": "Design Front Middle Back Queue",
        "quesLink": "https://leetcode.com/problems/design-front-middle-back-queue/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Linked List",
            "Design",
            "Queue",
            "Data Stream"
        ]
    },
    "minimum-number-of-removals-to-make-mountain-array": {
        "quesName": "Minimum Number of Removals to Make Mountain Array",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "richest-customer-wealth": {
        "quesName": "Richest Customer Wealth",
        "quesLink": "https://leetcode.com/problems/richest-customer-wealth/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "find-the-most-competitive-subsequence": {
        "quesName": "Find the Most Competitive Subsequence",
        "quesLink": "https://leetcode.com/problems/find-the-most-competitive-subsequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ]
    },
    "minimum-moves-to-make-array-complementary": {
        "quesName": "Minimum Moves to Make Array Complementary",
        "quesLink": "https://leetcode.com/problems/minimum-moves-to-make-array-complementary/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ]
    },
    "minimize-deviation-in-array": {
        "quesName": "Minimize Deviation in Array",
        "quesLink": "https://leetcode.com/problems/minimize-deviation-in-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)",
            "Ordered Set"
        ]
    },
    "goal-parser-interpretation": {
        "quesName": "Goal Parser Interpretation",
        "quesLink": "https://leetcode.com/problems/goal-parser-interpretation/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "max-number-of-k-sum-pairs": {
        "quesName": "Max Number of K-Sum Pairs",
        "quesLink": "https://leetcode.com/problems/max-number-of-k-sum-pairs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting"
        ]
    },
    "concatenation-of-consecutive-binary-numbers": {
        "quesName": "Concatenation of Consecutive Binary Numbers",
        "quesLink": "https://leetcode.com/problems/concatenation-of-consecutive-binary-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Bit Manipulation",
            "Simulation"
        ]
    },
    "minimum-incompatibility": {
        "quesName": "Minimum Incompatibility",
        "quesLink": "https://leetcode.com/problems/minimum-incompatibility/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "invalid-tweets": {
        "quesName": "Invalid Tweets",
        "quesLink": "https://leetcode.com/problems/invalid-tweets/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "count-the-number-of-consistent-strings": {
        "quesName": "Count the Number of Consistent Strings",
        "quesLink": "https://leetcode.com/problems/count-the-number-of-consistent-strings/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation"
        ]
    },
    "sum-of-absolute-differences-in-a-sorted-array": {
        "quesName": "Sum of Absolute Differences in a Sorted Array",
        "quesLink": "https://leetcode.com/problems/sum-of-absolute-differences-in-a-sorted-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Prefix Sum"
        ]
    },
    "stone-game-vi": {
        "quesName": "Stone Game VI",
        "quesLink": "https://leetcode.com/problems/stone-game-vi/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Game Theory"
        ]
    },
    "delivering-boxes-from-storage-to-ports": {
        "quesName": "Delivering Boxes from Storage to Ports",
        "quesLink": "https://leetcode.com/problems/delivering-boxes-from-storage-to-ports/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Segment Tree",
            "Queue",
            "Heap (Priority Queue)",
            "Prefix Sum",
            "Monotonic Queue"
        ]
    },
    "count-of-matches-in-tournament": {
        "quesName": "Count of Matches in Tournament",
        "quesLink": "https://leetcode.com/problems/count-of-matches-in-tournament/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Simulation"
        ]
    },
    "partitioning-into-minimum-number-of-deci-binary-numbers": {
        "quesName": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
        "quesLink": "https://leetcode.com/problems/partitioning-into-minimum-number-of-deci-binary-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "stone-game-vii": {
        "quesName": "Stone Game VII",
        "quesLink": "https://leetcode.com/problems/stone-game-vii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ]
    },
    "maximum-height-by-stacking-cuboids": {
        "quesName": "Maximum Height by Stacking Cuboids ",
        "quesLink": "https://leetcode.com/problems/maximum-height-by-stacking-cuboids/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "daily-leads-and-partners": {
        "quesName": "Daily Leads and Partners",
        "quesLink": "https://leetcode.com/problems/daily-leads-and-partners/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "reformat-phone-number": {
        "quesName": "Reformat Phone Number",
        "quesLink": "https://leetcode.com/problems/reformat-phone-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "maximum-erasure-value": {
        "quesName": "Maximum Erasure Value",
        "quesLink": "https://leetcode.com/problems/maximum-erasure-value/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ]
    },
    "jump-game-vi": {
        "quesName": "Jump Game VI",
        "quesLink": "https://leetcode.com/problems/jump-game-vi/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Queue",
            "Heap (Priority Queue)",
            "Monotonic Queue"
        ]
    },
    "checking-existence-of-edge-length-limited-paths": {
        "quesName": "Checking Existence of Edge Length Limited Paths",
        "quesLink": "https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Union Find",
            "Graph",
            "Sorting"
        ]
    },
    "number-of-students-unable-to-eat-lunch": {
        "quesName": "Number of Students Unable to Eat Lunch",
        "quesLink": "https://leetcode.com/problems/number-of-students-unable-to-eat-lunch/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Queue",
            "Simulation"
        ]
    },
    "average-waiting-time": {
        "quesName": "Average Waiting Time",
        "quesLink": "https://leetcode.com/problems/average-waiting-time/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "maximum-binary-string-after-change": {
        "quesName": "Maximum Binary String After Change",
        "quesLink": "https://leetcode.com/problems/maximum-binary-string-after-change/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "minimum-adjacent-swaps-for-k-consecutive-ones": {
        "quesName": "Minimum Adjacent Swaps for K Consecutive Ones",
        "quesLink": "https://leetcode.com/problems/minimum-adjacent-swaps-for-k-consecutive-ones/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "determine-if-string-halves-are-alike": {
        "quesName": "Determine if String Halves Are Alike",
        "quesLink": "https://leetcode.com/problems/determine-if-string-halves-are-alike/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Counting"
        ]
    },
    "maximum-number-of-eaten-apples": {
        "quesName": "Maximum Number of Eaten Apples",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-eaten-apples/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "where-will-the-ball-fall": {
        "quesName": "Where Will the Ball Fall",
        "quesLink": "https://leetcode.com/problems/where-will-the-ball-fall/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Depth-First Search",
            "Matrix",
            "Simulation"
        ]
    },
    "maximum-xor-with-an-element-from-array": {
        "quesName": "Maximum XOR With an Element From Array",
        "quesLink": "https://leetcode.com/problems/maximum-xor-with-an-element-from-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Trie"
        ]
    },
    "maximum-units-on-a-truck": {
        "quesName": "Maximum Units on a Truck",
        "quesLink": "https://leetcode.com/problems/maximum-units-on-a-truck/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "count-good-meals": {
        "quesName": "Count Good Meals",
        "quesLink": "https://leetcode.com/problems/count-good-meals/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "ways-to-split-array-into-three-subarrays": {
        "quesName": "Ways to Split Array Into Three Subarrays",
        "quesLink": "https://leetcode.com/problems/ways-to-split-array-into-three-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Prefix Sum"
        ]
    },
    "minimum-operations-to-make-a-subsequence": {
        "quesName": "Minimum Operations to Make a Subsequence",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-make-a-subsequence/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Greedy"
        ]
    },
    "calculate-money-in-leetcode-bank": {
        "quesName": "Calculate Money in Leetcode Bank",
        "quesLink": "https://leetcode.com/problems/calculate-money-in-leetcode-bank/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "maximum-score-from-removing-substrings": {
        "quesName": "Maximum Score From Removing Substrings",
        "quesLink": "https://leetcode.com/problems/maximum-score-from-removing-substrings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Greedy"
        ]
    },
    "construct-the-lexicographically-largest-valid-sequence": {
        "quesName": "Construct the Lexicographically Largest Valid Sequence",
        "quesLink": "https://leetcode.com/problems/construct-the-lexicographically-largest-valid-sequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking"
        ]
    },
    "number-of-ways-to-reconstruct-a-tree": {
        "quesName": "Number Of Ways To Reconstruct A Tree",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-reconstruct-a-tree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Graph"
        ]
    },
    "decode-xored-array": {
        "quesName": "Decode XORed Array",
        "quesLink": "https://leetcode.com/problems/decode-xored-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation"
        ]
    },
    "swapping-nodes-in-a-linked-list": {
        "quesName": "Swapping Nodes in a Linked List",
        "quesLink": "https://leetcode.com/problems/swapping-nodes-in-a-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Two Pointers"
        ]
    },
    "minimize-hamming-distance-after-swap-operations": {
        "quesName": "Minimize Hamming Distance After Swap Operations",
        "quesLink": "https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Union Find"
        ]
    },
    "find-minimum-time-to-finish-all-jobs": {
        "quesName": "Find Minimum Time to Finish All Jobs",
        "quesLink": "https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "number-of-rectangles-that-can-form-the-largest-square": {
        "quesName": "Number Of Rectangles That Can Form The Largest Square",
        "quesLink": "https://leetcode.com/problems/number-of-rectangles-that-can-form-the-largest-square/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "tuple-with-same-product": {
        "quesName": "Tuple with Same Product",
        "quesLink": "https://leetcode.com/problems/tuple-with-same-product/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "largest-submatrix-with-rearrangements": {
        "quesName": "Largest Submatrix With Rearrangements",
        "quesLink": "https://leetcode.com/problems/largest-submatrix-with-rearrangements/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Matrix"
        ]
    },
    "cat-and-mouse-ii": {
        "quesName": "Cat and Mouse II",
        "quesLink": "https://leetcode.com/problems/cat-and-mouse-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Graph",
            "Topological Sort",
            "Memoization",
            "Matrix",
            "Game Theory"
        ]
    },
    "find-followers-count": {
        "quesName": "Find Followers Count",
        "quesLink": "https://leetcode.com/problems/find-followers-count/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "the-number-of-employees-which-report-to-each-employee": {
        "quesName": "The Number of Employees Which Report to Each Employee",
        "quesLink": "https://leetcode.com/problems/the-number-of-employees-which-report-to-each-employee/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "find-the-highest-altitude": {
        "quesName": "Find the Highest Altitude",
        "quesLink": "https://leetcode.com/problems/find-the-highest-altitude/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "minimum-number-of-people-to-teach": {
        "quesName": "Minimum Number of People to Teach",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-people-to-teach/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "decode-xored-permutation": {
        "quesName": "Decode XORed Permutation",
        "quesLink": "https://leetcode.com/problems/decode-xored-permutation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation"
        ]
    },
    "count-ways-to-make-array-with-product": {
        "quesName": "Count Ways to Make Array With Product",
        "quesLink": "https://leetcode.com/problems/count-ways-to-make-array-with-product/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Combinatorics",
            "Number Theory"
        ]
    },
    "latest-time-by-replacing-hidden-digits": {
        "quesName": "Latest Time by Replacing Hidden Digits",
        "quesLink": "https://leetcode.com/problems/latest-time-by-replacing-hidden-digits/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "change-minimum-characters-to-satisfy-one-of-three-conditions": {
        "quesName": "Change Minimum Characters to Satisfy One of Three Conditions",
        "quesLink": "https://leetcode.com/problems/change-minimum-characters-to-satisfy-one-of-three-conditions/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting",
            "Prefix Sum"
        ]
    },
    "find-kth-largest-xor-coordinate-value": {
        "quesName": "Find Kth Largest XOR Coordinate Value",
        "quesLink": "https://leetcode.com/problems/find-kth-largest-xor-coordinate-value/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Bit Manipulation",
            "Heap (Priority Queue)",
            "Matrix",
            "Prefix Sum",
            "Quickselect"
        ]
    },
    "building-boxes": {
        "quesName": "Building Boxes",
        "quesLink": "https://leetcode.com/problems/building-boxes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search",
            "Greedy"
        ]
    },
    "find-total-time-spent-by-each-employee": {
        "quesName": "Find Total Time Spent by Each Employee",
        "quesLink": "https://leetcode.com/problems/find-total-time-spent-by-each-employee/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "maximum-number-of-balls-in-a-box": {
        "quesName": "Maximum Number of Balls in a Box",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-balls-in-a-box/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "Counting"
        ]
    },
    "restore-the-array-from-adjacent-pairs": {
        "quesName": "Restore the Array From Adjacent Pairs",
        "quesLink": "https://leetcode.com/problems/restore-the-array-from-adjacent-pairs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "can-you-eat-your-favorite-candy-on-your-favorite-day": {
        "quesName": "Can You Eat Your Favorite Candy on Your Favorite Day?",
        "quesLink": "https://leetcode.com/problems/can-you-eat-your-favorite-candy-on-your-favorite-day/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "palindrome-partitioning-iv": {
        "quesName": "Palindrome Partitioning IV",
        "quesLink": "https://leetcode.com/problems/palindrome-partitioning-iv/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "sum-of-unique-elements": {
        "quesName": "Sum of Unique Elements",
        "quesLink": "https://leetcode.com/problems/sum-of-unique-elements/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "maximum-absolute-sum-of-any-subarray": {
        "quesName": "Maximum Absolute Sum of Any Subarray",
        "quesLink": "https://leetcode.com/problems/maximum-absolute-sum-of-any-subarray/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "minimum-length-of-string-after-deleting-similar-ends": {
        "quesName": "Minimum Length of String After Deleting Similar Ends",
        "quesLink": "https://leetcode.com/problems/minimum-length-of-string-after-deleting-similar-ends/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "maximum-number-of-events-that-can-be-attended-ii": {
        "quesName": "Maximum Number of Events That Can Be Attended II",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "check-if-array-is-sorted-and-rotated": {
        "quesName": "Check if Array Is Sorted and Rotated",
        "quesLink": "https://leetcode.com/problems/check-if-array-is-sorted-and-rotated/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "maximum-score-from-removing-stones": {
        "quesName": "Maximum Score From Removing Stones",
        "quesLink": "https://leetcode.com/problems/maximum-score-from-removing-stones/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "largest-merge-of-two-strings": {
        "quesName": "Largest Merge Of Two Strings",
        "quesLink": "https://leetcode.com/problems/largest-merge-of-two-strings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "Greedy"
        ]
    },
    "closest-subsequence-sum": {
        "quesName": "Closest Subsequence Sum",
        "quesLink": "https://leetcode.com/problems/closest-subsequence-sum/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "recyclable-and-low-fat-products": {
        "quesName": "Recyclable and Low Fat Products",
        "quesLink": "https://leetcode.com/problems/recyclable-and-low-fat-products/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "minimum-changes-to-make-alternating-binary-string": {
        "quesName": "Minimum Changes To Make Alternating Binary String",
        "quesLink": "https://leetcode.com/problems/minimum-changes-to-make-alternating-binary-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "count-number-of-homogenous-substrings": {
        "quesName": "Count Number of Homogenous Substrings",
        "quesLink": "https://leetcode.com/problems/count-number-of-homogenous-substrings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "minimum-limit-of-balls-in-a-bag": {
        "quesName": "Minimum Limit of Balls in a Bag",
        "quesLink": "https://leetcode.com/problems/minimum-limit-of-balls-in-a-bag/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "minimum-degree-of-a-connected-trio-in-a-graph": {
        "quesName": "Minimum Degree of a Connected Trio in a Graph",
        "quesLink": "https://leetcode.com/problems/minimum-degree-of-a-connected-trio-in-a-graph/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Graph"
        ]
    },
    "longest-nice-substring": {
        "quesName": "Longest Nice Substring",
        "quesLink": "https://leetcode.com/problems/longest-nice-substring/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Divide and Conquer",
            "Bit Manipulation",
            "Sliding Window"
        ]
    },
    "form-array-by-concatenating-subarrays-of-another-array": {
        "quesName": "Form Array by Concatenating Subarrays of Another Array",
        "quesLink": "https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "String Matching"
        ]
    },
    "map-of-highest-peak": {
        "quesName": "Map of Highest Peak",
        "quesLink": "https://leetcode.com/problems/map-of-highest-peak/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "tree-of-coprimes": {
        "quesName": "Tree of Coprimes",
        "quesLink": "https://leetcode.com/problems/tree-of-coprimes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ]
    },
    "merge-strings-alternately": {
        "quesName": "Merge Strings Alternately",
        "quesLink": "https://leetcode.com/problems/merge-strings-alternately/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "minimum-number-of-operations-to-move-all-balls-to-each-box": {
        "quesName": "Minimum Number of Operations to Move All Balls to Each Box",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-operations-to-move-all-balls-to-each-box/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "maximum-score-from-performing-multiplication-operations": {
        "quesName": "Maximum Score from Performing Multiplication Operations",
        "quesLink": "https://leetcode.com/problems/maximum-score-from-performing-multiplication-operations/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "maximize-palindrome-length-from-subsequences": {
        "quesName": "Maximize Palindrome Length From Subsequences",
        "quesLink": "https://leetcode.com/problems/maximize-palindrome-length-from-subsequences/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "count-items-matching-a-rule": {
        "quesName": "Count Items Matching a Rule",
        "quesLink": "https://leetcode.com/problems/count-items-matching-a-rule/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "closest-dessert-cost": {
        "quesName": "Closest Dessert Cost",
        "quesLink": "https://leetcode.com/problems/closest-dessert-cost/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking"
        ]
    },
    "equal-sum-arrays-with-minimum-number-of-operations": {
        "quesName": "Equal Sum Arrays With Minimum Number of Operations",
        "quesLink": "https://leetcode.com/problems/equal-sum-arrays-with-minimum-number-of-operations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ]
    },
    "car-fleet-ii": {
        "quesName": "Car Fleet II",
        "quesLink": "https://leetcode.com/problems/car-fleet-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Stack",
            "Heap (Priority Queue)",
            "Monotonic Stack"
        ]
    },
    "find-nearest-point-that-has-the-same-x-or-y-coordinate": {
        "quesName": "Find Nearest Point That Has the Same X or Y Coordinate",
        "quesLink": "https://leetcode.com/problems/find-nearest-point-that-has-the-same-x-or-y-coordinate/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "check-if-number-is-a-sum-of-powers-of-three": {
        "quesName": "Check if Number is a Sum of Powers of Three",
        "quesLink": "https://leetcode.com/problems/check-if-number-is-a-sum-of-powers-of-three/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "sum-of-beauty-of-all-substrings": {
        "quesName": "Sum of Beauty of All Substrings",
        "quesLink": "https://leetcode.com/problems/sum-of-beauty-of-all-substrings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "count-pairs-of-nodes": {
        "quesName": "Count Pairs Of Nodes",
        "quesLink": "https://leetcode.com/problems/count-pairs-of-nodes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Graph",
            "Sorting"
        ]
    },
    "check-if-binary-string-has-at-most-one-segment-of-ones": {
        "quesName": "Check if Binary String Has at Most One Segment of Ones",
        "quesLink": "https://leetcode.com/problems/check-if-binary-string-has-at-most-one-segment-of-ones/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "minimum-elements-to-add-to-form-a-given-sum": {
        "quesName": "Minimum Elements to Add to Form a Given Sum",
        "quesLink": "https://leetcode.com/problems/minimum-elements-to-add-to-form-a-given-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "number-of-restricted-paths-from-first-to-last-node": {
        "quesName": "Number of Restricted Paths From First to Last Node",
        "quesLink": "https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Graph",
            "Topological Sort",
            "Heap (Priority Queue)",
            "Shortest Path"
        ]
    },
    "make-the-xor-of-all-segments-equal-to-zero": {
        "quesName": "Make the XOR of All Segments Equal to Zero",
        "quesLink": "https://leetcode.com/problems/make-the-xor-of-all-segments-equal-to-zero/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation"
        ]
    },
    "primary-department-for-each-employee": {
        "quesName": "Primary Department for Each Employee",
        "quesLink": "https://leetcode.com/problems/primary-department-for-each-employee/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "check-if-one-string-swap-can-make-strings-equal": {
        "quesName": "Check if One String Swap Can Make Strings Equal",
        "quesLink": "https://leetcode.com/problems/check-if-one-string-swap-can-make-strings-equal/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "find-center-of-star-graph": {
        "quesName": "Find Center of Star Graph",
        "quesLink": "https://leetcode.com/problems/find-center-of-star-graph/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Graph"
        ]
    },
    "maximum-average-pass-ratio": {
        "quesName": "Maximum Average Pass Ratio",
        "quesLink": "https://leetcode.com/problems/maximum-average-pass-ratio/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "maximum-score-of-a-good-subarray": {
        "quesName": "Maximum Score of a Good Subarray",
        "quesLink": "https://leetcode.com/problems/maximum-score-of-a-good-subarray/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "rearrange-products-table": {
        "quesName": "Rearrange Products Table",
        "quesLink": "https://leetcode.com/problems/rearrange-products-table/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "second-largest-digit-in-a-string": {
        "quesName": "Second Largest Digit in a String",
        "quesLink": "https://leetcode.com/problems/second-largest-digit-in-a-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "design-authentication-manager": {
        "quesName": "Design Authentication Manager",
        "quesLink": "https://leetcode.com/problems/design-authentication-manager/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Design"
        ]
    },
    "maximum-number-of-consecutive-values-you-can-make": {
        "quesName": "Maximum Number of Consecutive Values You Can Make",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-consecutive-values-you-can-make/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "maximize-score-after-n-operations": {
        "quesName": "Maximize Score After N Operations",
        "quesLink": "https://leetcode.com/problems/maximize-score-after-n-operations/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Number Theory",
            "Bitmask"
        ]
    },
    "maximum-ascending-subarray-sum": {
        "quesName": "Maximum Ascending Subarray Sum",
        "quesLink": "https://leetcode.com/problems/maximum-ascending-subarray-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "number-of-orders-in-the-backlog": {
        "quesName": "Number of Orders in the Backlog",
        "quesLink": "https://leetcode.com/problems/number-of-orders-in-the-backlog/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Heap (Priority Queue)",
            "Simulation"
        ]
    },
    "maximum-value-at-a-given-index-in-a-bounded-array": {
        "quesName": "Maximum Value at a Given Index in a Bounded Array",
        "quesLink": "https://leetcode.com/problems/maximum-value-at-a-given-index-in-a-bounded-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Binary Search",
            "Greedy"
        ]
    },
    "count-pairs-with-xor-in-a-range": {
        "quesName": "Count Pairs With XOR in a Range",
        "quesLink": "https://leetcode.com/problems/count-pairs-with-xor-in-a-range/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Trie"
        ]
    },
    "number-of-different-integers-in-a-string": {
        "quesName": "Number of Different Integers in a String",
        "quesLink": "https://leetcode.com/problems/number-of-different-integers-in-a-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "minimum-number-of-operations-to-reinitialize-a-permutation": {
        "quesName": "Minimum Number of Operations to Reinitialize a Permutation",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-operations-to-reinitialize-a-permutation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Simulation"
        ]
    },
    "evaluate-the-bracket-pairs-of-a-string": {
        "quesName": "Evaluate the Bracket Pairs of a String",
        "quesLink": "https://leetcode.com/problems/evaluate-the-bracket-pairs-of-a-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "maximize-number-of-nice-divisors": {
        "quesName": "Maximize Number of Nice Divisors",
        "quesLink": "https://leetcode.com/problems/maximize-number-of-nice-divisors/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Recursion"
        ]
    },
    "determine-color-of-a-chessboard-square": {
        "quesName": "Determine Color of a Chessboard Square",
        "quesLink": "https://leetcode.com/problems/determine-color-of-a-chessboard-square/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "sentence-similarity-iii": {
        "quesName": "Sentence Similarity III",
        "quesLink": "https://leetcode.com/problems/sentence-similarity-iii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "String"
        ]
    },
    "count-nice-pairs-in-an-array": {
        "quesName": "Count Nice Pairs in an Array",
        "quesLink": "https://leetcode.com/problems/count-nice-pairs-in-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Counting"
        ]
    },
    "maximum-number-of-groups-getting-fresh-donuts": {
        "quesName": "Maximum Number of Groups Getting Fresh Donuts",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-groups-getting-fresh-donuts/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Memoization",
            "Bitmask"
        ]
    },
    "truncate-sentence": {
        "quesName": "Truncate Sentence",
        "quesLink": "https://leetcode.com/problems/truncate-sentence/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "finding-the-users-active-minutes": {
        "quesName": "Finding the Users Active Minutes",
        "quesLink": "https://leetcode.com/problems/finding-the-users-active-minutes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "minimum-absolute-sum-difference": {
        "quesName": "Minimum Absolute Sum Difference",
        "quesLink": "https://leetcode.com/problems/minimum-absolute-sum-difference/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting",
            "Ordered Set"
        ]
    },
    "number-of-different-subsequences-gcds": {
        "quesName": "Number of Different Subsequences GCDs",
        "quesLink": "https://leetcode.com/problems/number-of-different-subsequences-gcds/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Counting",
            "Number Theory"
        ]
    },
    "sign-of-the-product-of-an-array": {
        "quesName": "Sign of the Product of an Array",
        "quesLink": "https://leetcode.com/problems/sign-of-the-product-of-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "find-the-winner-of-the-circular-game": {
        "quesName": "Find the Winner of the Circular Game",
        "quesLink": "https://leetcode.com/problems/find-the-winner-of-the-circular-game/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Recursion",
            "Queue",
            "Simulation"
        ]
    },
    "minimum-sideway-jumps": {
        "quesName": "Minimum Sideway Jumps",
        "quesLink": "https://leetcode.com/problems/minimum-sideway-jumps/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "finding-mk-average": {
        "quesName": "Finding MK Average",
        "quesLink": "https://leetcode.com/problems/finding-mk-average/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Design",
            "Queue",
            "Heap (Priority Queue)",
            "Data Stream",
            "Ordered Set"
        ]
    },
    "minimum-operations-to-make-the-array-increasing": {
        "quesName": "Minimum Operations to Make the Array Increasing",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-make-the-array-increasing/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "queries-on-number-of-points-inside-a-circle": {
        "quesName": "Queries on Number of Points Inside a Circle",
        "quesLink": "https://leetcode.com/problems/queries-on-number-of-points-inside-a-circle/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry"
        ]
    },
    "maximum-xor-for-each-query": {
        "quesName": "Maximum XOR for Each Query",
        "quesLink": "https://leetcode.com/problems/maximum-xor-for-each-query/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Prefix Sum"
        ]
    },
    "minimum-number-of-operations-to-make-string-sorted": {
        "quesName": "Minimum Number of Operations to Make String Sorted",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-operations-to-make-string-sorted/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Combinatorics"
        ]
    },
    "check-if-the-sentence-is-pangram": {
        "quesName": "Check if the Sentence Is Pangram",
        "quesLink": "https://leetcode.com/problems/check-if-the-sentence-is-pangram/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "maximum-ice-cream-bars": {
        "quesName": "Maximum Ice Cream Bars",
        "quesLink": "https://leetcode.com/problems/maximum-ice-cream-bars/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "single-threaded-cpu": {
        "quesName": "Single-Threaded CPU",
        "quesLink": "https://leetcode.com/problems/single-threaded-cpu/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "find-xor-sum-of-all-pairs-bitwise-and": {
        "quesName": "Find XOR Sum of All Pairs Bitwise AND",
        "quesLink": "https://leetcode.com/problems/find-xor-sum-of-all-pairs-bitwise-and/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation"
        ]
    },
    "sum-of-digits-in-base-k": {
        "quesName": "Sum of Digits in Base K",
        "quesLink": "https://leetcode.com/problems/sum-of-digits-in-base-k/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "frequency-of-the-most-frequent-element": {
        "quesName": "Frequency of the Most Frequent Element",
        "quesLink": "https://leetcode.com/problems/frequency-of-the-most-frequent-element/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sliding Window",
            "Sorting",
            "Prefix Sum"
        ]
    },
    "longest-substring-of-all-vowels-in-order": {
        "quesName": "Longest Substring Of All Vowels in Order",
        "quesLink": "https://leetcode.com/problems/longest-substring-of-all-vowels-in-order/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Sliding Window"
        ]
    },
    "maximum-building-height": {
        "quesName": "Maximum Building Height",
        "quesLink": "https://leetcode.com/problems/maximum-building-height/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "replace-all-digits-with-characters": {
        "quesName": "Replace All Digits with Characters",
        "quesLink": "https://leetcode.com/problems/replace-all-digits-with-characters/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "seat-reservation-manager": {
        "quesName": "Seat Reservation Manager",
        "quesLink": "https://leetcode.com/problems/seat-reservation-manager/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Design",
            "Heap (Priority Queue)"
        ]
    },
    "maximum-element-after-decreasing-and-rearranging": {
        "quesName": "Maximum Element After Decreasing and Rearranging",
        "quesLink": "https://leetcode.com/problems/maximum-element-after-decreasing-and-rearranging/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "closest-room": {
        "quesName": "Closest Room",
        "quesLink": "https://leetcode.com/problems/closest-room/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ]
    },
    "minimum-distance-to-the-target-element": {
        "quesName": "Minimum Distance to the Target Element",
        "quesLink": "https://leetcode.com/problems/minimum-distance-to-the-target-element/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "splitting-a-string-into-descending-consecutive-values": {
        "quesName": "Splitting a String Into Descending Consecutive Values",
        "quesLink": "https://leetcode.com/problems/splitting-a-string-into-descending-consecutive-values/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking"
        ]
    },
    "minimum-adjacent-swaps-to-reach-the-kth-smallest-number": {
        "quesName": "Minimum Adjacent Swaps to Reach the Kth Smallest Number",
        "quesLink": "https://leetcode.com/problems/minimum-adjacent-swaps-to-reach-the-kth-smallest-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "Greedy"
        ]
    },
    "minimum-interval-to-include-each-query": {
        "quesName": "Minimum Interval to Include Each Query",
        "quesLink": "https://leetcode.com/problems/minimum-interval-to-include-each-query/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Line Sweep",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "maximum-population-year": {
        "quesName": "Maximum Population Year",
        "quesLink": "https://leetcode.com/problems/maximum-population-year/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Counting"
        ]
    },
    "maximum-distance-between-a-pair-of-values": {
        "quesName": "Maximum Distance Between a Pair of Values",
        "quesLink": "https://leetcode.com/problems/maximum-distance-between-a-pair-of-values/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Greedy"
        ]
    },
    "maximum-subarray-min-product": {
        "quesName": "Maximum Subarray Min-Product",
        "quesLink": "https://leetcode.com/problems/maximum-subarray-min-product/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack",
            "Prefix Sum"
        ]
    },
    "largest-color-value-in-a-directed-graph": {
        "quesName": "Largest Color Value in a Directed Graph",
        "quesLink": "https://leetcode.com/problems/largest-color-value-in-a-directed-graph/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Dynamic Programming",
            "Graph",
            "Topological Sort",
            "Memoization",
            "Counting"
        ]
    },
    "sorting-the-sentence": {
        "quesName": "Sorting the Sentence",
        "quesLink": "https://leetcode.com/problems/sorting-the-sentence/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Sorting"
        ]
    },
    "incremental-memory-leak": {
        "quesName": "Incremental Memory Leak",
        "quesLink": "https://leetcode.com/problems/incremental-memory-leak/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Simulation"
        ]
    },
    "rotating-the-box": {
        "quesName": "Rotating the Box",
        "quesLink": "https://leetcode.com/problems/rotating-the-box/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Matrix"
        ]
    },
    "sum-of-floored-pairs": {
        "quesName": "Sum of Floored Pairs",
        "quesLink": "https://leetcode.com/problems/sum-of-floored-pairs/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Prefix Sum"
        ]
    },
    "sum-of-all-subset-xor-totals": {
        "quesName": "Sum of All Subset XOR Totals",
        "quesLink": "https://leetcode.com/problems/sum-of-all-subset-xor-totals/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Backtracking",
            "Bit Manipulation",
            "Combinatorics"
        ]
    },
    "minimum-number-of-swaps-to-make-the-binary-string-alternating": {
        "quesName": "Minimum Number of Swaps to Make the Binary String Alternating",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-binary-string-alternating/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "finding-pairs-with-a-certain-sum": {
        "quesName": "Finding Pairs With a Certain Sum",
        "quesLink": "https://leetcode.com/problems/finding-pairs-with-a-certain-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Design"
        ]
    },
    "number-of-ways-to-rearrange-sticks-with-k-sticks-visible": {
        "quesName": "Number of Ways to Rearrange Sticks With K Sticks Visible",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-rearrange-sticks-with-k-sticks-visible/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ]
    },
    "longer-contiguous-segments-of-ones-than-zeros": {
        "quesName": "Longer Contiguous Segments of Ones than Zeros",
        "quesLink": "https://leetcode.com/problems/longer-contiguous-segments-of-ones-than-zeros/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "minimum-speed-to-arrive-on-time": {
        "quesName": "Minimum Speed to Arrive on Time",
        "quesLink": "https://leetcode.com/problems/minimum-speed-to-arrive-on-time/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "jump-game-vii": {
        "quesName": "Jump Game VII",
        "quesLink": "https://leetcode.com/problems/jump-game-vii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "stone-game-viii": {
        "quesName": "Stone Game VIII",
        "quesLink": "https://leetcode.com/problems/stone-game-viii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Prefix Sum",
            "Game Theory"
        ]
    },
    "calculate-special-bonus": {
        "quesName": "Calculate Special Bonus",
        "quesLink": "https://leetcode.com/problems/calculate-special-bonus/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "substrings-of-size-three-with-distinct-characters": {
        "quesName": "Substrings of Size Three with Distinct Characters",
        "quesLink": "https://leetcode.com/problems/substrings-of-size-three-with-distinct-characters/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window",
            "Counting"
        ]
    },
    "minimize-maximum-pair-sum-in-array": {
        "quesName": "Minimize Maximum Pair Sum in Array",
        "quesLink": "https://leetcode.com/problems/minimize-maximum-pair-sum-in-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ]
    },
    "get-biggest-three-rhombus-sums-in-a-grid": {
        "quesName": "Get Biggest Three Rhombus Sums in a Grid",
        "quesLink": "https://leetcode.com/problems/get-biggest-three-rhombus-sums-in-a-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix",
            "Prefix Sum"
        ]
    },
    "minimum-xor-sum-of-two-arrays": {
        "quesName": "Minimum XOR Sum of Two Arrays",
        "quesLink": "https://leetcode.com/problems/minimum-xor-sum-of-two-arrays/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "check-if-word-equals-summation-of-two-words": {
        "quesName": "Check if Word Equals Summation of Two Words",
        "quesLink": "https://leetcode.com/problems/check-if-word-equals-summation-of-two-words/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "maximum-value-after-insertion": {
        "quesName": "Maximum Value after Insertion",
        "quesLink": "https://leetcode.com/problems/maximum-value-after-insertion/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "process-tasks-using-servers": {
        "quesName": "Process Tasks Using Servers",
        "quesLink": "https://leetcode.com/problems/process-tasks-using-servers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Heap (Priority Queue)"
        ]
    },
    "minimum-skips-to-arrive-at-meeting-on-time": {
        "quesName": "Minimum Skips to Arrive at Meeting On Time",
        "quesLink": "https://leetcode.com/problems/minimum-skips-to-arrive-at-meeting-on-time/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "egg-drop-with-2-eggs-and-n-floors": {
        "quesName": "Egg Drop With 2 Eggs and N Floors",
        "quesLink": "https://leetcode.com/problems/egg-drop-with-2-eggs-and-n-floors/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming"
        ]
    },
    "determine-whether-matrix-can-be-obtained-by-rotation": {
        "quesName": "Determine Whether Matrix Can Be Obtained By Rotation",
        "quesLink": "https://leetcode.com/problems/determine-whether-matrix-can-be-obtained-by-rotation/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "reduction-operations-to-make-the-array-elements-equal": {
        "quesName": "Reduction Operations to Make the Array Elements Equal",
        "quesLink": "https://leetcode.com/problems/reduction-operations-to-make-the-array-elements-equal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "minimum-number-of-flips-to-make-the-binary-string-alternating": {
        "quesName": "Minimum Number of Flips to Make the Binary String Alternating",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-flips-to-make-the-binary-string-alternating/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy",
            "Sliding Window"
        ]
    },
    "minimum-space-wasted-from-packaging": {
        "quesName": "Minimum Space Wasted From Packaging",
        "quesLink": "https://leetcode.com/problems/minimum-space-wasted-from-packaging/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting",
            "Prefix Sum"
        ]
    },
    "the-latest-login-in-2020": {
        "quesName": "The Latest Login in 2020",
        "quesLink": "https://leetcode.com/problems/the-latest-login-in-2020/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "check-if-all-the-integers-in-a-range-are-covered": {
        "quesName": "Check if All the Integers in a Range Are Covered",
        "quesLink": "https://leetcode.com/problems/check-if-all-the-integers-in-a-range-are-covered/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ]
    },
    "find-the-student-that-will-replace-the-chalk": {
        "quesName": "Find the Student that Will Replace the Chalk",
        "quesLink": "https://leetcode.com/problems/find-the-student-that-will-replace-the-chalk/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Simulation",
            "Prefix Sum"
        ]
    },
    "largest-magic-square": {
        "quesName": "Largest Magic Square",
        "quesLink": "https://leetcode.com/problems/largest-magic-square/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ]
    },
    "minimum-cost-to-change-the-final-value-of-expression": {
        "quesName": "Minimum Cost to Change the Final Value of Expression",
        "quesLink": "https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming",
            "Stack"
        ]
    },
    "redistribute-characters-to-make-all-strings-equal": {
        "quesName": "Redistribute Characters to Make All Strings Equal",
        "quesLink": "https://leetcode.com/problems/redistribute-characters-to-make-all-strings-equal/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "maximum-number-of-removable-characters": {
        "quesName": "Maximum Number of Removable Characters",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-removable-characters/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Binary Search"
        ]
    },
    "merge-triplets-to-form-target-triplet": {
        "quesName": "Merge Triplets to Form Target Triplet",
        "quesLink": "https://leetcode.com/problems/merge-triplets-to-form-target-triplet/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "the-earliest-and-latest-rounds-where-players-compete": {
        "quesName": "The Earliest and Latest Rounds Where Players Compete",
        "quesLink": "https://leetcode.com/problems/the-earliest-and-latest-rounds-where-players-compete/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Memoization"
        ]
    },
    "find-a-peak-element-ii": {
        "quesName": "Find a Peak Element II",
        "quesLink": "https://leetcode.com/problems/find-a-peak-element-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Matrix"
        ]
    },
    "largest-odd-number-in-string": {
        "quesName": "Largest Odd Number in String",
        "quesLink": "https://leetcode.com/problems/largest-odd-number-in-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Greedy"
        ]
    },
    "the-number-of-full-rounds-you-have-played": {
        "quesName": "The Number of Full Rounds You Have Played",
        "quesLink": "https://leetcode.com/problems/the-number-of-full-rounds-you-have-played/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "count-sub-islands": {
        "quesName": "Count Sub Islands",
        "quesLink": "https://leetcode.com/problems/count-sub-islands/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "minimum-absolute-difference-queries": {
        "quesName": "Minimum Absolute Difference Queries",
        "quesLink": "https://leetcode.com/problems/minimum-absolute-difference-queries/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "count-salary-categories": {
        "quesName": "Count Salary Categories",
        "quesLink": "https://leetcode.com/problems/count-salary-categories/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "remove-one-element-to-make-the-array-strictly-increasing": {
        "quesName": "Remove One Element to Make the Array Strictly Increasing",
        "quesLink": "https://leetcode.com/problems/remove-one-element-to-make-the-array-strictly-increasing/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "remove-all-occurrences-of-a-substring": {
        "quesName": "Remove All Occurrences of a Substring",
        "quesLink": "https://leetcode.com/problems/remove-all-occurrences-of-a-substring/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "maximum-alternating-subsequence-sum": {
        "quesName": "Maximum Alternating Subsequence Sum",
        "quesLink": "https://leetcode.com/problems/maximum-alternating-subsequence-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "design-movie-rental-system": {
        "quesName": "Design Movie Rental System",
        "quesLink": "https://leetcode.com/problems/design-movie-rental-system/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ]
    },
    "maximum-product-difference-between-two-pairs": {
        "quesName": "Maximum Product Difference Between Two Pairs",
        "quesLink": "https://leetcode.com/problems/maximum-product-difference-between-two-pairs/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "cyclically-rotating-a-grid": {
        "quesName": "Cyclically Rotating a Grid",
        "quesLink": "https://leetcode.com/problems/cyclically-rotating-a-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "number-of-wonderful-substrings": {
        "quesName": "Number of Wonderful Substrings",
        "quesLink": "https://leetcode.com/problems/number-of-wonderful-substrings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Prefix Sum"
        ]
    },
    "count-ways-to-build-rooms-in-an-ant-colony": {
        "quesName": "Count Ways to Build Rooms in an Ant Colony",
        "quesLink": "https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Tree",
            "Graph",
            "Topological Sort",
            "Combinatorics"
        ]
    },
    "build-array-from-permutation": {
        "quesName": "Build Array from Permutation",
        "quesLink": "https://leetcode.com/problems/build-array-from-permutation/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "eliminate-maximum-number-of-monsters": {
        "quesName": "Eliminate Maximum Number of Monsters",
        "quesLink": "https://leetcode.com/problems/eliminate-maximum-number-of-monsters/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "count-good-numbers": {
        "quesName": "Count Good Numbers",
        "quesLink": "https://leetcode.com/problems/count-good-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Recursion"
        ]
    },
    "longest-common-subpath": {
        "quesName": "Longest Common Subpath",
        "quesLink": "https://leetcode.com/problems/longest-common-subpath/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Rolling Hash",
            "Suffix Array",
            "Hash Function"
        ]
    },
    "count-square-sum-triples": {
        "quesName": "Count Square Sum Triples",
        "quesLink": "https://leetcode.com/problems/count-square-sum-triples/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Enumeration"
        ]
    },
    "nearest-exit-from-entrance-in-maze": {
        "quesName": "Nearest Exit from Entrance in Maze",
        "quesLink": "https://leetcode.com/problems/nearest-exit-from-entrance-in-maze/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "sum-game": {
        "quesName": "Sum Game",
        "quesLink": "https://leetcode.com/problems/sum-game/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy",
            "Game Theory"
        ]
    },
    "minimum-cost-to-reach-destination-in-time": {
        "quesName": "Minimum Cost to Reach Destination in Time",
        "quesLink": "https://leetcode.com/problems/minimum-cost-to-reach-destination-in-time/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Graph"
        ]
    },
    "concatenation-of-array": {
        "quesName": "Concatenation of Array",
        "quesLink": "https://leetcode.com/problems/concatenation-of-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "unique-length-3-palindromic-subsequences": {
        "quesName": "Unique Length-3 Palindromic Subsequences",
        "quesLink": "https://leetcode.com/problems/unique-length-3-palindromic-subsequences/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Prefix Sum"
        ]
    },
    "painting-a-grid-with-three-different-colors": {
        "quesName": "Painting a Grid With Three Different Colors",
        "quesLink": "https://leetcode.com/problems/painting-a-grid-with-three-different-colors/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "merge-bsts-to-create-single-bst": {
        "quesName": "Merge BSTs to Create Single BST",
        "quesLink": "https://leetcode.com/problems/merge-bsts-to-create-single-bst/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Binary Search",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "confirmation-rate": {
        "quesName": "Confirmation Rate",
        "quesLink": "https://leetcode.com/problems/confirmation-rate/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "maximum-number-of-words-you-can-type": {
        "quesName": "Maximum Number of Words You Can Type",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-words-you-can-type/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "add-minimum-number-of-rungs": {
        "quesName": "Add Minimum Number of Rungs",
        "quesLink": "https://leetcode.com/problems/add-minimum-number-of-rungs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "maximum-number-of-points-with-cost": {
        "quesName": "Maximum Number of Points with Cost",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-points-with-cost/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "maximum-genetic-difference-query": {
        "quesName": "Maximum Genetic Difference Query",
        "quesLink": "https://leetcode.com/problems/maximum-genetic-difference-query/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Trie"
        ]
    },
    "check-if-all-characters-have-equal-number-of-occurrences": {
        "quesName": "Check if All Characters Have Equal Number of Occurrences",
        "quesLink": "https://leetcode.com/problems/check-if-all-characters-have-equal-number-of-occurrences/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "the-number-of-the-smallest-unoccupied-chair": {
        "quesName": "The Number of the Smallest Unoccupied Chair",
        "quesLink": "https://leetcode.com/problems/the-number-of-the-smallest-unoccupied-chair/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Heap (Priority Queue)",
            "Ordered Set"
        ]
    },
    "describe-the-painting": {
        "quesName": "Describe the Painting",
        "quesLink": "https://leetcode.com/problems/describe-the-painting/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "number-of-visible-people-in-a-queue": {
        "quesName": "Number of Visible People in a Queue",
        "quesLink": "https://leetcode.com/problems/number-of-visible-people-in-a-queue/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "sum-of-digits-of-string-after-convert": {
        "quesName": "Sum of Digits of String After Convert",
        "quesLink": "https://leetcode.com/problems/sum-of-digits-of-string-after-convert/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Simulation"
        ]
    },
    "largest-number-after-mutating-substring": {
        "quesName": "Largest Number After Mutating Substring",
        "quesLink": "https://leetcode.com/problems/largest-number-after-mutating-substring/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Greedy"
        ]
    },
    "maximum-compatibility-score-sum": {
        "quesName": "Maximum Compatibility Score Sum",
        "quesLink": "https://leetcode.com/problems/maximum-compatibility-score-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "delete-duplicate-folders-in-system": {
        "quesName": "Delete Duplicate Folders in System",
        "quesLink": "https://leetcode.com/problems/delete-duplicate-folders-in-system/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Trie",
            "Hash Function"
        ]
    },
    "three-divisors": {
        "quesName": "Three Divisors",
        "quesLink": "https://leetcode.com/problems/three-divisors/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "maximum-number-of-weeks-for-which-you-can-work": {
        "quesName": "Maximum Number of Weeks for Which You Can Work",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-weeks-for-which-you-can-work/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "minimum-garden-perimeter-to-collect-enough-apples": {
        "quesName": "Minimum Garden Perimeter to Collect Enough Apples",
        "quesLink": "https://leetcode.com/problems/minimum-garden-perimeter-to-collect-enough-apples/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search"
        ]
    },
    "count-number-of-special-subsequences": {
        "quesName": "Count Number of Special Subsequences",
        "quesLink": "https://leetcode.com/problems/count-number-of-special-subsequences/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "delete-characters-to-make-fancy-string": {
        "quesName": "Delete Characters to Make Fancy String",
        "quesLink": "https://leetcode.com/problems/delete-characters-to-make-fancy-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "check-if-move-is-legal": {
        "quesName": "Check if Move is Legal",
        "quesLink": "https://leetcode.com/problems/check-if-move-is-legal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Enumeration"
        ]
    },
    "minimum-total-space-wasted-with-k-resizing-operations": {
        "quesName": "Minimum Total Space Wasted With K Resizing Operations",
        "quesLink": "https://leetcode.com/problems/minimum-total-space-wasted-with-k-resizing-operations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "maximum-product-of-the-length-of-two-palindromic-substrings": {
        "quesName": "Maximum Product of the Length of Two Palindromic Substrings",
        "quesLink": "https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-substrings/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Rolling Hash",
            "Hash Function"
        ]
    },
    "check-if-string-is-a-prefix-of-array": {
        "quesName": "Check If String Is a Prefix of Array",
        "quesLink": "https://leetcode.com/problems/check-if-string-is-a-prefix-of-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "remove-stones-to-minimize-the-total": {
        "quesName": "Remove Stones to Minimize the Total",
        "quesLink": "https://leetcode.com/problems/remove-stones-to-minimize-the-total/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Heap (Priority Queue)"
        ]
    },
    "minimum-number-of-swaps-to-make-the-string-balanced": {
        "quesName": "Minimum Number of Swaps to Make the String Balanced",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-string-balanced/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "Stack",
            "Greedy"
        ]
    },
    "find-the-longest-valid-obstacle-course-at-each-position": {
        "quesName": "Find the Longest Valid Obstacle Course at Each Position",
        "quesLink": "https://leetcode.com/problems/find-the-longest-valid-obstacle-course-at-each-position/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Binary Indexed Tree"
        ]
    },
    "employees-with-missing-information": {
        "quesName": "Employees With Missing Information",
        "quesLink": "https://leetcode.com/problems/employees-with-missing-information/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "number-of-strings-that-appear-as-substrings-in-word": {
        "quesName": "Number of Strings That Appear as Substrings in Word",
        "quesLink": "https://leetcode.com/problems/number-of-strings-that-appear-as-substrings-in-word/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "array-with-elements-not-equal-to-average-of-neighbors": {
        "quesName": "Array With Elements Not Equal to Average of Neighbors",
        "quesLink": "https://leetcode.com/problems/array-with-elements-not-equal-to-average-of-neighbors/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "minimum-non-zero-product-of-the-array-elements": {
        "quesName": "Minimum Non-Zero Product of the Array Elements",
        "quesLink": "https://leetcode.com/problems/minimum-non-zero-product-of-the-array-elements/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy",
            "Recursion"
        ]
    },
    "last-day-where-you-can-still-cross": {
        "quesName": "Last Day Where You Can Still Cross",
        "quesLink": "https://leetcode.com/problems/last-day-where-you-can-still-cross/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "find-if-path-exists-in-graph": {
        "quesName": "Find if Path Exists in Graph",
        "quesLink": "https://leetcode.com/problems/find-if-path-exists-in-graph/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "minimum-time-to-type-word-using-special-typewriter": {
        "quesName": "Minimum Time to Type Word Using Special Typewriter",
        "quesLink": "https://leetcode.com/problems/minimum-time-to-type-word-using-special-typewriter/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "maximum-matrix-sum": {
        "quesName": "Maximum Matrix Sum",
        "quesLink": "https://leetcode.com/problems/maximum-matrix-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Matrix"
        ]
    },
    "number-of-ways-to-arrive-at-destination": {
        "quesName": "Number of Ways to Arrive at Destination",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-arrive-at-destination/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Graph",
            "Topological Sort",
            "Shortest Path"
        ]
    },
    "number-of-ways-to-separate-numbers": {
        "quesName": "Number of Ways to Separate Numbers",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-separate-numbers/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Suffix Array"
        ]
    },
    "employees-whose-manager-left-the-company": {
        "quesName": "Employees Whose Manager Left the Company",
        "quesLink": "https://leetcode.com/problems/employees-whose-manager-left-the-company/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "find-greatest-common-divisor-of-array": {
        "quesName": "Find Greatest Common Divisor of Array",
        "quesLink": "https://leetcode.com/problems/find-greatest-common-divisor-of-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ]
    },
    "find-unique-binary-string": {
        "quesName": "Find Unique Binary String",
        "quesLink": "https://leetcode.com/problems/find-unique-binary-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Backtracking"
        ]
    },
    "minimize-the-difference-between-target-and-chosen-elements": {
        "quesName": "Minimize the Difference Between Target and Chosen Elements",
        "quesLink": "https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "find-array-given-subset-sums": {
        "quesName": "Find Array Given Subset Sums",
        "quesLink": "https://leetcode.com/problems/find-array-given-subset-sums/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Divide and Conquer"
        ]
    },
    "minimum-difference-between-highest-and-lowest-of-k-scores": {
        "quesName": "Minimum Difference Between Highest and Lowest of K Scores",
        "quesLink": "https://leetcode.com/problems/minimum-difference-between-highest-and-lowest-of-k-scores/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sliding Window",
            "Sorting"
        ]
    },
    "find-the-kth-largest-integer-in-the-array": {
        "quesName": "Find the Kth Largest Integer in the Array",
        "quesLink": "https://leetcode.com/problems/find-the-kth-largest-integer-in-the-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Quickselect"
        ]
    },
    "minimum-number-of-work-sessions-to-finish-the-tasks": {
        "quesName": "Minimum Number of Work Sessions to Finish the Tasks",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-work-sessions-to-finish-the-tasks/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "number-of-unique-good-subsequences": {
        "quesName": "Number of Unique Good Subsequences",
        "quesLink": "https://leetcode.com/problems/number-of-unique-good-subsequences/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "find-the-middle-index-in-array": {
        "quesName": "Find the Middle Index in Array",
        "quesLink": "https://leetcode.com/problems/find-the-middle-index-in-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "find-all-groups-of-farmland": {
        "quesName": "Find All Groups of Farmland",
        "quesLink": "https://leetcode.com/problems/find-all-groups-of-farmland/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "operations-on-tree": {
        "quesName": "Operations on Tree",
        "quesLink": "https://leetcode.com/problems/operations-on-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design"
        ]
    },
    "the-number-of-good-subsets": {
        "quesName": "The Number of Good Subsets",
        "quesLink": "https://leetcode.com/problems/the-number-of-good-subsets/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "count-special-quadruplets": {
        "quesName": "Count Special Quadruplets",
        "quesLink": "https://leetcode.com/problems/count-special-quadruplets/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Enumeration"
        ]
    },
    "the-number-of-weak-characters-in-the-game": {
        "quesName": "The Number of Weak Characters in the Game",
        "quesLink": "https://leetcode.com/problems/the-number-of-weak-characters-in-the-game/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Greedy",
            "Sorting",
            "Monotonic Stack"
        ]
    },
    "first-day-where-you-have-been-in-all-the-rooms": {
        "quesName": "First Day Where You Have Been in All the Rooms",
        "quesLink": "https://leetcode.com/problems/first-day-where-you-have-been-in-all-the-rooms/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "gcd-sort-of-an-array": {
        "quesName": "GCD Sort of an Array",
        "quesLink": "https://leetcode.com/problems/gcd-sort-of-an-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Union Find",
            "Sorting",
            "Number Theory"
        ]
    },
    "reverse-prefix-of-word": {
        "quesName": "Reverse Prefix of Word",
        "quesLink": "https://leetcode.com/problems/reverse-prefix-of-word/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "number-of-pairs-of-interchangeable-rectangles": {
        "quesName": "Number of Pairs of Interchangeable Rectangles",
        "quesLink": "https://leetcode.com/problems/number-of-pairs-of-interchangeable-rectangles/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Counting",
            "Number Theory"
        ]
    },
    "maximum-product-of-the-length-of-two-palindromic-subsequences": {
        "quesName": "Maximum Product of the Length of Two Palindromic Subsequences",
        "quesLink": "https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-subsequences/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "smallest-missing-genetic-value-in-each-subtree": {
        "quesName": "Smallest Missing Genetic Value in Each Subtree",
        "quesLink": "https://leetcode.com/problems/smallest-missing-genetic-value-in-each-subtree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Union Find"
        ]
    },
    "count-number-of-pairs-with-absolute-difference-k": {
        "quesName": "Count Number of Pairs With Absolute Difference K",
        "quesLink": "https://leetcode.com/problems/count-number-of-pairs-with-absolute-difference-k/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "find-original-array-from-doubled-array": {
        "quesName": "Find Original Array From Doubled Array",
        "quesLink": "https://leetcode.com/problems/find-original-array-from-doubled-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting"
        ]
    },
    "maximum-earnings-from-taxi": {
        "quesName": "Maximum Earnings From Taxi",
        "quesLink": "https://leetcode.com/problems/maximum-earnings-from-taxi/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "minimum-number-of-operations-to-make-array-continuous": {
        "quesName": "Minimum Number of Operations to Make Array Continuous",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-operations-to-make-array-continuous/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "final-value-of-variable-after-performing-operations": {
        "quesName": "Final Value of Variable After Performing Operations",
        "quesLink": "https://leetcode.com/problems/final-value-of-variable-after-performing-operations/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Simulation"
        ]
    },
    "sum-of-beauty-in-the-array": {
        "quesName": "Sum of Beauty in the Array",
        "quesLink": "https://leetcode.com/problems/sum-of-beauty-in-the-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "detect-squares": {
        "quesName": "Detect Squares",
        "quesLink": "https://leetcode.com/problems/detect-squares/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Design",
            "Counting"
        ]
    },
    "longest-subsequence-repeated-k-times": {
        "quesName": "Longest Subsequence Repeated k Times",
        "quesLink": "https://leetcode.com/problems/longest-subsequence-repeated-k-times/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking",
            "Greedy",
            "Counting",
            "Enumeration"
        ]
    },
    "maximum-difference-between-increasing-elements": {
        "quesName": "Maximum Difference Between Increasing Elements",
        "quesLink": "https://leetcode.com/problems/maximum-difference-between-increasing-elements/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "grid-game": {
        "quesName": "Grid Game",
        "quesLink": "https://leetcode.com/problems/grid-game/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ]
    },
    "check-if-word-can-be-placed-in-crossword": {
        "quesName": "Check if Word Can Be Placed In Crossword",
        "quesLink": "https://leetcode.com/problems/check-if-word-can-be-placed-in-crossword/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Enumeration"
        ]
    },
    "the-score-of-students-solving-math-expression": {
        "quesName": "The Score of Students Solving Math Expression",
        "quesLink": "https://leetcode.com/problems/the-score-of-students-solving-math-expression/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "String",
            "Dynamic Programming",
            "Stack",
            "Memoization"
        ]
    },
    "convert-1d-array-into-2d-array": {
        "quesName": "Convert 1D Array Into 2D Array",
        "quesLink": "https://leetcode.com/problems/convert-1d-array-into-2d-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "number-of-pairs-of-strings-with-concatenation-equal-to-target": {
        "quesName": "Number of Pairs of Strings With Concatenation Equal to Target",
        "quesLink": "https://leetcode.com/problems/number-of-pairs-of-strings-with-concatenation-equal-to-target/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "maximize-the-confusion-of-an-exam": {
        "quesName": "Maximize the Confusion of an Exam",
        "quesLink": "https://leetcode.com/problems/maximize-the-confusion-of-an-exam/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "maximum-number-of-ways-to-partition-an-array": {
        "quesName": "Maximum Number of Ways to Partition an Array",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-ways-to-partition-an-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting",
            "Enumeration",
            "Prefix Sum"
        ]
    },
    "minimum-moves-to-convert-string": {
        "quesName": "Minimum Moves to Convert String",
        "quesLink": "https://leetcode.com/problems/minimum-moves-to-convert-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "find-missing-observations": {
        "quesName": "Find Missing Observations",
        "quesLink": "https://leetcode.com/problems/find-missing-observations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Simulation"
        ]
    },
    "stone-game-ix": {
        "quesName": "Stone Game IX",
        "quesLink": "https://leetcode.com/problems/stone-game-ix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Counting",
            "Game Theory"
        ]
    },
    "smallest-k-length-subsequence-with-occurrences-of-a-letter": {
        "quesName": "Smallest K-Length Subsequence With Occurrences of a Letter",
        "quesLink": "https://leetcode.com/problems/smallest-k-length-subsequence-with-occurrences-of-a-letter/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ]
    },
    "two-out-of-three": {
        "quesName": "Two Out of Three",
        "quesLink": "https://leetcode.com/problems/two-out-of-three/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "minimum-operations-to-make-a-uni-value-grid": {
        "quesName": "Minimum Operations to Make a Uni-Value Grid",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-make-a-uni-value-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Sorting",
            "Matrix"
        ]
    },
    "stock-price-fluctuation": {
        "quesName": "Stock Price Fluctuation ",
        "quesLink": "https://leetcode.com/problems/stock-price-fluctuation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Data Stream",
            "Ordered Set"
        ]
    },
    "partition-array-into-two-arrays-to-minimize-sum-difference": {
        "quesName": "Partition Array Into Two Arrays to Minimize Sum Difference",
        "quesLink": "https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Dynamic Programming",
            "Bit Manipulation",
            "Ordered Set",
            "Bitmask"
        ]
    },
    "minimum-number-of-moves-to-seat-everyone": {
        "quesName": "Minimum Number of Moves to Seat Everyone",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-moves-to-seat-everyone/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "remove-colored-pieces-if-both-neighbors-are-the-same-color": {
        "quesName": "Remove Colored Pieces if Both Neighbors are the Same Color",
        "quesLink": "https://leetcode.com/problems/remove-colored-pieces-if-both-neighbors-are-the-same-color/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Greedy",
            "Game Theory"
        ]
    },
    "the-time-when-the-network-becomes-idle": {
        "quesName": "The Time When the Network Becomes Idle",
        "quesLink": "https://leetcode.com/problems/the-time-when-the-network-becomes-idle/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "kth-smallest-product-of-two-sorted-arrays": {
        "quesName": "Kth Smallest Product of Two Sorted Arrays",
        "quesLink": "https://leetcode.com/problems/kth-smallest-product-of-two-sorted-arrays/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "check-if-numbers-are-ascending-in-a-sentence": {
        "quesName": "Check if Numbers Are Ascending in a Sentence",
        "quesLink": "https://leetcode.com/problems/check-if-numbers-are-ascending-in-a-sentence/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "simple-bank-system": {
        "quesName": "Simple Bank System",
        "quesLink": "https://leetcode.com/problems/simple-bank-system/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Design",
            "Simulation"
        ]
    },
    "count-number-of-maximum-bitwise-or-subsets": {
        "quesName": "Count Number of Maximum Bitwise-OR Subsets",
        "quesLink": "https://leetcode.com/problems/count-number-of-maximum-bitwise-or-subsets/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation"
        ]
    },
    "second-minimum-time-to-reach-destination": {
        "quesName": "Second Minimum Time to Reach Destination",
        "quesLink": "https://leetcode.com/problems/second-minimum-time-to-reach-destination/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Breadth-First Search",
            "Graph",
            "Shortest Path"
        ]
    },
    "number-of-valid-words-in-a-sentence": {
        "quesName": "Number of Valid Words in a Sentence",
        "quesLink": "https://leetcode.com/problems/number-of-valid-words-in-a-sentence/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "next-greater-numerically-balanced-number": {
        "quesName": "Next Greater Numerically Balanced Number",
        "quesLink": "https://leetcode.com/problems/next-greater-numerically-balanced-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Backtracking",
            "Enumeration"
        ]
    },
    "count-nodes-with-the-highest-score": {
        "quesName": "Count Nodes With the Highest Score",
        "quesLink": "https://leetcode.com/problems/count-nodes-with-the-highest-score/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "parallel-courses-iii": {
        "quesName": "Parallel Courses III",
        "quesLink": "https://leetcode.com/problems/parallel-courses-iii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Graph",
            "Topological Sort"
        ]
    },
    "kth-distinct-string-in-an-array": {
        "quesName": "Kth Distinct String in an Array",
        "quesLink": "https://leetcode.com/problems/kth-distinct-string-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "two-best-non-overlapping-events": {
        "quesName": "Two Best Non-Overlapping Events",
        "quesLink": "https://leetcode.com/problems/two-best-non-overlapping-events/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "plates-between-candles": {
        "quesName": "Plates Between Candles",
        "quesLink": "https://leetcode.com/problems/plates-between-candles/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Binary Search",
            "Prefix Sum"
        ]
    },
    "number-of-valid-move-combinations-on-chessboard": {
        "quesName": "Number of Valid Move Combinations On Chessboard",
        "quesLink": "https://leetcode.com/problems/number-of-valid-move-combinations-on-chessboard/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Backtracking",
            "Simulation"
        ]
    },
    "smallest-index-with-equal-value": {
        "quesName": "Smallest Index With Equal Value",
        "quesLink": "https://leetcode.com/problems/smallest-index-with-equal-value/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "find-the-minimum-and-maximum-number-of-nodes-between-critical-points": {
        "quesName": "Find the Minimum and Maximum Number of Nodes Between Critical Points",
        "quesLink": "https://leetcode.com/problems/find-the-minimum-and-maximum-number-of-nodes-between-critical-points/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List"
        ]
    },
    "minimum-operations-to-convert-number": {
        "quesName": "Minimum Operations to Convert Number",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-convert-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search"
        ]
    },
    "check-if-an-original-string-exists-given-two-encoded-strings": {
        "quesName": "Check if an Original String Exists Given Two Encoded Strings",
        "quesLink": "https://leetcode.com/problems/check-if-an-original-string-exists-given-two-encoded-strings/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "count-vowel-substrings-of-a-string": {
        "quesName": "Count Vowel Substrings of a String",
        "quesLink": "https://leetcode.com/problems/count-vowel-substrings-of-a-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "vowels-of-all-substrings": {
        "quesName": "Vowels of All Substrings",
        "quesLink": "https://leetcode.com/problems/vowels-of-all-substrings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming",
            "Combinatorics"
        ]
    },
    "minimized-maximum-of-products-distributed-to-any-store": {
        "quesName": "Minimized Maximum of Products Distributed to Any Store",
        "quesLink": "https://leetcode.com/problems/minimized-maximum-of-products-distributed-to-any-store/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "maximum-path-quality-of-a-graph": {
        "quesName": "Maximum Path Quality of a Graph",
        "quesLink": "https://leetcode.com/problems/maximum-path-quality-of-a-graph/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking",
            "Graph"
        ]
    },
    "check-whether-two-strings-are-almost-equivalent": {
        "quesName": "Check Whether Two Strings are Almost Equivalent",
        "quesLink": "https://leetcode.com/problems/check-whether-two-strings-are-almost-equivalent/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "walking-robot-simulation-ii": {
        "quesName": "Walking Robot Simulation II",
        "quesLink": "https://leetcode.com/problems/walking-robot-simulation-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Design",
            "Simulation"
        ]
    },
    "most-beautiful-item-for-each-query": {
        "quesName": "Most Beautiful Item for Each Query",
        "quesLink": "https://leetcode.com/problems/most-beautiful-item-for-each-query/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ]
    },
    "maximum-number-of-tasks-you-can-assign": {
        "quesName": "Maximum Number of Tasks You Can Assign",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-tasks-you-can-assign/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Queue",
            "Sorting",
            "Monotonic Queue"
        ]
    },
    "time-needed-to-buy-tickets": {
        "quesName": "Time Needed to Buy Tickets",
        "quesLink": "https://leetcode.com/problems/time-needed-to-buy-tickets/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Queue",
            "Simulation"
        ]
    },
    "reverse-nodes-in-even-length-groups": {
        "quesName": "Reverse Nodes in Even Length Groups",
        "quesLink": "https://leetcode.com/problems/reverse-nodes-in-even-length-groups/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List"
        ]
    },
    "decode-the-slanted-ciphertext": {
        "quesName": "Decode the Slanted Ciphertext",
        "quesLink": "https://leetcode.com/problems/decode-the-slanted-ciphertext/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Simulation"
        ]
    },
    "process-restricted-friend-requests": {
        "quesName": "Process Restricted Friend Requests",
        "quesLink": "https://leetcode.com/problems/process-restricted-friend-requests/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Union Find",
            "Graph"
        ]
    },
    "two-furthest-houses-with-different-colors": {
        "quesName": "Two Furthest Houses With Different Colors",
        "quesLink": "https://leetcode.com/problems/two-furthest-houses-with-different-colors/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "watering-plants": {
        "quesName": "Watering Plants",
        "quesLink": "https://leetcode.com/problems/watering-plants/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "range-frequency-queries": {
        "quesName": "Range Frequency Queries",
        "quesLink": "https://leetcode.com/problems/range-frequency-queries/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Design",
            "Segment Tree"
        ]
    },
    "sum-of-k-mirror-numbers": {
        "quesName": "Sum of k-Mirror Numbers",
        "quesLink": "https://leetcode.com/problems/sum-of-k-mirror-numbers/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Enumeration"
        ]
    },
    "count-common-words-with-one-occurrence": {
        "quesName": "Count Common Words With One Occurrence",
        "quesLink": "https://leetcode.com/problems/count-common-words-with-one-occurrence/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "minimum-number-of-food-buckets-to-feed-the-hamsters": {
        "quesName": "Minimum Number of Food Buckets to Feed the Hamsters",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-food-buckets-to-feed-the-hamsters/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "minimum-cost-homecoming-of-a-robot-in-a-grid": {
        "quesName": "Minimum Cost Homecoming of a Robot in a Grid",
        "quesLink": "https://leetcode.com/problems/minimum-cost-homecoming-of-a-robot-in-a-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Matrix"
        ]
    },
    "count-fertile-pyramids-in-a-land": {
        "quesName": "Count Fertile Pyramids in a Land",
        "quesLink": "https://leetcode.com/problems/count-fertile-pyramids-in-a-land/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "find-target-indices-after-sorting-array": {
        "quesName": "Find Target Indices After Sorting Array",
        "quesLink": "https://leetcode.com/problems/find-target-indices-after-sorting-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ]
    },
    "k-radius-subarray-averages": {
        "quesName": "K Radius Subarray Averages",
        "quesLink": "https://leetcode.com/problems/k-radius-subarray-averages/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sliding Window"
        ]
    },
    "removing-minimum-and-maximum-from-array": {
        "quesName": "Removing Minimum and Maximum From Array",
        "quesLink": "https://leetcode.com/problems/removing-minimum-and-maximum-from-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "find-all-people-with-secret": {
        "quesName": "Find All People With Secret",
        "quesLink": "https://leetcode.com/problems/find-all-people-with-secret/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph",
            "Sorting"
        ]
    },
    "finding-3-digit-even-numbers": {
        "quesName": "Finding 3-Digit Even Numbers",
        "quesLink": "https://leetcode.com/problems/finding-3-digit-even-numbers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Enumeration"
        ]
    },
    "delete-the-middle-node-of-a-linked-list": {
        "quesName": "Delete the Middle Node of a Linked List",
        "quesLink": "https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Two Pointers"
        ]
    },
    "step-by-step-directions-from-a-binary-tree-node-to-another": {
        "quesName": "Step-By-Step Directions From a Binary Tree Node to Another",
        "quesLink": "https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "valid-arrangement-of-pairs": {
        "quesName": "Valid Arrangement of Pairs",
        "quesLink": "https://leetcode.com/problems/valid-arrangement-of-pairs/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Graph",
            "Eulerian Circuit"
        ]
    },
    "find-subsequence-of-length-k-with-the-largest-sum": {
        "quesName": "Find Subsequence of Length K With the Largest Sum",
        "quesLink": "https://leetcode.com/problems/find-subsequence-of-length-k-with-the-largest-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "find-good-days-to-rob-the-bank": {
        "quesName": "Find Good Days to Rob the Bank",
        "quesLink": "https://leetcode.com/problems/find-good-days-to-rob-the-bank/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ]
    },
    "detonate-the-maximum-bombs": {
        "quesName": "Detonate the Maximum Bombs",
        "quesLink": "https://leetcode.com/problems/detonate-the-maximum-bombs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Geometry"
        ]
    },
    "sequentially-ordinal-rank-tracker": {
        "quesName": "Sequentially Ordinal Rank Tracker",
        "quesLink": "https://leetcode.com/problems/sequentially-ordinal-rank-tracker/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Design",
            "Heap (Priority Queue)",
            "Data Stream",
            "Ordered Set"
        ]
    },
    "rings-and-rods": {
        "quesName": "Rings and Rods",
        "quesLink": "https://leetcode.com/problems/rings-and-rods/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "sum-of-subarray-ranges": {
        "quesName": "Sum of Subarray Ranges",
        "quesLink": "https://leetcode.com/problems/sum-of-subarray-ranges/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "watering-plants-ii": {
        "quesName": "Watering Plants II",
        "quesLink": "https://leetcode.com/problems/watering-plants-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Simulation"
        ]
    },
    "maximum-fruits-harvested-after-at-most-k-steps": {
        "quesName": "Maximum Fruits Harvested After at Most K Steps",
        "quesLink": "https://leetcode.com/problems/maximum-fruits-harvested-after-at-most-k-steps/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "find-first-palindromic-string-in-the-array": {
        "quesName": "Find First Palindromic String in the Array",
        "quesLink": "https://leetcode.com/problems/find-first-palindromic-string-in-the-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "String"
        ]
    },
    "adding-spaces-to-a-string": {
        "quesName": "Adding Spaces to a String",
        "quesLink": "https://leetcode.com/problems/adding-spaces-to-a-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Simulation"
        ]
    },
    "number-of-smooth-descent-periods-of-a-stock": {
        "quesName": "Number of Smooth Descent Periods of a Stock",
        "quesLink": "https://leetcode.com/problems/number-of-smooth-descent-periods-of-a-stock/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming"
        ]
    },
    "minimum-operations-to-make-the-array-k-increasing": {
        "quesName": "Minimum Operations to Make the Array K-Increasing",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-make-the-array-k-increasing/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "maximum-number-of-words-found-in-sentences": {
        "quesName": "Maximum Number of Words Found in Sentences",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-words-found-in-sentences/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "find-all-possible-recipes-from-given-supplies": {
        "quesName": "Find All Possible Recipes from Given Supplies",
        "quesLink": "https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Graph",
            "Topological Sort"
        ]
    },
    "check-if-a-parentheses-string-can-be-valid": {
        "quesName": "Check if a Parentheses String Can Be Valid",
        "quesLink": "https://leetcode.com/problems/check-if-a-parentheses-string-can-be-valid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Greedy"
        ]
    },
    "abbreviating-the-product-of-a-range": {
        "quesName": "Abbreviating the Product of a Range",
        "quesLink": "https://leetcode.com/problems/abbreviating-the-product-of-a-range/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "a-number-after-a-double-reversal": {
        "quesName": "A Number After a Double Reversal",
        "quesLink": "https://leetcode.com/problems/a-number-after-a-double-reversal/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "execution-of-all-suffix-instructions-staying-in-a-grid": {
        "quesName": "Execution of All Suffix Instructions Staying in a Grid",
        "quesLink": "https://leetcode.com/problems/execution-of-all-suffix-instructions-staying-in-a-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Simulation"
        ]
    },
    "intervals-between-identical-elements": {
        "quesName": "Intervals Between Identical Elements",
        "quesLink": "https://leetcode.com/problems/intervals-between-identical-elements/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ]
    },
    "recover-the-original-array": {
        "quesName": "Recover the Original Array",
        "quesLink": "https://leetcode.com/problems/recover-the-original-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Enumeration"
        ]
    },
    "check-if-all-as-appears-before-all-bs": {
        "quesName": "Check if All A's Appears Before All B's",
        "quesLink": "https://leetcode.com/problems/check-if-all-as-appears-before-all-bs/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "number-of-laser-beams-in-a-bank": {
        "quesName": "Number of Laser Beams in a Bank",
        "quesLink": "https://leetcode.com/problems/number-of-laser-beams-in-a-bank/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "String",
            "Matrix"
        ]
    },
    "destroying-asteroids": {
        "quesName": "Destroying Asteroids",
        "quesLink": "https://leetcode.com/problems/destroying-asteroids/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "maximum-employees-to-be-invited-to-a-meeting": {
        "quesName": "Maximum Employees to Be Invited to a Meeting",
        "quesLink": "https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Graph",
            "Topological Sort"
        ]
    },
    "capitalize-the-title": {
        "quesName": "Capitalize the Title",
        "quesLink": "https://leetcode.com/problems/capitalize-the-title/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "maximum-twin-sum-of-a-linked-list": {
        "quesName": "Maximum Twin Sum of a Linked List",
        "quesLink": "https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Two Pointers",
            "Stack"
        ]
    },
    "longest-palindrome-by-concatenating-two-letter-words": {
        "quesName": "Longest Palindrome by Concatenating Two Letter Words",
        "quesLink": "https://leetcode.com/problems/longest-palindrome-by-concatenating-two-letter-words/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Greedy",
            "Counting"
        ]
    },
    "stamping-the-grid": {
        "quesName": "Stamping the Grid",
        "quesLink": "https://leetcode.com/problems/stamping-the-grid/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Matrix",
            "Prefix Sum"
        ]
    },
    "check-if-every-row-and-column-contains-all-numbers": {
        "quesName": "Check if Every Row and Column Contains All Numbers",
        "quesLink": "https://leetcode.com/problems/check-if-every-row-and-column-contains-all-numbers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix"
        ]
    },
    "minimum-swaps-to-group-all-1s-together-ii": {
        "quesName": "Minimum Swaps to Group All 1's Together II",
        "quesLink": "https://leetcode.com/problems/minimum-swaps-to-group-all-1s-together-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sliding Window"
        ]
    },
    "count-words-obtained-after-adding-a-letter": {
        "quesName": "Count Words Obtained After Adding a Letter",
        "quesLink": "https://leetcode.com/problems/count-words-obtained-after-adding-a-letter/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Sorting"
        ]
    },
    "earliest-possible-day-of-full-bloom": {
        "quesName": "Earliest Possible Day of Full Bloom",
        "quesLink": "https://leetcode.com/problems/earliest-possible-day-of-full-bloom/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "divide-a-string-into-groups-of-size-k": {
        "quesName": "Divide a String Into Groups of Size k",
        "quesLink": "https://leetcode.com/problems/divide-a-string-into-groups-of-size-k/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Simulation"
        ]
    },
    "minimum-moves-to-reach-target-score": {
        "quesName": "Minimum Moves to Reach Target Score",
        "quesLink": "https://leetcode.com/problems/minimum-moves-to-reach-target-score/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "solving-questions-with-brainpower": {
        "quesName": "Solving Questions With Brainpower",
        "quesLink": "https://leetcode.com/problems/solving-questions-with-brainpower/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "maximum-running-time-of-n-computers": {
        "quesName": "Maximum Running Time of N Computers",
        "quesLink": "https://leetcode.com/problems/maximum-running-time-of-n-computers/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting"
        ]
    },
    "minimum-cost-of-buying-candies-with-discount": {
        "quesName": "Minimum Cost of Buying Candies With Discount",
        "quesLink": "https://leetcode.com/problems/minimum-cost-of-buying-candies-with-discount/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "count-the-hidden-sequences": {
        "quesName": "Count the Hidden Sequences",
        "quesLink": "https://leetcode.com/problems/count-the-hidden-sequences/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "k-highest-ranked-items-within-a-price-range": {
        "quesName": "K Highest Ranked Items Within a Price Range",
        "quesLink": "https://leetcode.com/problems/k-highest-ranked-items-within-a-price-range/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix"
        ]
    },
    "number-of-ways-to-divide-a-long-corridor": {
        "quesName": "Number of Ways to Divide a Long Corridor",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-divide-a-long-corridor/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming"
        ]
    },
    "count-elements-with-strictly-smaller-and-greater-elements": {
        "quesName": "Count Elements With Strictly Smaller and Greater Elements ",
        "quesLink": "https://leetcode.com/problems/count-elements-with-strictly-smaller-and-greater-elements/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "rearrange-array-elements-by-sign": {
        "quesName": "Rearrange Array Elements by Sign",
        "quesLink": "https://leetcode.com/problems/rearrange-array-elements-by-sign/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Simulation"
        ]
    },
    "find-all-lonely-numbers-in-the-array": {
        "quesName": "Find All Lonely Numbers in the Array",
        "quesLink": "https://leetcode.com/problems/find-all-lonely-numbers-in-the-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "maximum-good-people-based-on-statements": {
        "quesName": "Maximum Good People Based on Statements",
        "quesLink": "https://leetcode.com/problems/maximum-good-people-based-on-statements/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Enumeration"
        ]
    },
    "keep-multiplying-found-values-by-two": {
        "quesName": "Keep Multiplying Found Values by Two",
        "quesLink": "https://leetcode.com/problems/keep-multiplying-found-values-by-two/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Simulation"
        ]
    },
    "all-divisions-with-the-highest-score-of-a-binary-array": {
        "quesName": "All Divisions With the Highest Score of a Binary Array",
        "quesLink": "https://leetcode.com/problems/all-divisions-with-the-highest-score-of-a-binary-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "find-substring-with-given-hash-value": {
        "quesName": "Find Substring With Given Hash Value",
        "quesLink": "https://leetcode.com/problems/find-substring-with-given-hash-value/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Sliding Window",
            "Rolling Hash",
            "Hash Function"
        ]
    },
    "groups-of-strings": {
        "quesName": "Groups of Strings",
        "quesLink": "https://leetcode.com/problems/groups-of-strings/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Bit Manipulation",
            "Union Find"
        ]
    },
    "minimum-sum-of-four-digit-number-after-splitting-digits": {
        "quesName": "Minimum Sum of Four Digit Number After Splitting Digits",
        "quesLink": "https://leetcode.com/problems/minimum-sum-of-four-digit-number-after-splitting-digits/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy",
            "Sorting"
        ]
    },
    "partition-array-according-to-given-pivot": {
        "quesName": "Partition Array According to Given Pivot",
        "quesLink": "https://leetcode.com/problems/partition-array-according-to-given-pivot/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Simulation"
        ]
    },
    "minimum-cost-to-set-cooking-time": {
        "quesName": "Minimum Cost to Set Cooking Time",
        "quesLink": "https://leetcode.com/problems/minimum-cost-to-set-cooking-time/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Enumeration"
        ]
    },
    "minimum-difference-in-sums-after-removal-of-elements": {
        "quesName": "Minimum Difference in Sums After Removal of Elements",
        "quesLink": "https://leetcode.com/problems/minimum-difference-in-sums-after-removal-of-elements/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Heap (Priority Queue)"
        ]
    },
    "sort-even-and-odd-indices-independently": {
        "quesName": "Sort Even and Odd Indices Independently",
        "quesLink": "https://leetcode.com/problems/sort-even-and-odd-indices-independently/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "smallest-value-of-the-rearranged-number": {
        "quesName": "Smallest Value of the Rearranged Number",
        "quesLink": "https://leetcode.com/problems/smallest-value-of-the-rearranged-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Sorting"
        ]
    },
    "design-bitset": {
        "quesName": "Design Bitset",
        "quesLink": "https://leetcode.com/problems/design-bitset/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Design"
        ]
    },
    "minimum-time-to-remove-all-cars-containing-illegal-goods": {
        "quesName": "Minimum Time to Remove All Cars Containing Illegal Goods",
        "quesLink": "https://leetcode.com/problems/minimum-time-to-remove-all-cars-containing-illegal-goods/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "count-operations-to-obtain-zero": {
        "quesName": "Count Operations to Obtain Zero",
        "quesLink": "https://leetcode.com/problems/count-operations-to-obtain-zero/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Simulation"
        ]
    },
    "minimum-operations-to-make-the-array-alternating": {
        "quesName": "Minimum Operations to Make the Array Alternating",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-make-the-array-alternating/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ]
    },
    "removing-minimum-number-of-magic-beans": {
        "quesName": "Removing Minimum Number of Magic Beans",
        "quesLink": "https://leetcode.com/problems/removing-minimum-number-of-magic-beans/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Prefix Sum"
        ]
    },
    "maximum-and-sum-of-array": {
        "quesName": "Maximum AND Sum of Array",
        "quesLink": "https://leetcode.com/problems/maximum-and-sum-of-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "count-equal-and-divisible-pairs-in-an-array": {
        "quesName": "Count Equal and Divisible Pairs in an Array",
        "quesLink": "https://leetcode.com/problems/count-equal-and-divisible-pairs-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "find-three-consecutive-integers-that-sum-to-a-given-number": {
        "quesName": "Find Three Consecutive Integers That Sum to a Given Number",
        "quesLink": "https://leetcode.com/problems/find-three-consecutive-integers-that-sum-to-a-given-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Simulation"
        ]
    },
    "maximum-split-of-positive-even-integers": {
        "quesName": "Maximum Split of Positive Even Integers",
        "quesLink": "https://leetcode.com/problems/maximum-split-of-positive-even-integers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Backtracking",
            "Greedy"
        ]
    },
    "count-good-triplets-in-an-array": {
        "quesName": "Count Good Triplets in an Array",
        "quesLink": "https://leetcode.com/problems/count-good-triplets-in-an-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Merge Sort",
            "Ordered Set"
        ]
    },
    "count-integers-with-even-digit-sum": {
        "quesName": "Count Integers With Even Digit Sum",
        "quesLink": "https://leetcode.com/problems/count-integers-with-even-digit-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Simulation"
        ]
    },
    "merge-nodes-in-between-zeros": {
        "quesName": "Merge Nodes in Between Zeros",
        "quesLink": "https://leetcode.com/problems/merge-nodes-in-between-zeros/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Simulation"
        ]
    },
    "construct-string-with-repeat-limit": {
        "quesName": "Construct String With Repeat Limit",
        "quesLink": "https://leetcode.com/problems/construct-string-with-repeat-limit/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy",
            "Heap (Priority Queue)",
            "Counting"
        ]
    },
    "count-array-pairs-divisible-by-k": {
        "quesName": "Count Array Pairs Divisible by K",
        "quesLink": "https://leetcode.com/problems/count-array-pairs-divisible-by-k/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ]
    },
    "counting-words-with-a-given-prefix": {
        "quesName": "Counting Words With a Given Prefix",
        "quesLink": "https://leetcode.com/problems/counting-words-with-a-given-prefix/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "minimum-number-of-steps-to-make-two-strings-anagram-ii": {
        "quesName": "Minimum Number of Steps to Make Two Strings Anagram II",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "minimum-time-to-complete-trips": {
        "quesName": "Minimum Time to Complete Trips",
        "quesLink": "https://leetcode.com/problems/minimum-time-to-complete-trips/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "minimum-time-to-finish-the-race": {
        "quesName": "Minimum Time to Finish the Race",
        "quesLink": "https://leetcode.com/problems/minimum-time-to-finish-the-race/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "most-frequent-number-following-key-in-an-array": {
        "quesName": "Most Frequent Number Following Key In an Array",
        "quesLink": "https://leetcode.com/problems/most-frequent-number-following-key-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "sort-the-jumbled-numbers": {
        "quesName": "Sort the Jumbled Numbers",
        "quesLink": "https://leetcode.com/problems/sort-the-jumbled-numbers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "all-ancestors-of-a-node-in-a-directed-acyclic-graph": {
        "quesName": "All Ancestors of a Node in a Directed Acyclic Graph",
        "quesLink": "https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ]
    },
    "minimum-number-of-moves-to-make-palindrome": {
        "quesName": "Minimum Number of Moves to Make Palindrome",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-moves-to-make-palindrome/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "Greedy",
            "Binary Indexed Tree"
        ]
    },
    "cells-in-a-range-on-an-excel-sheet": {
        "quesName": "Cells in a Range on an Excel Sheet",
        "quesLink": "https://leetcode.com/problems/cells-in-a-range-on-an-excel-sheet/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "append-k-integers-with-minimal-sum": {
        "quesName": "Append K Integers With Minimal Sum",
        "quesLink": "https://leetcode.com/problems/append-k-integers-with-minimal-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Greedy",
            "Sorting"
        ]
    },
    "create-binary-tree-from-descriptions": {
        "quesName": "Create Binary Tree From Descriptions",
        "quesLink": "https://leetcode.com/problems/create-binary-tree-from-descriptions/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "replace-non-coprime-numbers-in-array": {
        "quesName": "Replace Non-Coprime Numbers in Array",
        "quesLink": "https://leetcode.com/problems/replace-non-coprime-numbers-in-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Stack",
            "Number Theory"
        ]
    },
    "find-all-k-distant-indices-in-an-array": {
        "quesName": "Find All K-Distant Indices in an Array",
        "quesLink": "https://leetcode.com/problems/find-all-k-distant-indices-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "count-artifacts-that-can-be-extracted": {
        "quesName": "Count Artifacts That Can Be Extracted",
        "quesLink": "https://leetcode.com/problems/count-artifacts-that-can-be-extracted/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Simulation"
        ]
    },
    "maximize-the-topmost-element-after-k-moves": {
        "quesName": "Maximize the Topmost Element After K Moves",
        "quesLink": "https://leetcode.com/problems/maximize-the-topmost-element-after-k-moves/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "minimum-weighted-subgraph-with-the-required-paths": {
        "quesName": "Minimum Weighted Subgraph With the Required Paths",
        "quesLink": "https://leetcode.com/problems/minimum-weighted-subgraph-with-the-required-paths/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Graph",
            "Shortest Path"
        ]
    },
    "divide-array-into-equal-pairs": {
        "quesName": "Divide Array Into Equal Pairs",
        "quesLink": "https://leetcode.com/problems/divide-array-into-equal-pairs/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Counting"
        ]
    },
    "maximize-number-of-subsequences-in-a-string": {
        "quesName": "Maximize Number of Subsequences in a String",
        "quesLink": "https://leetcode.com/problems/maximize-number-of-subsequences-in-a-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy",
            "Prefix Sum"
        ]
    },
    "minimum-operations-to-halve-array-sum": {
        "quesName": "Minimum Operations to Halve Array Sum",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-halve-array-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "minimum-white-tiles-after-covering-with-carpets": {
        "quesName": "Minimum White Tiles After Covering With Carpets",
        "quesLink": "https://leetcode.com/problems/minimum-white-tiles-after-covering-with-carpets/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Prefix Sum"
        ]
    },
    "count-hills-and-valleys-in-an-array": {
        "quesName": "Count Hills and Valleys in an Array",
        "quesLink": "https://leetcode.com/problems/count-hills-and-valleys-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "count-collisions-on-a-road": {
        "quesName": "Count Collisions on a Road",
        "quesLink": "https://leetcode.com/problems/count-collisions-on-a-road/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack"
        ]
    },
    "maximum-points-in-an-archery-competition": {
        "quesName": "Maximum Points in an Archery Competition",
        "quesLink": "https://leetcode.com/problems/maximum-points-in-an-archery-competition/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Enumeration"
        ]
    },
    "longest-substring-of-one-repeating-character": {
        "quesName": "Longest Substring of One Repeating Character",
        "quesLink": "https://leetcode.com/problems/longest-substring-of-one-repeating-character/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Segment Tree",
            "Ordered Set"
        ]
    },
    "find-the-difference-of-two-arrays": {
        "quesName": "Find the Difference of Two Arrays",
        "quesLink": "https://leetcode.com/problems/find-the-difference-of-two-arrays/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "minimum-deletions-to-make-array-beautiful": {
        "quesName": "Minimum Deletions to Make Array Beautiful",
        "quesLink": "https://leetcode.com/problems/minimum-deletions-to-make-array-beautiful/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Greedy"
        ]
    },
    "find-palindrome-with-fixed-length": {
        "quesName": "Find Palindrome With Fixed Length",
        "quesLink": "https://leetcode.com/problems/find-palindrome-with-fixed-length/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "maximum-value-of-k-coins-from-piles": {
        "quesName": "Maximum Value of K Coins From Piles",
        "quesLink": "https://leetcode.com/problems/maximum-value-of-k-coins-from-piles/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ]
    },
    "minimum-bit-flips-to-convert-number": {
        "quesName": "Minimum Bit Flips to Convert Number",
        "quesLink": "https://leetcode.com/problems/minimum-bit-flips-to-convert-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Bit Manipulation"
        ]
    },
    "find-triangular-sum-of-an-array": {
        "quesName": "Find Triangular Sum of an Array",
        "quesLink": "https://leetcode.com/problems/find-triangular-sum-of-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Simulation",
            "Combinatorics"
        ]
    },
    "number-of-ways-to-select-buildings": {
        "quesName": "Number of Ways to Select Buildings",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-select-buildings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Prefix Sum"
        ]
    },
    "sum-of-scores-of-built-strings": {
        "quesName": "Sum of Scores of Built Strings",
        "quesLink": "https://leetcode.com/problems/sum-of-scores-of-built-strings/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Binary Search",
            "Rolling Hash",
            "Suffix Array",
            "String Matching",
            "Hash Function"
        ]
    },
    "minimum-number-of-operations-to-convert-time": {
        "quesName": "Minimum Number of Operations to Convert Time",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-operations-to-convert-time/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "find-players-with-zero-or-one-losses": {
        "quesName": "Find Players With Zero or One Losses",
        "quesLink": "https://leetcode.com/problems/find-players-with-zero-or-one-losses/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting"
        ]
    },
    "maximum-candies-allocated-to-k-children": {
        "quesName": "Maximum Candies Allocated to K Children",
        "quesLink": "https://leetcode.com/problems/maximum-candies-allocated-to-k-children/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "encrypt-and-decrypt-strings": {
        "quesName": "Encrypt and Decrypt Strings",
        "quesLink": "https://leetcode.com/problems/encrypt-and-decrypt-strings/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Design",
            "Trie"
        ]
    },
    "largest-number-after-digit-swaps-by-parity": {
        "quesName": "Largest Number After Digit Swaps by Parity",
        "quesLink": "https://leetcode.com/problems/largest-number-after-digit-swaps-by-parity/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "minimize-result-by-adding-parentheses-to-expression": {
        "quesName": "Minimize Result by Adding Parentheses to Expression",
        "quesLink": "https://leetcode.com/problems/minimize-result-by-adding-parentheses-to-expression/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Enumeration"
        ]
    },
    "maximum-product-after-k-increments": {
        "quesName": "Maximum Product After K Increments",
        "quesLink": "https://leetcode.com/problems/maximum-product-after-k-increments/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "maximum-total-beauty-of-the-gardens": {
        "quesName": "Maximum Total Beauty of the Gardens",
        "quesLink": "https://leetcode.com/problems/maximum-total-beauty-of-the-gardens/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Sorting"
        ]
    },
    "add-two-integers": {
        "quesName": "Add Two Integers",
        "quesLink": "https://leetcode.com/problems/add-two-integers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "root-equals-sum-of-children": {
        "quesName": "Root Equals Sum of Children",
        "quesLink": "https://leetcode.com/problems/root-equals-sum-of-children/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Binary Tree"
        ]
    },
    "find-closest-number-to-zero": {
        "quesName": "Find Closest Number to Zero",
        "quesLink": "https://leetcode.com/problems/find-closest-number-to-zero/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "number-of-ways-to-buy-pens-and-pencils": {
        "quesName": "Number of Ways to Buy Pens and Pencils",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-buy-pens-and-pencils/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Enumeration"
        ]
    },
    "design-an-atm-machine": {
        "quesName": "Design an ATM Machine",
        "quesLink": "https://leetcode.com/problems/design-an-atm-machine/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Design"
        ]
    },
    "maximum-score-of-a-node-sequence": {
        "quesName": "Maximum Score of a Node Sequence",
        "quesLink": "https://leetcode.com/problems/maximum-score-of-a-node-sequence/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Graph",
            "Sorting",
            "Enumeration"
        ]
    },
    "calculate-digit-sum-of-a-string": {
        "quesName": "Calculate Digit Sum of a String",
        "quesLink": "https://leetcode.com/problems/calculate-digit-sum-of-a-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Simulation"
        ]
    },
    "minimum-rounds-to-complete-all-tasks": {
        "quesName": "Minimum Rounds to Complete All Tasks",
        "quesLink": "https://leetcode.com/problems/minimum-rounds-to-complete-all-tasks/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ]
    },
    "maximum-trailing-zeros-in-a-cornered-path": {
        "quesName": "Maximum Trailing Zeros in a Cornered Path",
        "quesLink": "https://leetcode.com/problems/maximum-trailing-zeros-in-a-cornered-path/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ]
    },
    "longest-path-with-different-adjacent-characters": {
        "quesName": "Longest Path With Different Adjacent Characters",
        "quesLink": "https://leetcode.com/problems/longest-path-with-different-adjacent-characters/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Tree",
            "Depth-First Search",
            "Graph",
            "Topological Sort"
        ]
    },
    "intersection-of-multiple-arrays": {
        "quesName": "Intersection of Multiple Arrays",
        "quesLink": "https://leetcode.com/problems/intersection-of-multiple-arrays/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "count-lattice-points-inside-a-circle": {
        "quesName": "Count Lattice Points Inside a Circle",
        "quesLink": "https://leetcode.com/problems/count-lattice-points-inside-a-circle/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Geometry",
            "Enumeration"
        ]
    },
    "count-number-of-rectangles-containing-each-point": {
        "quesName": "Count Number of Rectangles Containing Each Point",
        "quesLink": "https://leetcode.com/problems/count-number-of-rectangles-containing-each-point/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Binary Indexed Tree",
            "Sorting"
        ]
    },
    "number-of-flowers-in-full-bloom": {
        "quesName": "Number of Flowers in Full Bloom",
        "quesLink": "https://leetcode.com/problems/number-of-flowers-in-full-bloom/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Sorting",
            "Prefix Sum",
            "Ordered Set"
        ]
    },
    "count-prefixes-of-a-given-string": {
        "quesName": "Count Prefixes of a Given String",
        "quesLink": "https://leetcode.com/problems/count-prefixes-of-a-given-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "minimum-average-difference": {
        "quesName": "Minimum Average Difference",
        "quesLink": "https://leetcode.com/problems/minimum-average-difference/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "count-unguarded-cells-in-the-grid": {
        "quesName": "Count Unguarded Cells in the Grid",
        "quesLink": "https://leetcode.com/problems/count-unguarded-cells-in-the-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "escape-the-spreading-fire": {
        "quesName": "Escape the Spreading Fire",
        "quesLink": "https://leetcode.com/problems/escape-the-spreading-fire/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "remove-digit-from-number-to-maximize-result": {
        "quesName": "Remove Digit From Number to Maximize Result",
        "quesLink": "https://leetcode.com/problems/remove-digit-from-number-to-maximize-result/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy",
            "Enumeration"
        ]
    },
    "minimum-consecutive-cards-to-pick-up": {
        "quesName": "Minimum Consecutive Cards to Pick Up",
        "quesLink": "https://leetcode.com/problems/minimum-consecutive-cards-to-pick-up/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ]
    },
    "k-divisible-elements-subarrays": {
        "quesName": "K Divisible Elements Subarrays",
        "quesLink": "https://leetcode.com/problems/k-divisible-elements-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Trie",
            "Rolling Hash",
            "Hash Function",
            "Enumeration"
        ]
    },
    "total-appeal-of-a-string": {
        "quesName": "Total Appeal of A String",
        "quesLink": "https://leetcode.com/problems/total-appeal-of-a-string/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Dynamic Programming"
        ]
    },
    "largest-3-same-digit-number-in-string": {
        "quesName": "Largest 3-Same-Digit Number in String",
        "quesLink": "https://leetcode.com/problems/largest-3-same-digit-number-in-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "count-nodes-equal-to-average-of-subtree": {
        "quesName": "Count Nodes Equal to Average of Subtree",
        "quesLink": "https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "count-number-of-texts": {
        "quesName": "Count Number of Texts",
        "quesLink": "https://leetcode.com/problems/count-number-of-texts/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "String",
            "Dynamic Programming"
        ]
    },
    "check-if-there-is-a-valid-parentheses-string-path": {
        "quesName": " Check if There Is a Valid Parentheses String Path",
        "quesLink": "https://leetcode.com/problems/check-if-there-is-a-valid-parentheses-string-path/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "find-the-k-beauty-of-a-number": {
        "quesName": "Find the K-Beauty of a Number",
        "quesLink": "https://leetcode.com/problems/find-the-k-beauty-of-a-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Sliding Window"
        ]
    },
    "number-of-ways-to-split-array": {
        "quesName": "Number of Ways to Split Array",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-split-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "maximum-white-tiles-covered-by-a-carpet": {
        "quesName": "Maximum White Tiles Covered by a Carpet",
        "quesLink": "https://leetcode.com/problems/maximum-white-tiles-covered-by-a-carpet/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ]
    },
    "substring-with-largest-variance": {
        "quesName": "Substring With Largest Variance",
        "quesLink": "https://leetcode.com/problems/substring-with-largest-variance/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "find-resultant-array-after-removing-anagrams": {
        "quesName": "Find Resultant Array After Removing Anagrams",
        "quesLink": "https://leetcode.com/problems/find-resultant-array-after-removing-anagrams/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ]
    },
    "maximum-consecutive-floors-without-special-floors": {
        "quesName": "Maximum Consecutive Floors Without Special Floors",
        "quesLink": "https://leetcode.com/problems/maximum-consecutive-floors-without-special-floors/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "largest-combination-with-bitwise-and-greater-than-zero": {
        "quesName": "Largest Combination With Bitwise AND Greater Than Zero",
        "quesLink": "https://leetcode.com/problems/largest-combination-with-bitwise-and-greater-than-zero/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Counting"
        ]
    },
    "count-integers-in-intervals": {
        "quesName": "Count Integers in Intervals",
        "quesLink": "https://leetcode.com/problems/count-integers-in-intervals/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Design",
            "Segment Tree",
            "Ordered Set"
        ]
    },
    "percentage-of-letter-in-string": {
        "quesName": "Percentage of Letter in String",
        "quesLink": "https://leetcode.com/problems/percentage-of-letter-in-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "maximum-bags-with-full-capacity-of-rocks": {
        "quesName": "Maximum Bags With Full Capacity of Rocks",
        "quesLink": "https://leetcode.com/problems/maximum-bags-with-full-capacity-of-rocks/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "minimum-lines-to-represent-a-line-chart": {
        "quesName": "Minimum Lines to Represent a Line Chart",
        "quesLink": "https://leetcode.com/problems/minimum-lines-to-represent-a-line-chart/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Geometry",
            "Sorting",
            "Number Theory"
        ]
    },
    "sum-of-total-strength-of-wizards": {
        "quesName": "Sum of Total Strength of Wizards",
        "quesLink": "https://leetcode.com/problems/sum-of-total-strength-of-wizards/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack",
            "Prefix Sum"
        ]
    },
    "check-if-number-has-equal-digit-count-and-digit-value": {
        "quesName": "Check if Number Has Equal Digit Count and Digit Value",
        "quesLink": "https://leetcode.com/problems/check-if-number-has-equal-digit-count-and-digit-value/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "sender-with-largest-word-count": {
        "quesName": "Sender With Largest Word Count",
        "quesLink": "https://leetcode.com/problems/sender-with-largest-word-count/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "maximum-total-importance-of-roads": {
        "quesName": "Maximum Total Importance of Roads",
        "quesLink": "https://leetcode.com/problems/maximum-total-importance-of-roads/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Greedy",
            "Graph",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "booking-concert-tickets-in-groups": {
        "quesName": "Booking Concert Tickets in Groups",
        "quesLink": "https://leetcode.com/problems/booking-concert-tickets-in-groups/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Binary Search",
            "Design",
            "Binary Indexed Tree",
            "Segment Tree"
        ]
    },
    "rearrange-characters-to-make-target-string": {
        "quesName": "Rearrange Characters to Make Target String",
        "quesLink": "https://leetcode.com/problems/rearrange-characters-to-make-target-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "apply-discount-to-prices": {
        "quesName": "Apply Discount to Prices",
        "quesLink": "https://leetcode.com/problems/apply-discount-to-prices/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "steps-to-make-array-non-decreasing": {
        "quesName": "Steps to Make Array Non-decreasing",
        "quesLink": "https://leetcode.com/problems/steps-to-make-array-non-decreasing/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Linked List",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "minimum-obstacle-removal-to-reach-corner": {
        "quesName": "Minimum Obstacle Removal to Reach Corner",
        "quesLink": "https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ]
    },
    "min-max-game": {
        "quesName": "Min Max Game",
        "quesLink": "https://leetcode.com/problems/min-max-game/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "partition-array-such-that-maximum-difference-is-k": {
        "quesName": "Partition Array Such That Maximum Difference Is K",
        "quesLink": "https://leetcode.com/problems/partition-array-such-that-maximum-difference-is-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "replace-elements-in-an-array": {
        "quesName": "Replace Elements in an Array",
        "quesLink": "https://leetcode.com/problems/replace-elements-in-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Simulation"
        ]
    },
    "design-a-text-editor": {
        "quesName": "Design a Text Editor",
        "quesLink": "https://leetcode.com/problems/design-a-text-editor/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "String",
            "Stack",
            "Design",
            "Simulation",
            "Doubly-Linked List"
        ]
    },
    "strong-password-checker-ii": {
        "quesName": "Strong Password Checker II",
        "quesLink": "https://leetcode.com/problems/strong-password-checker-ii/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "successful-pairs-of-spells-and-potions": {
        "quesName": "Successful Pairs of Spells and Potions",
        "quesLink": "https://leetcode.com/problems/successful-pairs-of-spells-and-potions/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "match-substring-after-replacement": {
        "quesName": "Match Substring After Replacement",
        "quesLink": "https://leetcode.com/problems/match-substring-after-replacement/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "String Matching"
        ]
    },
    "count-subarrays-with-score-less-than-k": {
        "quesName": "Count Subarrays With Score Less Than K",
        "quesLink": "https://leetcode.com/problems/count-subarrays-with-score-less-than-k/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "calculate-amount-paid-in-taxes": {
        "quesName": "Calculate Amount Paid in Taxes",
        "quesLink": "https://leetcode.com/problems/calculate-amount-paid-in-taxes/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "minimum-path-cost-in-a-grid": {
        "quesName": "Minimum Path Cost in a Grid",
        "quesLink": "https://leetcode.com/problems/minimum-path-cost-in-a-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "fair-distribution-of-cookies": {
        "quesName": "Fair Distribution of Cookies",
        "quesLink": "https://leetcode.com/problems/fair-distribution-of-cookies/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "naming-a-company": {
        "quesName": "Naming a Company",
        "quesLink": "https://leetcode.com/problems/naming-a-company/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Enumeration"
        ]
    },
    "greatest-english-letter-in-upper-and-lower-case": {
        "quesName": "Greatest English Letter in Upper and Lower Case",
        "quesLink": "https://leetcode.com/problems/greatest-english-letter-in-upper-and-lower-case/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Enumeration"
        ]
    },
    "sum-of-numbers-with-units-digit-k": {
        "quesName": "Sum of Numbers With Units Digit K",
        "quesLink": "https://leetcode.com/problems/sum-of-numbers-with-units-digit-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Greedy",
            "Enumeration"
        ]
    },
    "longest-binary-subsequence-less-than-or-equal-to-k": {
        "quesName": "Longest Binary Subsequence Less Than or Equal to K",
        "quesLink": "https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy",
            "Memoization"
        ]
    },
    "selling-pieces-of-wood": {
        "quesName": "Selling Pieces of Wood",
        "quesLink": "https://leetcode.com/problems/selling-pieces-of-wood/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Memoization"
        ]
    },
    "count-asterisks": {
        "quesName": "Count Asterisks",
        "quesLink": "https://leetcode.com/problems/count-asterisks/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "count-unreachable-pairs-of-nodes-in-an-undirected-graph": {
        "quesName": "Count Unreachable Pairs of Nodes in an Undirected Graph",
        "quesLink": "https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "maximum-xor-after-operations": {
        "quesName": "Maximum XOR After Operations ",
        "quesLink": "https://leetcode.com/problems/maximum-xor-after-operations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation"
        ]
    },
    "number-of-distinct-roll-sequences": {
        "quesName": "Number of Distinct Roll Sequences",
        "quesLink": "https://leetcode.com/problems/number-of-distinct-roll-sequences/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Memoization"
        ]
    },
    "check-if-matrix-is-x-matrix": {
        "quesName": "Check if Matrix Is X-Matrix",
        "quesLink": "https://leetcode.com/problems/check-if-matrix-is-x-matrix/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "count-number-of-ways-to-place-houses": {
        "quesName": "Count Number of Ways to Place Houses",
        "quesLink": "https://leetcode.com/problems/count-number-of-ways-to-place-houses/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "maximum-score-of-spliced-array": {
        "quesName": "Maximum Score Of Spliced Array",
        "quesLink": "https://leetcode.com/problems/maximum-score-of-spliced-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "minimum-score-after-removals-on-a-tree": {
        "quesName": "Minimum Score After Removals on a Tree",
        "quesLink": "https://leetcode.com/problems/minimum-score-after-removals-on-a-tree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Tree",
            "Depth-First Search"
        ]
    },
    "decode-the-message": {
        "quesName": "Decode the Message",
        "quesLink": "https://leetcode.com/problems/decode-the-message/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "spiral-matrix-iv": {
        "quesName": "Spiral Matrix IV",
        "quesLink": "https://leetcode.com/problems/spiral-matrix-iv/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Linked List",
            "Matrix",
            "Simulation"
        ]
    },
    "number-of-people-aware-of-a-secret": {
        "quesName": "Number of People Aware of a Secret",
        "quesLink": "https://leetcode.com/problems/number-of-people-aware-of-a-secret/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Queue",
            "Simulation"
        ]
    },
    "number-of-increasing-paths-in-a-grid": {
        "quesName": "Number of Increasing Paths in a Grid",
        "quesLink": "https://leetcode.com/problems/number-of-increasing-paths-in-a-grid/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort",
            "Memoization",
            "Matrix"
        ]
    },
    "evaluate-boolean-binary-tree": {
        "quesName": "Evaluate Boolean Binary Tree",
        "quesLink": "https://leetcode.com/problems/evaluate-boolean-binary-tree/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "the-latest-time-to-catch-a-bus": {
        "quesName": "The Latest Time to Catch a Bus",
        "quesLink": "https://leetcode.com/problems/the-latest-time-to-catch-a-bus/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "minimum-sum-of-squared-difference": {
        "quesName": "Minimum Sum of Squared Difference",
        "quesLink": "https://leetcode.com/problems/minimum-sum-of-squared-difference/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "subarray-with-elements-greater-than-varying-threshold": {
        "quesName": "Subarray With Elements Greater Than Varying Threshold",
        "quesLink": "https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Union Find",
            "Monotonic Stack"
        ]
    },
    "minimum-amount-of-time-to-fill-cups": {
        "quesName": "Minimum Amount of Time to Fill Cups",
        "quesLink": "https://leetcode.com/problems/minimum-amount-of-time-to-fill-cups/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "smallest-number-in-infinite-set": {
        "quesName": "Smallest Number in Infinite Set",
        "quesLink": "https://leetcode.com/problems/smallest-number-in-infinite-set/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Design",
            "Heap (Priority Queue)"
        ]
    },
    "move-pieces-to-obtain-a-string": {
        "quesName": "Move Pieces to Obtain a String",
        "quesLink": "https://leetcode.com/problems/move-pieces-to-obtain-a-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "count-the-number-of-ideal-arrays": {
        "quesName": "Count the Number of Ideal Arrays",
        "quesLink": "https://leetcode.com/problems/count-the-number-of-ideal-arrays/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics",
            "Number Theory"
        ]
    },
    "maximum-number-of-pairs-in-array": {
        "quesName": "Maximum Number of Pairs in Array",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-pairs-in-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "max-sum-of-a-pair-with-equal-sum-of-digits": {
        "quesName": "Max Sum of a Pair With Equal Sum of Digits",
        "quesLink": "https://leetcode.com/problems/max-sum-of-a-pair-with-equal-sum-of-digits/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "query-kth-smallest-trimmed-number": {
        "quesName": "Query Kth Smallest Trimmed Number",
        "quesLink": "https://leetcode.com/problems/query-kth-smallest-trimmed-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Radix Sort",
            "Quickselect"
        ]
    },
    "minimum-deletions-to-make-array-divisible": {
        "quesName": "Minimum Deletions to Make Array Divisible",
        "quesLink": "https://leetcode.com/problems/minimum-deletions-to-make-array-divisible/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Sorting",
            "Heap (Priority Queue)",
            "Number Theory"
        ]
    },
    "best-poker-hand": {
        "quesName": "Best Poker Hand",
        "quesLink": "https://leetcode.com/problems/best-poker-hand/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "number-of-zero-filled-subarrays": {
        "quesName": "Number of Zero-Filled Subarrays",
        "quesLink": "https://leetcode.com/problems/number-of-zero-filled-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "design-a-number-container-system": {
        "quesName": "Design a Number Container System",
        "quesLink": "https://leetcode.com/problems/design-a-number-container-system/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ]
    },
    "shortest-impossible-sequence-of-rolls": {
        "quesName": "Shortest Impossible Sequence of Rolls",
        "quesLink": "https://leetcode.com/problems/shortest-impossible-sequence-of-rolls/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy"
        ]
    },
    "first-letter-to-appear-twice": {
        "quesName": "First Letter to Appear Twice",
        "quesLink": "https://leetcode.com/problems/first-letter-to-appear-twice/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "equal-row-and-column-pairs": {
        "quesName": "Equal Row and Column Pairs",
        "quesLink": "https://leetcode.com/problems/equal-row-and-column-pairs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix",
            "Simulation"
        ]
    },
    "design-a-food-rating-system": {
        "quesName": "Design a Food Rating System",
        "quesLink": "https://leetcode.com/problems/design-a-food-rating-system/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ]
    },
    "number-of-excellent-pairs": {
        "quesName": "Number of Excellent Pairs",
        "quesLink": "https://leetcode.com/problems/number-of-excellent-pairs/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Bit Manipulation"
        ]
    },
    "number-of-unique-subjects-taught-by-each-teacher": {
        "quesName": "Number of Unique Subjects Taught by Each Teacher",
        "quesLink": "https://leetcode.com/problems/number-of-unique-subjects-taught-by-each-teacher/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Database"
        ]
    },
    "make-array-zero-by-subtracting-equal-amounts": {
        "quesName": "Make Array Zero by Subtracting Equal Amounts",
        "quesLink": "https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Simulation"
        ]
    },
    "maximum-number-of-groups-entering-a-competition": {
        "quesName": "Maximum Number of Groups Entering a Competition",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-groups-entering-a-competition/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy"
        ]
    },
    "find-closest-node-to-given-two-nodes": {
        "quesName": "Find Closest Node to Given Two Nodes",
        "quesLink": "https://leetcode.com/problems/find-closest-node-to-given-two-nodes/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Graph"
        ]
    },
    "longest-cycle-in-a-graph": {
        "quesName": "Longest Cycle in a Graph",
        "quesLink": "https://leetcode.com/problems/longest-cycle-in-a-graph/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Graph",
            "Topological Sort"
        ]
    },
    "merge-similar-items": {
        "quesName": "Merge Similar Items",
        "quesLink": "https://leetcode.com/problems/merge-similar-items/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Ordered Set"
        ]
    },
    "count-number-of-bad-pairs": {
        "quesName": "Count Number of Bad Pairs",
        "quesLink": "https://leetcode.com/problems/count-number-of-bad-pairs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "task-scheduler-ii": {
        "quesName": "Task Scheduler II",
        "quesLink": "https://leetcode.com/problems/task-scheduler-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Simulation"
        ]
    },
    "minimum-replacements-to-sort-the-array": {
        "quesName": "Minimum Replacements to Sort the Array",
        "quesLink": "https://leetcode.com/problems/minimum-replacements-to-sort-the-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Greedy"
        ]
    },
    "number-of-arithmetic-triplets": {
        "quesName": "Number of Arithmetic Triplets",
        "quesLink": "https://leetcode.com/problems/number-of-arithmetic-triplets/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Enumeration"
        ]
    },
    "reachable-nodes-with-restrictions": {
        "quesName": "Reachable Nodes With Restrictions",
        "quesLink": "https://leetcode.com/problems/reachable-nodes-with-restrictions/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "check-if-there-is-a-valid-partition-for-the-array": {
        "quesName": "Check if There is a Valid Partition For The Array",
        "quesLink": "https://leetcode.com/problems/check-if-there-is-a-valid-partition-for-the-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "longest-ideal-subsequence": {
        "quesName": "Longest Ideal Subsequence",
        "quesLink": "https://leetcode.com/problems/longest-ideal-subsequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Dynamic Programming"
        ]
    },
    "largest-local-values-in-a-matrix": {
        "quesName": "Largest Local Values in a Matrix",
        "quesLink": "https://leetcode.com/problems/largest-local-values-in-a-matrix/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "node-with-highest-edge-score": {
        "quesName": "Node With Highest Edge Score",
        "quesLink": "https://leetcode.com/problems/node-with-highest-edge-score/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Graph"
        ]
    },
    "construct-smallest-number-from-di-string": {
        "quesName": "Construct Smallest Number From DI String",
        "quesLink": "https://leetcode.com/problems/construct-smallest-number-from-di-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Backtracking",
            "Stack",
            "Greedy"
        ]
    },
    "count-special-integers": {
        "quesName": "Count Special Integers",
        "quesLink": "https://leetcode.com/problems/count-special-integers/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming"
        ]
    },
    "minimum-recolors-to-get-k-consecutive-black-blocks": {
        "quesName": "Minimum Recolors to Get K Consecutive Black Blocks",
        "quesLink": "https://leetcode.com/problems/minimum-recolors-to-get-k-consecutive-black-blocks/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Sliding Window"
        ]
    },
    "time-needed-to-rearrange-a-binary-string": {
        "quesName": "Time Needed to Rearrange a Binary String",
        "quesLink": "https://leetcode.com/problems/time-needed-to-rearrange-a-binary-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Simulation"
        ]
    },
    "shifting-letters-ii": {
        "quesName": "Shifting Letters II",
        "quesLink": "https://leetcode.com/problems/shifting-letters-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Prefix Sum"
        ]
    },
    "maximum-segment-sum-after-removals": {
        "quesName": "Maximum Segment Sum After Removals",
        "quesLink": "https://leetcode.com/problems/maximum-segment-sum-after-removals/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Union Find",
            "Prefix Sum",
            "Ordered Set"
        ]
    },
    "minimum-hours-of-training-to-win-a-competition": {
        "quesName": "Minimum Hours of Training to Win a Competition",
        "quesLink": "https://leetcode.com/problems/minimum-hours-of-training-to-win-a-competition/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "largest-palindromic-number": {
        "quesName": "Largest Palindromic Number",
        "quesLink": "https://leetcode.com/problems/largest-palindromic-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Greedy"
        ]
    },
    "amount-of-time-for-binary-tree-to-be-infected": {
        "quesName": "Amount of Time for Binary Tree to Be Infected",
        "quesLink": "https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "find-the-k-sum-of-an-array": {
        "quesName": "Find the K-Sum of an Array",
        "quesLink": "https://leetcode.com/problems/find-the-k-sum-of-an-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "longest-subsequence-with-limited-sum": {
        "quesName": "Longest Subsequence With Limited Sum",
        "quesLink": "https://leetcode.com/problems/longest-subsequence-with-limited-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ]
    },
    "removing-stars-from-a-string": {
        "quesName": "Removing Stars From a String",
        "quesLink": "https://leetcode.com/problems/removing-stars-from-a-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Simulation"
        ]
    },
    "minimum-amount-of-time-to-collect-garbage": {
        "quesName": "Minimum Amount of Time to Collect Garbage",
        "quesLink": "https://leetcode.com/problems/minimum-amount-of-time-to-collect-garbage/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Prefix Sum"
        ]
    },
    "build-a-matrix-with-conditions": {
        "quesName": "Build a Matrix With Conditions",
        "quesLink": "https://leetcode.com/problems/build-a-matrix-with-conditions/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Graph",
            "Topological Sort",
            "Matrix"
        ]
    },
    "find-subarrays-with-equal-sum": {
        "quesName": "Find Subarrays With Equal Sum",
        "quesLink": "https://leetcode.com/problems/find-subarrays-with-equal-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "strictly-palindromic-number": {
        "quesName": "Strictly Palindromic Number",
        "quesLink": "https://leetcode.com/problems/strictly-palindromic-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Two Pointers",
            "Brainteaser"
        ]
    },
    "maximum-rows-covered-by-columns": {
        "quesName": "Maximum Rows Covered by Columns",
        "quesLink": "https://leetcode.com/problems/maximum-rows-covered-by-columns/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Matrix",
            "Enumeration"
        ]
    },
    "maximum-number-of-robots-within-budget": {
        "quesName": "Maximum Number of Robots Within Budget",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-robots-within-budget/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Prefix Sum"
        ]
    },
    "check-distances-between-same-letters": {
        "quesName": "Check Distances Between Same Letters",
        "quesLink": "https://leetcode.com/problems/check-distances-between-same-letters/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "number-of-ways-to-reach-a-position-after-exactly-k-steps": {
        "quesName": "Number of Ways to Reach a Position After Exactly k Steps",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ]
    },
    "longest-nice-subarray": {
        "quesName": "Longest Nice Subarray",
        "quesLink": "https://leetcode.com/problems/longest-nice-subarray/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Sliding Window"
        ]
    },
    "meeting-rooms-iii": {
        "quesName": "Meeting Rooms III",
        "quesLink": "https://leetcode.com/problems/meeting-rooms-iii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "most-frequent-even-element": {
        "quesName": "Most Frequent Even Element",
        "quesLink": "https://leetcode.com/problems/most-frequent-even-element/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "optimal-partition-of-string": {
        "quesName": "Optimal Partition of String",
        "quesLink": "https://leetcode.com/problems/optimal-partition-of-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Greedy"
        ]
    },
    "divide-intervals-into-minimum-number-of-groups": {
        "quesName": "Divide Intervals Into Minimum Number of Groups",
        "quesLink": "https://leetcode.com/problems/divide-intervals-into-minimum-number-of-groups/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Prefix Sum"
        ]
    },
    "longest-increasing-subsequence-ii": {
        "quesName": "Longest Increasing Subsequence II",
        "quesLink": "https://leetcode.com/problems/longest-increasing-subsequence-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Divide and Conquer",
            "Dynamic Programming",
            "Binary Indexed Tree",
            "Segment Tree",
            "Queue",
            "Monotonic Queue"
        ]
    },
    "count-days-spent-together": {
        "quesName": "Count Days Spent Together",
        "quesLink": "https://leetcode.com/problems/count-days-spent-together/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String"
        ]
    },
    "maximum-matching-of-players-with-trainers": {
        "quesName": "Maximum Matching of Players With Trainers",
        "quesLink": "https://leetcode.com/problems/maximum-matching-of-players-with-trainers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ]
    },
    "smallest-subarrays-with-maximum-bitwise-or": {
        "quesName": "Smallest Subarrays With Maximum Bitwise OR",
        "quesLink": "https://leetcode.com/problems/smallest-subarrays-with-maximum-bitwise-or/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Bit Manipulation",
            "Sliding Window"
        ]
    },
    "minimum-money-required-before-transactions": {
        "quesName": "Minimum Money Required Before Transactions",
        "quesLink": "https://leetcode.com/problems/minimum-money-required-before-transactions/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "smallest-even-multiple": {
        "quesName": "Smallest Even Multiple",
        "quesLink": "https://leetcode.com/problems/smallest-even-multiple/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Number Theory"
        ]
    },
    "length-of-the-longest-alphabetical-continuous-substring": {
        "quesName": "Length of the Longest Alphabetical Continuous Substring",
        "quesLink": "https://leetcode.com/problems/length-of-the-longest-alphabetical-continuous-substring/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "reverse-odd-levels-of-binary-tree": {
        "quesName": "Reverse Odd Levels of Binary Tree",
        "quesLink": "https://leetcode.com/problems/reverse-odd-levels-of-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "sum-of-prefix-scores-of-strings": {
        "quesName": "Sum of Prefix Scores of Strings",
        "quesLink": "https://leetcode.com/problems/sum-of-prefix-scores-of-strings/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Trie",
            "Counting"
        ]
    },
    "sort-the-people": {
        "quesName": "Sort the People",
        "quesLink": "https://leetcode.com/problems/sort-the-people/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ]
    },
    "longest-subarray-with-maximum-bitwise-and": {
        "quesName": "Longest Subarray With Maximum Bitwise AND",
        "quesLink": "https://leetcode.com/problems/longest-subarray-with-maximum-bitwise-and/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Brainteaser"
        ]
    },
    "find-all-good-indices": {
        "quesName": "Find All Good Indices",
        "quesLink": "https://leetcode.com/problems/find-all-good-indices/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ]
    },
    "number-of-good-paths": {
        "quesName": "Number of Good Paths",
        "quesLink": "https://leetcode.com/problems/number-of-good-paths/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Tree",
            "Union Find",
            "Graph"
        ]
    },
    "remove-letter-to-equalize-frequency": {
        "quesName": "Remove Letter To Equalize Frequency",
        "quesLink": "https://leetcode.com/problems/remove-letter-to-equalize-frequency/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "longest-uploaded-prefix": {
        "quesName": "Longest Uploaded Prefix",
        "quesLink": "https://leetcode.com/problems/longest-uploaded-prefix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Binary Search",
            "Union Find",
            "Design",
            "Binary Indexed Tree",
            "Segment Tree",
            "Heap (Priority Queue)",
            "Ordered Set"
        ]
    },
    "bitwise-xor-of-all-pairings": {
        "quesName": "Bitwise XOR of All Pairings",
        "quesLink": "https://leetcode.com/problems/bitwise-xor-of-all-pairings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Brainteaser"
        ]
    },
    "number-of-pairs-satisfying-inequality": {
        "quesName": "Number of Pairs Satisfying Inequality",
        "quesLink": "https://leetcode.com/problems/number-of-pairs-satisfying-inequality/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Binary Indexed Tree",
            "Segment Tree",
            "Merge Sort",
            "Ordered Set"
        ]
    },
    "number-of-common-factors": {
        "quesName": "Number of Common Factors",
        "quesLink": "https://leetcode.com/problems/number-of-common-factors/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Enumeration",
            "Number Theory"
        ]
    },
    "maximum-sum-of-an-hourglass": {
        "quesName": "Maximum Sum of an Hourglass",
        "quesLink": "https://leetcode.com/problems/maximum-sum-of-an-hourglass/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ]
    },
    "minimize-xor": {
        "quesName": "Minimize XOR",
        "quesLink": "https://leetcode.com/problems/minimize-xor/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Greedy",
            "Bit Manipulation"
        ]
    },
    "maximum-deletions-on-a-string": {
        "quesName": "Maximum Deletions on a String",
        "quesLink": "https://leetcode.com/problems/maximum-deletions-on-a-string/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ]
    },
    "the-employee-that-worked-on-the-longest-task": {
        "quesName": "The Employee That Worked on the Longest Task",
        "quesLink": "https://leetcode.com/problems/the-employee-that-worked-on-the-longest-task/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "find-the-original-array-of-prefix-xor": {
        "quesName": "Find The Original Array of Prefix Xor",
        "quesLink": "https://leetcode.com/problems/find-the-original-array-of-prefix-xor/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation"
        ]
    },
    "using-a-robot-to-print-the-lexicographically-smallest-string": {
        "quesName": "Using a Robot to Print the Lexicographically Smallest String",
        "quesLink": "https://leetcode.com/problems/using-a-robot-to-print-the-lexicographically-smallest-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Stack",
            "Greedy"
        ]
    },
    "paths-in-matrix-whose-sum-is-divisible-by-k": {
        "quesName": "Paths in Matrix Whose Sum Is Divisible by K",
        "quesLink": "https://leetcode.com/problems/paths-in-matrix-whose-sum-is-divisible-by-k/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "number-of-valid-clock-times": {
        "quesName": "Number of Valid Clock Times",
        "quesLink": "https://leetcode.com/problems/number-of-valid-clock-times/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Enumeration"
        ]
    },
    "range-product-queries-of-powers": {
        "quesName": "Range Product Queries of Powers",
        "quesLink": "https://leetcode.com/problems/range-product-queries-of-powers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Prefix Sum"
        ]
    },
    "minimize-maximum-of-array": {
        "quesName": "Minimize Maximum of Array",
        "quesLink": "https://leetcode.com/problems/minimize-maximum-of-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Greedy",
            "Prefix Sum"
        ]
    },
    "create-components-with-same-value": {
        "quesName": "Create Components With Same Value",
        "quesLink": "https://leetcode.com/problems/create-components-with-same-value/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Tree",
            "Depth-First Search",
            "Enumeration"
        ]
    },
    "largest-positive-integer-that-exists-with-its-negative": {
        "quesName": "Largest Positive Integer That Exists With Its Negative",
        "quesLink": "https://leetcode.com/problems/largest-positive-integer-that-exists-with-its-negative/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting"
        ]
    },
    "count-number-of-distinct-integers-after-reverse-operations": {
        "quesName": "Count Number of Distinct Integers After Reverse Operations",
        "quesLink": "https://leetcode.com/problems/count-number-of-distinct-integers-after-reverse-operations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math"
        ]
    },
    "sum-of-number-and-its-reverse": {
        "quesName": "Sum of Number and Its Reverse",
        "quesLink": "https://leetcode.com/problems/sum-of-number-and-its-reverse/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Enumeration"
        ]
    },
    "count-subarrays-with-fixed-bounds": {
        "quesName": "Count Subarrays With Fixed Bounds",
        "quesLink": "https://leetcode.com/problems/count-subarrays-with-fixed-bounds/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Queue",
            "Sliding Window",
            "Monotonic Queue"
        ]
    },
    "determine-if-two-events-have-conflict": {
        "quesName": "Determine if Two Events Have Conflict",
        "quesLink": "https://leetcode.com/problems/determine-if-two-events-have-conflict/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "number-of-subarrays-with-gcd-equal-to-k": {
        "quesName": "Number of Subarrays With GCD Equal to K",
        "quesLink": "https://leetcode.com/problems/number-of-subarrays-with-gcd-equal-to-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ]
    },
    "minimum-cost-to-make-array-equal": {
        "quesName": "Minimum Cost to Make Array Equal",
        "quesLink": "https://leetcode.com/problems/minimum-cost-to-make-array-equal/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ]
    },
    "minimum-number-of-operations-to-make-arrays-similar": {
        "quesName": "Minimum Number of Operations to Make Arrays Similar",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-operations-to-make-arrays-similar/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "odd-string-difference": {
        "quesName": "Odd String Difference",
        "quesLink": "https://leetcode.com/problems/odd-string-difference/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "words-within-two-edits-of-dictionary": {
        "quesName": "Words Within Two Edits of Dictionary",
        "quesLink": "https://leetcode.com/problems/words-within-two-edits-of-dictionary/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "destroy-sequential-targets": {
        "quesName": "Destroy Sequential Targets",
        "quesLink": "https://leetcode.com/problems/destroy-sequential-targets/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Counting"
        ]
    },
    "next-greater-element-iv": {
        "quesName": "Next Greater Element IV",
        "quesLink": "https://leetcode.com/problems/next-greater-element-iv/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Stack",
            "Sorting",
            "Heap (Priority Queue)",
            "Monotonic Stack"
        ]
    },
    "average-value-of-even-numbers-that-are-divisible-by-three": {
        "quesName": "Average Value of Even Numbers That Are Divisible by Three",
        "quesLink": "https://leetcode.com/problems/average-value-of-even-numbers-that-are-divisible-by-three/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "most-popular-video-creator": {
        "quesName": "Most Popular Video Creator",
        "quesLink": "https://leetcode.com/problems/most-popular-video-creator/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "minimum-addition-to-make-integer-beautiful": {
        "quesName": "Minimum Addition to Make Integer Beautiful",
        "quesLink": "https://leetcode.com/problems/minimum-addition-to-make-integer-beautiful/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "height-of-binary-tree-after-subtree-removal-queries": {
        "quesName": "Height of Binary Tree After Subtree Removal Queries",
        "quesLink": "https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "apply-operations-to-an-array": {
        "quesName": "Apply Operations to an Array",
        "quesLink": "https://leetcode.com/problems/apply-operations-to-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "maximum-sum-of-distinct-subarrays-with-length-k": {
        "quesName": "Maximum Sum of Distinct Subarrays With Length K",
        "quesLink": "https://leetcode.com/problems/maximum-sum-of-distinct-subarrays-with-length-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ]
    },
    "total-cost-to-hire-k-workers": {
        "quesName": "Total Cost to Hire K Workers",
        "quesLink": "https://leetcode.com/problems/total-cost-to-hire-k-workers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Heap (Priority Queue)",
            "Simulation"
        ]
    },
    "minimum-total-distance-traveled": {
        "quesName": "Minimum Total Distance Traveled",
        "quesLink": "https://leetcode.com/problems/minimum-total-distance-traveled/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "number-of-distinct-averages": {
        "quesName": "Number of Distinct Averages",
        "quesLink": "https://leetcode.com/problems/number-of-distinct-averages/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting"
        ]
    },
    "count-ways-to-build-good-strings": {
        "quesName": "Count Ways To Build Good Strings",
        "quesLink": "https://leetcode.com/problems/count-ways-to-build-good-strings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "most-profitable-path-in-a-tree": {
        "quesName": "Most Profitable Path in a Tree",
        "quesLink": "https://leetcode.com/problems/most-profitable-path-in-a-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "split-message-based-on-limit": {
        "quesName": "Split Message Based on Limit",
        "quesLink": "https://leetcode.com/problems/split-message-based-on-limit/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Binary Search"
        ]
    },
    "convert-the-temperature": {
        "quesName": "Convert the Temperature",
        "quesLink": "https://leetcode.com/problems/convert-the-temperature/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "number-of-subarrays-with-lcm-equal-to-k": {
        "quesName": "Number of Subarrays With LCM Equal to K",
        "quesLink": "https://leetcode.com/problems/number-of-subarrays-with-lcm-equal-to-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ]
    },
    "minimum-number-of-operations-to-sort-a-binary-tree-by-level": {
        "quesName": "Minimum Number of Operations to Sort a Binary Tree by Level",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "maximum-number-of-non-overlapping-palindrome-substrings": {
        "quesName": "Maximum Number of Non-overlapping Palindrome Substrings",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-non-overlapping-palindrome-substrings/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "number-of-unequal-triplets-in-array": {
        "quesName": "Number of Unequal Triplets in Array",
        "quesLink": "https://leetcode.com/problems/number-of-unequal-triplets-in-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "closest-nodes-queries-in-a-binary-search-tree": {
        "quesName": "Closest Nodes Queries in a Binary Search Tree",
        "quesLink": "https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ]
    },
    "minimum-fuel-cost-to-report-to-the-capital": {
        "quesName": "Minimum Fuel Cost to Report to the Capital",
        "quesLink": "https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "number-of-beautiful-partitions": {
        "quesName": "Number of Beautiful Partitions",
        "quesLink": "https://leetcode.com/problems/number-of-beautiful-partitions/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "minimum-cuts-to-divide-a-circle": {
        "quesName": "Minimum Cuts to Divide a Circle",
        "quesLink": "https://leetcode.com/problems/minimum-cuts-to-divide-a-circle/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Geometry"
        ]
    },
    "difference-between-ones-and-zeros-in-row-and-column": {
        "quesName": "Difference Between Ones and Zeros in Row and Column",
        "quesLink": "https://leetcode.com/problems/difference-between-ones-and-zeros-in-row-and-column/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Simulation"
        ]
    },
    "minimum-penalty-for-a-shop": {
        "quesName": "Minimum Penalty for a Shop",
        "quesLink": "https://leetcode.com/problems/minimum-penalty-for-a-shop/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Prefix Sum"
        ]
    },
    "count-palindromic-subsequences": {
        "quesName": "Count Palindromic Subsequences",
        "quesLink": "https://leetcode.com/problems/count-palindromic-subsequences/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "find-the-pivot-integer": {
        "quesName": "Find the Pivot Integer",
        "quesLink": "https://leetcode.com/problems/find-the-pivot-integer/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Prefix Sum"
        ]
    },
    "append-characters-to-string-to-make-subsequence": {
        "quesName": "Append Characters to String to Make Subsequence",
        "quesLink": "https://leetcode.com/problems/append-characters-to-string-to-make-subsequence/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "Greedy"
        ]
    },
    "remove-nodes-from-linked-list": {
        "quesName": "Remove Nodes From Linked List",
        "quesLink": "https://leetcode.com/problems/remove-nodes-from-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Stack",
            "Recursion",
            "Monotonic Stack"
        ]
    },
    "count-subarrays-with-median-k": {
        "quesName": "Count Subarrays With Median K",
        "quesLink": "https://leetcode.com/problems/count-subarrays-with-median-k/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ]
    },
    "circular-sentence": {
        "quesName": "Circular Sentence",
        "quesLink": "https://leetcode.com/problems/circular-sentence/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "divide-players-into-teams-of-equal-skill": {
        "quesName": "Divide Players Into Teams of Equal Skill",
        "quesLink": "https://leetcode.com/problems/divide-players-into-teams-of-equal-skill/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting"
        ]
    },
    "minimum-score-of-a-path-between-two-cities": {
        "quesName": "Minimum Score of a Path Between Two Cities",
        "quesLink": "https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "divide-nodes-into-the-maximum-number-of-groups": {
        "quesName": "Divide Nodes Into the Maximum Number of Groups",
        "quesLink": "https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ]
    },
    "maximum-value-of-a-string-in-an-array": {
        "quesName": "Maximum Value of a String in an Array",
        "quesLink": "https://leetcode.com/problems/maximum-value-of-a-string-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "maximum-star-sum-of-a-graph": {
        "quesName": "Maximum Star Sum of a Graph",
        "quesLink": "https://leetcode.com/problems/maximum-star-sum-of-a-graph/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Graph",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "frog-jump-ii": {
        "quesName": "Frog Jump II",
        "quesLink": "https://leetcode.com/problems/frog-jump-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy"
        ]
    },
    "minimum-total-cost-to-make-arrays-unequal": {
        "quesName": "Minimum Total Cost to Make Arrays Unequal",
        "quesLink": "https://leetcode.com/problems/minimum-total-cost-to-make-arrays-unequal/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ]
    },
    "delete-greatest-value-in-each-row": {
        "quesName": "Delete Greatest Value in Each Row",
        "quesLink": "https://leetcode.com/problems/delete-greatest-value-in-each-row/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix",
            "Simulation"
        ]
    },
    "longest-square-streak-in-an-array": {
        "quesName": "Longest Square Streak in an Array",
        "quesLink": "https://leetcode.com/problems/longest-square-streak-in-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "design-memory-allocator": {
        "quesName": "Design Memory Allocator",
        "quesLink": "https://leetcode.com/problems/design-memory-allocator/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Design",
            "Simulation"
        ]
    },
    "maximum-number-of-points-from-grid-queries": {
        "quesName": "Maximum Number of Points From Grid Queries",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-points-from-grid-queries/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Breadth-First Search",
            "Union Find",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix"
        ]
    },
    "count-pairs-of-similar-strings": {
        "quesName": "Count Pairs Of Similar Strings",
        "quesLink": "https://leetcode.com/problems/count-pairs-of-similar-strings/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String"
        ]
    },
    "smallest-value-after-replacing-with-sum-of-prime-factors": {
        "quesName": "Smallest Value After Replacing With Sum of Prime Factors",
        "quesLink": "https://leetcode.com/problems/smallest-value-after-replacing-with-sum-of-prime-factors/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Number Theory"
        ]
    },
    "add-edges-to-make-degrees-of-all-nodes-even": {
        "quesName": "Add Edges to Make Degrees of All Nodes Even",
        "quesLink": "https://leetcode.com/problems/add-edges-to-make-degrees-of-all-nodes-even/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Graph"
        ]
    },
    "cycle-length-queries-in-a-tree": {
        "quesName": "Cycle Length Queries in a Tree",
        "quesLink": "https://leetcode.com/problems/cycle-length-queries-in-a-tree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Tree",
            "Binary Tree"
        ]
    },
    "maximum-enemy-forts-that-can-be-captured": {
        "quesName": "Maximum Enemy Forts That Can Be Captured",
        "quesLink": "https://leetcode.com/problems/maximum-enemy-forts-that-can-be-captured/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers"
        ]
    },
    "reward-top-k-students": {
        "quesName": "Reward Top K Students",
        "quesLink": "https://leetcode.com/problems/reward-top-k-students/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "minimize-the-maximum-of-two-arrays": {
        "quesName": "Minimize the Maximum of Two Arrays",
        "quesLink": "https://leetcode.com/problems/minimize-the-maximum-of-two-arrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Binary Search",
            "Number Theory"
        ]
    },
    "count-anagrams": {
        "quesName": "Count Anagrams",
        "quesLink": "https://leetcode.com/problems/count-anagrams/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "String",
            "Combinatorics",
            "Counting"
        ]
    },
    "shortest-distance-to-target-string-in-a-circular-array": {
        "quesName": "Shortest Distance to Target String in a Circular Array",
        "quesLink": "https://leetcode.com/problems/shortest-distance-to-target-string-in-a-circular-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "take-k-of-each-character-from-left-and-right": {
        "quesName": "Take K of Each Character From Left and Right",
        "quesLink": "https://leetcode.com/problems/take-k-of-each-character-from-left-and-right/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sliding Window"
        ]
    },
    "maximum-tastiness-of-candy-basket": {
        "quesName": "Maximum Tastiness of Candy Basket",
        "quesLink": "https://leetcode.com/problems/maximum-tastiness-of-candy-basket/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting"
        ]
    },
    "number-of-great-partitions": {
        "quesName": "Number of Great Partitions",
        "quesLink": "https://leetcode.com/problems/number-of-great-partitions/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "count-the-digits-that-divide-a-number": {
        "quesName": "Count the Digits That Divide a Number",
        "quesLink": "https://leetcode.com/problems/count-the-digits-that-divide-a-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "distinct-prime-factors-of-product-of-array": {
        "quesName": "Distinct Prime Factors of Product of Array",
        "quesLink": "https://leetcode.com/problems/distinct-prime-factors-of-product-of-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Number Theory"
        ]
    },
    "partition-string-into-substrings-with-values-at-most-k": {
        "quesName": "Partition String Into Substrings With Values at Most K",
        "quesLink": "https://leetcode.com/problems/partition-string-into-substrings-with-values-at-most-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "closest-prime-numbers-in-range": {
        "quesName": "Closest Prime Numbers in Range",
        "quesLink": "https://leetcode.com/problems/closest-prime-numbers-in-range/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Number Theory"
        ]
    },
    "categorize-box-according-to-criteria": {
        "quesName": "Categorize Box According to Criteria",
        "quesLink": "https://leetcode.com/problems/categorize-box-according-to-criteria/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "find-consecutive-integers-from-a-data-stream": {
        "quesName": "Find Consecutive Integers from a Data Stream",
        "quesLink": "https://leetcode.com/problems/find-consecutive-integers-from-a-data-stream/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Design",
            "Queue",
            "Counting",
            "Data Stream"
        ]
    },
    "find-xor-beauty-of-array": {
        "quesName": "Find Xor-Beauty of Array",
        "quesLink": "https://leetcode.com/problems/find-xor-beauty-of-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Bit Manipulation"
        ]
    },
    "maximize-the-minimum-powered-city": {
        "quesName": "Maximize the Minimum Powered City",
        "quesLink": "https://leetcode.com/problems/maximize-the-minimum-powered-city/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Queue",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "maximum-count-of-positive-integer-and-negative-integer": {
        "quesName": "Maximum Count of Positive Integer and Negative Integer",
        "quesLink": "https://leetcode.com/problems/maximum-count-of-positive-integer-and-negative-integer/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Counting"
        ]
    },
    "maximal-score-after-applying-k-operations": {
        "quesName": "Maximal Score After Applying K Operations",
        "quesLink": "https://leetcode.com/problems/maximal-score-after-applying-k-operations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ]
    },
    "make-number-of-distinct-characters-equal": {
        "quesName": "Make Number of Distinct Characters Equal",
        "quesLink": "https://leetcode.com/problems/make-number-of-distinct-characters-equal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Counting"
        ]
    },
    "time-to-cross-a-bridge": {
        "quesName": "Time to Cross a Bridge",
        "quesLink": "https://leetcode.com/problems/time-to-cross-a-bridge/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Heap (Priority Queue)",
            "Simulation"
        ]
    },
    "difference-between-element-sum-and-digit-sum-of-an-array": {
        "quesName": "Difference Between Element Sum and Digit Sum of an Array",
        "quesLink": "https://leetcode.com/problems/difference-between-element-sum-and-digit-sum-of-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math"
        ]
    },
    "increment-submatrices-by-one": {
        "quesName": "Increment Submatrices by One",
        "quesLink": "https://leetcode.com/problems/increment-submatrices-by-one/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ]
    },
    "count-the-number-of-good-subarrays": {
        "quesName": "Count the Number of Good Subarrays",
        "quesLink": "https://leetcode.com/problems/count-the-number-of-good-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ]
    },
    "difference-between-maximum-and-minimum-price-sum": {
        "quesName": "Difference Between Maximum and Minimum Price Sum",
        "quesLink": "https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Tree",
            "Depth-First Search"
        ]
    },
    "minimum-common-value": {
        "quesName": "Minimum Common Value",
        "quesLink": "https://leetcode.com/problems/minimum-common-value/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search"
        ]
    },
    "minimum-operations-to-make-array-equal-ii": {
        "quesName": "Minimum Operations to Make Array Equal II",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-make-array-equal-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Greedy"
        ]
    },
    "maximum-subsequence-score": {
        "quesName": "Maximum Subsequence Score",
        "quesLink": "https://leetcode.com/problems/maximum-subsequence-score/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "check-if-point-is-reachable": {
        "quesName": "Check if Point Is Reachable",
        "quesLink": "https://leetcode.com/problems/check-if-point-is-reachable/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Number Theory"
        ]
    },
    "alternating-digit-sum": {
        "quesName": "Alternating Digit Sum",
        "quesLink": "https://leetcode.com/problems/alternating-digit-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "sort-the-students-by-their-kth-score": {
        "quesName": "Sort the Students by Their Kth Score",
        "quesLink": "https://leetcode.com/problems/sort-the-students-by-their-kth-score/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Matrix"
        ]
    },
    "apply-bitwise-operations-to-make-strings-equal": {
        "quesName": "Apply Bitwise Operations to Make Strings Equal",
        "quesLink": "https://leetcode.com/problems/apply-bitwise-operations-to-make-strings-equal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Bit Manipulation"
        ]
    },
    "minimum-cost-to-split-an-array": {
        "quesName": "Minimum Cost to Split an Array",
        "quesLink": "https://leetcode.com/problems/minimum-cost-to-split-an-array/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming",
            "Counting"
        ]
    },
    "count-distinct-numbers-on-board": {
        "quesName": "Count Distinct Numbers on Board",
        "quesLink": "https://leetcode.com/problems/count-distinct-numbers-on-board/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Simulation"
        ]
    },
    "count-collisions-of-monkeys-on-a-polygon": {
        "quesName": "Count Collisions of Monkeys on a Polygon",
        "quesLink": "https://leetcode.com/problems/count-collisions-of-monkeys-on-a-polygon/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Recursion"
        ]
    },
    "put-marbles-in-bags": {
        "quesName": "Put Marbles in Bags",
        "quesLink": "https://leetcode.com/problems/put-marbles-in-bags/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "count-increasing-quadruplets": {
        "quesName": "Count Increasing Quadruplets",
        "quesLink": "https://leetcode.com/problems/count-increasing-quadruplets/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Binary Indexed Tree",
            "Enumeration",
            "Prefix Sum"
        ]
    },
    "separate-the-digits-in-an-array": {
        "quesName": "Separate the Digits in an Array",
        "quesLink": "https://leetcode.com/problems/separate-the-digits-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "maximum-number-of-integers-to-choose-from-a-range-i": {
        "quesName": "Maximum Number of Integers to Choose From a Range I",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-integers-to-choose-from-a-range-i/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Greedy",
            "Sorting"
        ]
    },
    "maximize-win-from-two-segments": {
        "quesName": "Maximize Win From Two Segments",
        "quesLink": "https://leetcode.com/problems/maximize-win-from-two-segments/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window"
        ]
    },
    "disconnect-path-in-a-binary-matrix-by-at-most-one-flip": {
        "quesName": "Disconnect Path in a Binary Matrix by at Most One Flip",
        "quesLink": "https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "take-gifts-from-the-richest-pile": {
        "quesName": "Take Gifts From the Richest Pile",
        "quesLink": "https://leetcode.com/problems/take-gifts-from-the-richest-pile/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Heap (Priority Queue)",
            "Simulation"
        ]
    },
    "count-vowel-strings-in-ranges": {
        "quesName": "Count Vowel Strings in Ranges",
        "quesLink": "https://leetcode.com/problems/count-vowel-strings-in-ranges/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Prefix Sum"
        ]
    },
    "house-robber-iv": {
        "quesName": "House Robber IV",
        "quesLink": "https://leetcode.com/problems/house-robber-iv/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "rearranging-fruits": {
        "quesName": "Rearranging Fruits",
        "quesLink": "https://leetcode.com/problems/rearranging-fruits/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy"
        ]
    },
    "find-the-array-concatenation-value": {
        "quesName": "Find the Array Concatenation Value",
        "quesLink": "https://leetcode.com/problems/find-the-array-concatenation-value/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Simulation"
        ]
    },
    "count-the-number-of-fair-pairs": {
        "quesName": "Count the Number of Fair Pairs",
        "quesLink": "https://leetcode.com/problems/count-the-number-of-fair-pairs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ]
    },
    "substring-xor-queries": {
        "quesName": "Substring XOR Queries",
        "quesLink": "https://leetcode.com/problems/substring-xor-queries/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation"
        ]
    },
    "subsequence-with-the-minimum-score": {
        "quesName": "Subsequence With the Minimum Score",
        "quesLink": "https://leetcode.com/problems/subsequence-with-the-minimum-score/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String",
            "Binary Search"
        ]
    },
    "maximum-difference-by-remapping-a-digit": {
        "quesName": "Maximum Difference by Remapping a Digit",
        "quesLink": "https://leetcode.com/problems/maximum-difference-by-remapping-a-digit/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "minimum-score-by-changing-two-elements": {
        "quesName": "Minimum Score by Changing Two Elements",
        "quesLink": "https://leetcode.com/problems/minimum-score-by-changing-two-elements/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "minimum-impossible-or": {
        "quesName": "Minimum Impossible OR",
        "quesLink": "https://leetcode.com/problems/minimum-impossible-or/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation",
            "Brainteaser"
        ]
    },
    "handling-sum-queries-after-update": {
        "quesName": "Handling Sum Queries After Update",
        "quesLink": "https://leetcode.com/problems/handling-sum-queries-after-update/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Segment Tree"
        ]
    },
    "merge-two-2d-arrays-by-summing-values": {
        "quesName": "Merge Two 2D Arrays by Summing Values",
        "quesLink": "https://leetcode.com/problems/merge-two-2d-arrays-by-summing-values/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers"
        ]
    },
    "minimum-operations-to-reduce-an-integer-to-0": {
        "quesName": "Minimum Operations to Reduce an Integer to 0",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Greedy",
            "Bit Manipulation"
        ]
    },
    "count-the-number-of-square-free-subsets": {
        "quesName": "Count the Number of Square-Free Subsets",
        "quesLink": "https://leetcode.com/problems/count-the-number-of-square-free-subsets/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "find-the-string-with-lcp": {
        "quesName": "Find the String with LCP",
        "quesLink": "https://leetcode.com/problems/find-the-string-with-lcp/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Greedy",
            "Union Find",
            "Matrix"
        ]
    },
    "left-and-right-sum-differences": {
        "quesName": "Left and Right Sum Differences",
        "quesLink": "https://leetcode.com/problems/left-and-right-sum-differences/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "find-the-divisibility-array-of-a-string": {
        "quesName": "Find the Divisibility Array of a String",
        "quesLink": "https://leetcode.com/problems/find-the-divisibility-array-of-a-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "String"
        ]
    },
    "find-the-maximum-number-of-marked-indices": {
        "quesName": "Find the Maximum Number of Marked Indices",
        "quesLink": "https://leetcode.com/problems/find-the-maximum-number-of-marked-indices/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Sorting"
        ]
    },
    "minimum-time-to-visit-a-cell-in-a-grid": {
        "quesName": "Minimum Time to Visit a Cell In a Grid",
        "quesLink": "https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ]
    },
    "split-with-minimum-sum": {
        "quesName": "Split With Minimum Sum",
        "quesLink": "https://leetcode.com/problems/split-with-minimum-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy",
            "Sorting"
        ]
    },
    "count-total-number-of-colored-cells": {
        "quesName": "Count Total Number of Colored Cells",
        "quesLink": "https://leetcode.com/problems/count-total-number-of-colored-cells/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "count-ways-to-group-overlapping-ranges": {
        "quesName": "Count Ways to Group Overlapping Ranges",
        "quesLink": "https://leetcode.com/problems/count-ways-to-group-overlapping-ranges/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "count-number-of-possible-root-nodes": {
        "quesName": "Count Number of Possible Root Nodes",
        "quesLink": "https://leetcode.com/problems/count-number-of-possible-root-nodes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Dynamic Programming",
            "Tree",
            "Depth-First Search"
        ]
    },
    "pass-the-pillow": {
        "quesName": "Pass the Pillow",
        "quesLink": "https://leetcode.com/problems/pass-the-pillow/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Simulation"
        ]
    },
    "kth-largest-sum-in-a-binary-tree": {
        "quesName": "Kth Largest Sum in a Binary Tree",
        "quesLink": "https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Binary Search",
            "Tree",
            "Breadth-First Search"
        ]
    },
    "split-the-array-to-make-coprime-products": {
        "quesName": "Split the Array to Make Coprime Products",
        "quesLink": "https://leetcode.com/problems/split-the-array-to-make-coprime-products/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Number Theory"
        ]
    },
    "number-of-ways-to-earn-points": {
        "quesName": "Number of Ways to Earn Points",
        "quesLink": "https://leetcode.com/problems/number-of-ways-to-earn-points/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "count-the-number-of-vowel-strings-in-range": {
        "quesName": "Count the Number of Vowel Strings in Range",
        "quesLink": "https://leetcode.com/problems/count-the-number-of-vowel-strings-in-range/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "rearrange-array-to-maximize-prefix-score": {
        "quesName": "Rearrange Array to Maximize Prefix Score",
        "quesLink": "https://leetcode.com/problems/rearrange-array-to-maximize-prefix-score/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ]
    },
    "count-the-number-of-beautiful-subarrays": {
        "quesName": "Count the Number of Beautiful Subarrays",
        "quesLink": "https://leetcode.com/problems/count-the-number-of-beautiful-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Prefix Sum"
        ]
    },
    "minimum-time-to-complete-all-tasks": {
        "quesName": "Minimum Time to Complete All Tasks",
        "quesLink": "https://leetcode.com/problems/minimum-time-to-complete-all-tasks/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Stack",
            "Greedy",
            "Sorting"
        ]
    },
    "distribute-money-to-maximum-children": {
        "quesName": "Distribute Money to Maximum Children",
        "quesLink": "https://leetcode.com/problems/distribute-money-to-maximum-children/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "maximize-greatness-of-an-array": {
        "quesName": "Maximize Greatness of an Array",
        "quesLink": "https://leetcode.com/problems/maximize-greatness-of-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ]
    },
    "find-score-of-an-array-after-marking-all-elements": {
        "quesName": "Find Score of an Array After Marking All Elements",
        "quesLink": "https://leetcode.com/problems/find-score-of-an-array-after-marking-all-elements/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)",
            "Simulation"
        ]
    },
    "minimum-time-to-repair-cars": {
        "quesName": "Minimum Time to Repair Cars",
        "quesLink": "https://leetcode.com/problems/minimum-time-to-repair-cars/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "number-of-even-and-odd-bits": {
        "quesName": "Number of Even and Odd Bits",
        "quesLink": "https://leetcode.com/problems/number-of-even-and-odd-bits/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Bit Manipulation"
        ]
    },
    "check-knight-tour-configuration": {
        "quesName": "Check Knight Tour Configuration",
        "quesLink": "https://leetcode.com/problems/check-knight-tour-configuration/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix",
            "Simulation"
        ]
    },
    "the-number-of-beautiful-subsets": {
        "quesName": "The Number of Beautiful Subsets",
        "quesLink": "https://leetcode.com/problems/the-number-of-beautiful-subsets/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Backtracking"
        ]
    },
    "smallest-missing-non-negative-integer-after-operations": {
        "quesName": "Smallest Missing Non-negative Integer After Operations",
        "quesLink": "https://leetcode.com/problems/smallest-missing-non-negative-integer-after-operations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Math",
            "Greedy"
        ]
    },
    "k-items-with-the-maximum-sum": {
        "quesName": "K Items With the Maximum Sum",
        "quesLink": "https://leetcode.com/problems/k-items-with-the-maximum-sum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "prime-subtraction-operation": {
        "quesName": "Prime Subtraction Operation",
        "quesLink": "https://leetcode.com/problems/prime-subtraction-operation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy",
            "Number Theory"
        ]
    },
    "minimum-operations-to-make-all-array-elements-equal": {
        "quesName": "Minimum Operations to Make All Array Elements Equal",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-make-all-array-elements-equal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sorting",
            "Prefix Sum"
        ]
    },
    "collect-coins-in-a-tree": {
        "quesName": "Collect Coins in a Tree",
        "quesLink": "https://leetcode.com/problems/collect-coins-in-a-tree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Tree",
            "Graph",
            "Topological Sort"
        ]
    },
    "form-smallest-number-from-two-digit-arrays": {
        "quesName": "Form Smallest Number From Two Digit Arrays",
        "quesLink": "https://leetcode.com/problems/form-smallest-number-from-two-digit-arrays/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Enumeration"
        ]
    },
    "find-the-substring-with-maximum-cost": {
        "quesName": "Find the Substring With Maximum Cost",
        "quesLink": "https://leetcode.com/problems/find-the-substring-with-maximum-cost/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Dynamic Programming"
        ]
    },
    "make-k-subarray-sums-equal": {
        "quesName": "Make K-Subarray Sums Equal",
        "quesLink": "https://leetcode.com/problems/make-k-subarray-sums-equal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Sorting",
            "Number Theory"
        ]
    },
    "shortest-cycle-in-a-graph": {
        "quesName": "Shortest Cycle in a Graph",
        "quesLink": "https://leetcode.com/problems/shortest-cycle-in-a-graph/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Breadth-First Search",
            "Graph"
        ]
    },
    "find-the-longest-balanced-substring-of-a-binary-string": {
        "quesName": "Find the Longest Balanced Substring of a Binary String",
        "quesLink": "https://leetcode.com/problems/find-the-longest-balanced-substring-of-a-binary-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "convert-an-array-into-a-2d-array-with-conditions": {
        "quesName": "Convert an Array Into a 2D Array With Conditions",
        "quesLink": "https://leetcode.com/problems/convert-an-array-into-a-2d-array-with-conditions/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "mice-and-cheese": {
        "quesName": "Mice and Cheese",
        "quesLink": "https://leetcode.com/problems/mice-and-cheese/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "minimum-reverse-operations": {
        "quesName": "Minimum Reverse Operations",
        "quesLink": "https://leetcode.com/problems/minimum-reverse-operations/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Breadth-First Search",
            "Ordered Set"
        ]
    },
    "prime-in-diagonal": {
        "quesName": "Prime In Diagonal",
        "quesLink": "https://leetcode.com/problems/prime-in-diagonal/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Matrix",
            "Number Theory"
        ]
    },
    "sum-of-distances": {
        "quesName": "Sum of Distances",
        "quesLink": "https://leetcode.com/problems/sum-of-distances/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ]
    },
    "minimize-the-maximum-difference-of-pairs": {
        "quesName": "Minimize the Maximum Difference of Pairs",
        "quesLink": "https://leetcode.com/problems/minimize-the-maximum-difference-of-pairs/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy"
        ]
    },
    "minimum-number-of-visited-cells-in-a-grid": {
        "quesName": "Minimum Number of Visited Cells in a Grid",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-visited-cells-in-a-grid/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Stack",
            "Union Find",
            "Binary Indexed Tree",
            "Segment Tree"
        ]
    },
    "check-if-object-instance-of-class": {
        "quesName": "Check if Object Instance of Class",
        "quesLink": "https://leetcode.com/problems/check-if-object-instance-of-class/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "array-prototype-last": {
        "quesName": "Array Prototype Last",
        "quesLink": "https://leetcode.com/problems/array-prototype-last/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "counter": {
        "quesName": "Counter",
        "quesLink": "https://leetcode.com/problems/counter/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "sleep": {
        "quesName": "Sleep",
        "quesLink": "https://leetcode.com/problems/sleep/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "cache-with-time-limit": {
        "quesName": "Cache With Time Limit",
        "quesLink": "https://leetcode.com/problems/cache-with-time-limit/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "memoize": {
        "quesName": "Memoize",
        "quesLink": "https://leetcode.com/problems/memoize/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "snail-traversal": {
        "quesName": "Snail Traversal",
        "quesLink": "https://leetcode.com/problems/snail-traversal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "flatten-deeply-nested-array": {
        "quesName": "Flatten Deeply Nested Array",
        "quesLink": "https://leetcode.com/problems/flatten-deeply-nested-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "array-reduce-transformation": {
        "quesName": "Array Reduce Transformation",
        "quesLink": "https://leetcode.com/problems/array-reduce-transformation/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "debounce": {
        "quesName": "Debounce",
        "quesLink": "https://leetcode.com/problems/debounce/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "function-composition": {
        "quesName": "Function Composition",
        "quesLink": "https://leetcode.com/problems/function-composition/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "memoize-ii": {
        "quesName": "Memoize II",
        "quesLink": "https://leetcode.com/problems/memoize-ii/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "group-by": {
        "quesName": "Group By",
        "quesLink": "https://leetcode.com/problems/group-by/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "filter-elements-from-array": {
        "quesName": "Filter Elements from Array",
        "quesLink": "https://leetcode.com/problems/filter-elements-from-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "apply-transform-over-each-element-in-array": {
        "quesName": "Apply Transform Over Each Element in Array",
        "quesLink": "https://leetcode.com/problems/apply-transform-over-each-element-in-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "promise-time-limit": {
        "quesName": "Promise Time Limit",
        "quesLink": "https://leetcode.com/problems/promise-time-limit/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "find-the-width-of-columns-of-a-grid": {
        "quesName": "Find the Width of Columns of a Grid",
        "quesLink": "https://leetcode.com/problems/find-the-width-of-columns-of-a-grid/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "find-the-score-of-all-prefixes-of-an-array": {
        "quesName": "Find the Score of All Prefixes of an Array",
        "quesLink": "https://leetcode.com/problems/find-the-score-of-all-prefixes-of-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "cousins-in-binary-tree-ii": {
        "quesName": "Cousins in Binary Tree II",
        "quesLink": "https://leetcode.com/problems/cousins-in-binary-tree-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ]
    },
    "design-graph-with-shortest-path-calculator": {
        "quesName": "Design Graph With Shortest Path Calculator",
        "quesLink": "https://leetcode.com/problems/design-graph-with-shortest-path-calculator/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Graph",
            "Design",
            "Heap (Priority Queue)",
            "Shortest Path"
        ]
    },
    "row-with-maximum-ones": {
        "quesName": "Row With Maximum Ones",
        "quesLink": "https://leetcode.com/problems/row-with-maximum-ones/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix"
        ]
    },
    "find-the-maximum-divisibility-score": {
        "quesName": "Find the Maximum Divisibility Score",
        "quesLink": "https://leetcode.com/problems/find-the-maximum-divisibility-score/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "minimum-additions-to-make-valid-string": {
        "quesName": "Minimum Additions to Make Valid String",
        "quesLink": "https://leetcode.com/problems/minimum-additions-to-make-valid-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Stack",
            "Greedy"
        ]
    },
    "minimize-the-total-price-of-the-trips": {
        "quesName": "Minimize the Total Price of the Trips",
        "quesLink": "https://leetcode.com/problems/minimize-the-total-price-of-the-trips/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Graph"
        ]
    },
    "generate-fibonacci-sequence": {
        "quesName": "Generate Fibonacci Sequence",
        "quesLink": "https://leetcode.com/problems/generate-fibonacci-sequence/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "nested-array-generator": {
        "quesName": "Nested Array Generator",
        "quesLink": "https://leetcode.com/problems/nested-array-generator/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "design-cancellable-function": {
        "quesName": "Design Cancellable Function",
        "quesLink": "https://leetcode.com/problems/design-cancellable-function/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "calculate-delayed-arrival-time": {
        "quesName": "Calculate Delayed Arrival Time",
        "quesLink": "https://leetcode.com/problems/calculate-delayed-arrival-time/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "sum-multiples": {
        "quesName": "Sum Multiples",
        "quesLink": "https://leetcode.com/problems/sum-multiples/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "sliding-subarray-beauty": {
        "quesName": "Sliding Subarray Beauty",
        "quesLink": "https://leetcode.com/problems/sliding-subarray-beauty/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ]
    },
    "minimum-number-of-operations-to-make-all-array-elements-equal-to-1": {
        "quesName": "Minimum Number of Operations to Make All Array Elements Equal to 1",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-operations-to-make-all-array-elements-equal-to-1/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ]
    },
    "maximum-sum-with-exactly-k-elements": {
        "quesName": "Maximum Sum With Exactly K Elements ",
        "quesLink": "https://leetcode.com/problems/maximum-sum-with-exactly-k-elements/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy"
        ]
    },
    "find-the-prefix-common-array-of-two-arrays": {
        "quesName": "Find the Prefix Common Array of Two Arrays",
        "quesLink": "https://leetcode.com/problems/find-the-prefix-common-array-of-two-arrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "maximum-number-of-fish-in-a-grid": {
        "quesName": "Maximum Number of Fish in a Grid",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-fish-in-a-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "make-array-empty": {
        "quesName": "Make Array Empty",
        "quesLink": "https://leetcode.com/problems/make-array-empty/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Greedy",
            "Binary Indexed Tree",
            "Segment Tree",
            "Sorting",
            "Ordered Set"
        ]
    },
    "determine-the-winner-of-a-bowling-game": {
        "quesName": "Determine the Winner of a Bowling Game",
        "quesLink": "https://leetcode.com/problems/determine-the-winner-of-a-bowling-game/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "first-completely-painted-row-or-column": {
        "quesName": "First Completely Painted Row or Column",
        "quesLink": "https://leetcode.com/problems/first-completely-painted-row-or-column/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix"
        ]
    },
    "minimum-cost-of-a-path-with-special-roads": {
        "quesName": "Minimum Cost of a Path With Special Roads",
        "quesLink": "https://leetcode.com/problems/minimum-cost-of-a-path-with-special-roads/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ]
    },
    "lexicographically-smallest-beautiful-string": {
        "quesName": "Lexicographically Smallest Beautiful String",
        "quesLink": "https://leetcode.com/problems/lexicographically-smallest-beautiful-string/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "counter-ii": {
        "quesName": "Counter II",
        "quesLink": "https://leetcode.com/problems/counter-ii/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "allow-one-function-call": {
        "quesName": "Allow One Function Call",
        "quesLink": "https://leetcode.com/problems/allow-one-function-call/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "create-hello-world-function": {
        "quesName": "Create Hello World Function",
        "quesLink": "https://leetcode.com/problems/create-hello-world-function/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "find-the-distinct-difference-array": {
        "quesName": "Find the Distinct Difference Array",
        "quesLink": "https://leetcode.com/problems/find-the-distinct-difference-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "frequency-tracker": {
        "quesName": "Frequency Tracker",
        "quesLink": "https://leetcode.com/problems/frequency-tracker/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Design"
        ]
    },
    "number-of-adjacent-elements-with-the-same-color": {
        "quesName": "Number of Adjacent Elements With the Same Color",
        "quesLink": "https://leetcode.com/problems/number-of-adjacent-elements-with-the-same-color/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "make-costs-of-paths-equal-in-a-binary-tree": {
        "quesName": "Make Costs of Paths Equal in a Binary Tree",
        "quesLink": "https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Tree",
            "Binary Tree"
        ]
    },
    "chunk-array": {
        "quesName": "Chunk Array",
        "quesLink": "https://leetcode.com/problems/chunk-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "number-of-senior-citizens": {
        "quesName": "Number of Senior Citizens",
        "quesLink": "https://leetcode.com/problems/number-of-senior-citizens/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "sum-in-a-matrix": {
        "quesName": "Sum in a Matrix",
        "quesLink": "https://leetcode.com/problems/sum-in-a-matrix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix",
            "Simulation"
        ]
    },
    "maximum-or": {
        "quesName": "Maximum OR",
        "quesLink": "https://leetcode.com/problems/maximum-or/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Bit Manipulation",
            "Prefix Sum"
        ]
    },
    "power-of-heroes": {
        "quesName": "Power of Heroes",
        "quesLink": "https://leetcode.com/problems/power-of-heroes/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Sorting",
            "Prefix Sum"
        ]
    },
    "find-the-losers-of-the-circular-game": {
        "quesName": "Find the Losers of the Circular Game",
        "quesLink": "https://leetcode.com/problems/find-the-losers-of-the-circular-game/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Simulation"
        ]
    },
    "neighboring-bitwise-xor": {
        "quesName": "Neighboring Bitwise XOR",
        "quesLink": "https://leetcode.com/problems/neighboring-bitwise-xor/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation"
        ]
    },
    "maximum-number-of-moves-in-a-grid": {
        "quesName": "Maximum Number of Moves in a Grid",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-moves-in-a-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ]
    },
    "count-the-number-of-complete-components": {
        "quesName": "Count the Number of Complete Components",
        "quesLink": "https://leetcode.com/problems/count-the-number-of-complete-components/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "call-function-with-custom-context": {
        "quesName": "Call Function with Custom Context",
        "quesLink": "https://leetcode.com/problems/call-function-with-custom-context/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "event-emitter": {
        "quesName": "Event Emitter",
        "quesLink": "https://leetcode.com/problems/event-emitter/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "array-wrapper": {
        "quesName": "Array Wrapper",
        "quesLink": "https://leetcode.com/problems/array-wrapper/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "minimum-string-length-after-removing-substrings": {
        "quesName": "Minimum String Length After Removing Substrings",
        "quesLink": "https://leetcode.com/problems/minimum-string-length-after-removing-substrings/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Stack",
            "Simulation"
        ]
    },
    "lexicographically-smallest-palindrome": {
        "quesName": "Lexicographically Smallest Palindrome",
        "quesLink": "https://leetcode.com/problems/lexicographically-smallest-palindrome/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "find-the-punishment-number-of-an-integer": {
        "quesName": "Find the Punishment Number of an Integer",
        "quesLink": "https://leetcode.com/problems/find-the-punishment-number-of-an-integer/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Backtracking"
        ]
    },
    "modify-graph-edge-weights": {
        "quesName": "Modify Graph Edge Weights",
        "quesLink": "https://leetcode.com/problems/modify-graph-edge-weights/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ]
    },
    "return-length-of-arguments-passed": {
        "quesName": "Return Length of Arguments Passed",
        "quesLink": "https://leetcode.com/problems/return-length-of-arguments-passed/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "to-be-or-not-to-be": {
        "quesName": "To Be Or Not To Be",
        "quesLink": "https://leetcode.com/problems/to-be-or-not-to-be/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "compact-object": {
        "quesName": "Compact Object",
        "quesLink": "https://leetcode.com/problems/compact-object/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "buy-two-chocolates": {
        "quesName": "Buy Two Chocolates",
        "quesLink": "https://leetcode.com/problems/buy-two-chocolates/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "extra-characters-in-a-string": {
        "quesName": "Extra Characters in a String",
        "quesLink": "https://leetcode.com/problems/extra-characters-in-a-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Trie"
        ]
    },
    "maximum-strength-of-a-group": {
        "quesName": "Maximum Strength of a Group",
        "quesLink": "https://leetcode.com/problems/maximum-strength-of-a-group/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Backtracking",
            "Greedy",
            "Sorting"
        ]
    },
    "greatest-common-divisor-traversal": {
        "quesName": "Greatest Common Divisor Traversal",
        "quesLink": "https://leetcode.com/problems/greatest-common-divisor-traversal/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Union Find",
            "Number Theory"
        ]
    },
    "remove-trailing-zeros-from-a-string": {
        "quesName": "Remove Trailing Zeros From a String",
        "quesLink": "https://leetcode.com/problems/remove-trailing-zeros-from-a-string/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "difference-of-number-of-distinct-values-on-diagonals": {
        "quesName": "Difference of Number of Distinct Values on Diagonals",
        "quesLink": "https://leetcode.com/problems/difference-of-number-of-distinct-values-on-diagonals/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Matrix"
        ]
    },
    "minimum-cost-to-make-all-characters-equal": {
        "quesName": "Minimum Cost to Make All Characters Equal",
        "quesLink": "https://leetcode.com/problems/minimum-cost-to-make-all-characters-equal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "maximum-strictly-increasing-cells-in-a-matrix": {
        "quesName": "Maximum Strictly Increasing Cells in a Matrix",
        "quesLink": "https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Memoization",
            "Sorting",
            "Matrix"
        ]
    },
    "timeout-cancellation": {
        "quesName": "Timeout Cancellation",
        "quesLink": "https://leetcode.com/problems/timeout-cancellation/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "minimize-string-length": {
        "quesName": "Minimize String Length",
        "quesLink": "https://leetcode.com/problems/minimize-string-length/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String"
        ]
    },
    "semi-ordered-permutation": {
        "quesName": "Semi-Ordered Permutation",
        "quesLink": "https://leetcode.com/problems/semi-ordered-permutation/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "sum-of-matrix-after-queries": {
        "quesName": "Sum of Matrix After Queries",
        "quesLink": "https://leetcode.com/problems/sum-of-matrix-after-queries/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "count-of-integers": {
        "quesName": "Count of Integers",
        "quesLink": "https://leetcode.com/problems/count-of-integers/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming"
        ]
    },
    "execute-asynchronous-functions-in-parallel": {
        "quesName": "Execute Asynchronous Functions in Parallel",
        "quesLink": "https://leetcode.com/problems/execute-asynchronous-functions-in-parallel/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "join-two-arrays-by-id": {
        "quesName": "Join Two Arrays by ID",
        "quesLink": "https://leetcode.com/problems/join-two-arrays-by-id/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "add-two-promises": {
        "quesName": "Add Two Promises",
        "quesLink": "https://leetcode.com/problems/add-two-promises/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "sort-by": {
        "quesName": "Sort By",
        "quesLink": "https://leetcode.com/problems/sort-by/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "interval-cancellation": {
        "quesName": "Interval Cancellation",
        "quesLink": "https://leetcode.com/problems/interval-cancellation/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "calculator-with-method-chaining": {
        "quesName": "Calculator with Method Chaining",
        "quesLink": "https://leetcode.com/problems/calculator-with-method-chaining/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "is-object-empty": {
        "quesName": "Is Object Empty",
        "quesLink": "https://leetcode.com/problems/is-object-empty/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "check-if-the-number-is-fascinating": {
        "quesName": "Check if The Number is Fascinating",
        "quesLink": "https://leetcode.com/problems/check-if-the-number-is-fascinating/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math"
        ]
    },
    "find-the-longest-semi-repetitive-substring": {
        "quesName": "Find the Longest Semi-Repetitive Substring",
        "quesLink": "https://leetcode.com/problems/find-the-longest-semi-repetitive-substring/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Sliding Window"
        ]
    },
    "movement-of-robots": {
        "quesName": "Movement of Robots",
        "quesLink": "https://leetcode.com/problems/movement-of-robots/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Brainteaser",
            "Sorting",
            "Prefix Sum"
        ]
    },
    "find-a-good-subset-of-the-matrix": {
        "quesName": "Find a Good Subset of the Matrix",
        "quesLink": "https://leetcode.com/problems/find-a-good-subset-of-the-matrix/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Bit Manipulation",
            "Matrix"
        ]
    },
    "neither-minimum-nor-maximum": {
        "quesName": "Neither Minimum nor Maximum",
        "quesLink": "https://leetcode.com/problems/neither-minimum-nor-maximum/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "lexicographically-smallest-string-after-substring-operation": {
        "quesName": "Lexicographically Smallest String After Substring Operation",
        "quesLink": "https://leetcode.com/problems/lexicographically-smallest-string-after-substring-operation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy"
        ]
    },
    "collecting-chocolates": {
        "quesName": "Collecting Chocolates",
        "quesLink": "https://leetcode.com/problems/collecting-chocolates/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Enumeration"
        ]
    },
    "maximum-sum-queries": {
        "quesName": "Maximum Sum Queries",
        "quesLink": "https://leetcode.com/problems/maximum-sum-queries/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Stack",
            "Binary Indexed Tree",
            "Segment Tree",
            "Sorting",
            "Monotonic Stack"
        ]
    },
    "total-distance-traveled": {
        "quesName": "Total Distance Traveled",
        "quesLink": "https://leetcode.com/problems/total-distance-traveled/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Simulation"
        ]
    },
    "find-the-value-of-the-partition": {
        "quesName": "Find the Value of the Partition",
        "quesLink": "https://leetcode.com/problems/find-the-value-of-the-partition/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting"
        ]
    },
    "special-permutations": {
        "quesName": "Special Permutations",
        "quesLink": "https://leetcode.com/problems/special-permutations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ]
    },
    "painting-the-walls": {
        "quesName": "Painting the Walls",
        "quesLink": "https://leetcode.com/problems/painting-the-walls/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "find-maximum-number-of-string-pairs": {
        "quesName": "Find Maximum Number of String Pairs",
        "quesLink": "https://leetcode.com/problems/find-maximum-number-of-string-pairs/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Simulation"
        ]
    },
    "construct-the-longest-new-string": {
        "quesName": "Construct the Longest New String",
        "quesLink": "https://leetcode.com/problems/construct-the-longest-new-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy",
            "Brainteaser"
        ]
    },
    "decremental-string-concatenation": {
        "quesName": "Decremental String Concatenation",
        "quesLink": "https://leetcode.com/problems/decremental-string-concatenation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming"
        ]
    },
    "count-zero-request-servers": {
        "quesName": "Count Zero Request Servers",
        "quesLink": "https://leetcode.com/problems/count-zero-request-servers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Sorting"
        ]
    },
    "number-of-beautiful-pairs": {
        "quesName": "Number of Beautiful Pairs",
        "quesLink": "https://leetcode.com/problems/number-of-beautiful-pairs/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ]
    },
    "minimum-operations-to-make-the-integer-zero": {
        "quesName": "Minimum Operations to Make the Integer Zero",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-make-the-integer-zero/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Bit Manipulation",
            "Brainteaser"
        ]
    },
    "ways-to-split-array-into-good-subarrays": {
        "quesName": "Ways to Split Array Into Good Subarrays",
        "quesLink": "https://leetcode.com/problems/ways-to-split-array-into-good-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Dynamic Programming"
        ]
    },
    "robot-collisions": {
        "quesName": "Robot Collisions",
        "quesLink": "https://leetcode.com/problems/robot-collisions/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Sorting",
            "Simulation"
        ]
    },
    "longest-even-odd-subarray-with-threshold": {
        "quesName": "Longest Even Odd Subarray With Threshold",
        "quesLink": "https://leetcode.com/problems/longest-even-odd-subarray-with-threshold/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sliding Window"
        ]
    },
    "prime-pairs-with-target-sum": {
        "quesName": "Prime Pairs With Target Sum",
        "quesLink": "https://leetcode.com/problems/prime-pairs-with-target-sum/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Enumeration",
            "Number Theory"
        ]
    },
    "continuous-subarrays": {
        "quesName": "Continuous Subarrays",
        "quesLink": "https://leetcode.com/problems/continuous-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Ordered Set",
            "Monotonic Queue"
        ]
    },
    "sum-of-imbalance-numbers-of-all-subarrays": {
        "quesName": "Sum of Imbalance Numbers of All Subarrays",
        "quesLink": "https://leetcode.com/problems/sum-of-imbalance-numbers-of-all-subarrays/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Ordered Set"
        ]
    },
    "longest-alternating-subarray": {
        "quesName": "Longest Alternating Subarray",
        "quesLink": "https://leetcode.com/problems/longest-alternating-subarray/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Enumeration"
        ]
    },
    "relocate-marbles": {
        "quesName": "Relocate Marbles",
        "quesLink": "https://leetcode.com/problems/relocate-marbles/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting",
            "Simulation"
        ]
    },
    "partition-string-into-minimum-beautiful-substrings": {
        "quesName": "Partition String Into Minimum Beautiful Substrings",
        "quesLink": "https://leetcode.com/problems/partition-string-into-minimum-beautiful-substrings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Backtracking"
        ]
    },
    "number-of-black-blocks": {
        "quesName": "Number of Black Blocks",
        "quesLink": "https://leetcode.com/problems/number-of-black-blocks/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Enumeration"
        ]
    },
    "find-the-maximum-achievable-number": {
        "quesName": "Find the Maximum Achievable Number",
        "quesLink": "https://leetcode.com/problems/find-the-maximum-achievable-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "maximum-number-of-jumps-to-reach-the-last-index": {
        "quesName": "Maximum Number of Jumps to Reach the Last Index",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-jumps-to-reach-the-last-index/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "longest-non-decreasing-subarray-from-two-arrays": {
        "quesName": "Longest Non-decreasing Subarray From Two Arrays",
        "quesLink": "https://leetcode.com/problems/longest-non-decreasing-subarray-from-two-arrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "apply-operations-to-make-all-array-elements-equal-to-zero": {
        "quesName": "Apply Operations to Make All Array Elements Equal to Zero",
        "quesLink": "https://leetcode.com/problems/apply-operations-to-make-all-array-elements-equal-to-zero/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Prefix Sum"
        ]
    },
    "sum-of-squares-of-special-elements": {
        "quesName": "Sum of Squares of Special Elements ",
        "quesLink": "https://leetcode.com/problems/sum-of-squares-of-special-elements/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Simulation"
        ]
    },
    "maximum-beauty-of-an-array-after-applying-operation": {
        "quesName": "Maximum Beauty of an Array After Applying Operation",
        "quesLink": "https://leetcode.com/problems/maximum-beauty-of-an-array-after-applying-operation/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Sorting"
        ]
    },
    "minimum-index-of-a-valid-split": {
        "quesName": "Minimum Index of a Valid Split",
        "quesLink": "https://leetcode.com/problems/minimum-index-of-a-valid-split/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ]
    },
    "length-of-the-longest-valid-substring": {
        "quesName": "Length of the Longest Valid Substring",
        "quesLink": "https://leetcode.com/problems/length-of-the-longest-valid-substring/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "String",
            "Sliding Window"
        ]
    },
    "check-if-array-is-good": {
        "quesName": "Check if Array is Good",
        "quesLink": "https://leetcode.com/problems/check-if-array-is-good/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sorting"
        ]
    },
    "sort-vowels-in-a-string": {
        "quesName": "Sort Vowels in a String",
        "quesLink": "https://leetcode.com/problems/sort-vowels-in-a-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Sorting"
        ]
    },
    "visit-array-positions-to-maximize-score": {
        "quesName": "Visit Array Positions to Maximize Score",
        "quesLink": "https://leetcode.com/problems/visit-array-positions-to-maximize-score/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "ways-to-express-an-integer-as-sum-of-powers": {
        "quesName": "Ways to Express an Integer as Sum of Powers",
        "quesLink": "https://leetcode.com/problems/ways-to-express-an-integer-as-sum-of-powers/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming"
        ]
    },
    "split-strings-by-separator": {
        "quesName": "Split Strings by Separator",
        "quesLink": "https://leetcode.com/problems/split-strings-by-separator/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "largest-element-in-an-array-after-merge-operations": {
        "quesName": "Largest Element in an Array after Merge Operations",
        "quesLink": "https://leetcode.com/problems/largest-element-in-an-array-after-merge-operations/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Prefix Sum"
        ]
    },
    "maximum-number-of-groups-with-increasing-length": {
        "quesName": "Maximum Number of Groups With Increasing Length",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-groups-with-increasing-length/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy",
            "Sorting"
        ]
    },
    "count-paths-that-can-form-a-palindrome-in-a-tree": {
        "quesName": "Count Paths That Can Form a Palindrome in a Tree",
        "quesLink": "https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Bit Manipulation",
            "Tree",
            "Depth-First Search",
            "Bitmask"
        ]
    },
    "number-of-employees-who-met-the-target": {
        "quesName": "Number of Employees Who Met the Target",
        "quesLink": "https://leetcode.com/problems/number-of-employees-who-met-the-target/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Enumeration"
        ]
    },
    "count-complete-subarrays-in-an-array": {
        "quesName": "Count Complete Subarrays in an Array",
        "quesLink": "https://leetcode.com/problems/count-complete-subarrays-in-an-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ]
    },
    "shortest-string-that-contains-three-strings": {
        "quesName": "Shortest String That Contains Three Strings",
        "quesLink": "https://leetcode.com/problems/shortest-string-that-contains-three-strings/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Greedy",
            "Enumeration"
        ]
    },
    "count-stepping-numbers-in-range": {
        "quesName": "Count Stepping Numbers in Range",
        "quesLink": "https://leetcode.com/problems/count-stepping-numbers-in-range/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "account-balance-after-rounded-purchase": {
        "quesName": "Account Balance After Rounded Purchase",
        "quesLink": "https://leetcode.com/problems/account-balance-after-rounded-purchase/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "insert-greatest-common-divisors-in-linked-list": {
        "quesName": "Insert Greatest Common Divisors in Linked List",
        "quesLink": "https://leetcode.com/problems/insert-greatest-common-divisors-in-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Linked List",
            "Math"
        ]
    },
    "minimum-seconds-to-equalize-a-circular-array": {
        "quesName": "Minimum Seconds to Equalize a Circular Array",
        "quesLink": "https://leetcode.com/problems/minimum-seconds-to-equalize-a-circular-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy"
        ]
    },
    "minimum-time-to-make-array-sum-at-most-x": {
        "quesName": "Minimum Time to Make Array Sum At Most x",
        "quesLink": "https://leetcode.com/problems/minimum-time-to-make-array-sum-at-most-x/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "faulty-keyboard": {
        "quesName": "Faulty Keyboard",
        "quesLink": "https://leetcode.com/problems/faulty-keyboard/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Simulation"
        ]
    },
    "check-if-it-is-possible-to-split-array": {
        "quesName": "Check if it is Possible to Split Array",
        "quesLink": "https://leetcode.com/problems/check-if-it-is-possible-to-split-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "find-the-safest-path-in-a-grid": {
        "quesName": "Find the Safest Path in a Grid",
        "quesLink": "https://leetcode.com/problems/find-the-safest-path-in-a-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ]
    },
    "maximum-elegance-of-a-k-length-subsequence": {
        "quesName": "Maximum Elegance of a K-Length Subsequence",
        "quesLink": "https://leetcode.com/problems/maximum-elegance-of-a-k-length-subsequence/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ]
    },
    "max-pair-sum-in-an-array": {
        "quesName": "Max Pair Sum in an Array",
        "quesLink": "https://leetcode.com/problems/max-pair-sum-in-an-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "double-a-number-represented-as-a-linked-list": {
        "quesName": "Double a Number Represented as a Linked List",
        "quesLink": "https://leetcode.com/problems/double-a-number-represented-as-a-linked-list/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Linked List",
            "Math",
            "Stack"
        ]
    },
    "minimum-absolute-difference-between-elements-with-constraint": {
        "quesName": "Minimum Absolute Difference Between Elements With Constraint",
        "quesLink": "https://leetcode.com/problems/minimum-absolute-difference-between-elements-with-constraint/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Ordered Set"
        ]
    },
    "apply-operations-to-maximize-score": {
        "quesName": "Apply Operations to Maximize Score",
        "quesLink": "https://leetcode.com/problems/apply-operations-to-maximize-score/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Stack",
            "Greedy",
            "Monotonic Stack",
            "Number Theory"
        ]
    },
    "count-pairs-whose-sum-is-less-than-target": {
        "quesName": "Count Pairs Whose Sum is Less than Target",
        "quesLink": "https://leetcode.com/problems/count-pairs-whose-sum-is-less-than-target/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Two Pointers",
            "Sorting"
        ]
    },
    "make-string-a-subsequence-using-cyclic-increments": {
        "quesName": "Make String a Subsequence Using Cyclic Increments",
        "quesLink": "https://leetcode.com/problems/make-string-a-subsequence-using-cyclic-increments/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Two Pointers",
            "String"
        ]
    },
    "sorting-three-groups": {
        "quesName": "Sorting Three Groups",
        "quesLink": "https://leetcode.com/problems/sorting-three-groups/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming"
        ]
    },
    "number-of-beautiful-integers-in-the-range": {
        "quesName": "Number of Beautiful Integers in the Range",
        "quesLink": "https://leetcode.com/problems/number-of-beautiful-integers-in-the-range/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming"
        ]
    },
    "check-if-a-string-is-an-acronym-of-words": {
        "quesName": "Check if a String Is an Acronym of Words",
        "quesLink": "https://leetcode.com/problems/check-if-a-string-is-an-acronym-of-words/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String"
        ]
    },
    "determine-the-minimum-sum-of-a-k-avoiding-array": {
        "quesName": "Determine the Minimum Sum of a k-avoiding Array",
        "quesLink": "https://leetcode.com/problems/determine-the-minimum-sum-of-a-k-avoiding-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "maximize-the-profit-as-the-salesman": {
        "quesName": "Maximize the Profit as the Salesman",
        "quesLink": "https://leetcode.com/problems/maximize-the-profit-as-the-salesman/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ]
    },
    "find-the-longest-equal-subarray": {
        "quesName": "Find the Longest Equal Subarray",
        "quesLink": "https://leetcode.com/problems/find-the-longest-equal-subarray/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Sliding Window"
        ]
    },
    "furthest-point-from-origin": {
        "quesName": "Furthest Point From Origin",
        "quesLink": "https://leetcode.com/problems/furthest-point-from-origin/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Counting"
        ]
    },
    "find-the-minimum-possible-sum-of-a-beautiful-array": {
        "quesName": "Find the Minimum Possible Sum of a Beautiful Array",
        "quesLink": "https://leetcode.com/problems/find-the-minimum-possible-sum-of-a-beautiful-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Greedy"
        ]
    },
    "minimum-operations-to-form-subsequence-with-target-sum": {
        "quesName": "Minimum Operations to Form Subsequence With Target Sum",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-form-subsequence-with-target-sum/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Bit Manipulation"
        ]
    },
    "maximize-value-of-function-in-a-ball-passing-game": {
        "quesName": "Maximize Value of Function in a Ball Passing Game",
        "quesLink": "https://leetcode.com/problems/maximize-value-of-function-in-a-ball-passing-game/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation"
        ]
    },
    "check-if-strings-can-be-made-equal-with-operations-i": {
        "quesName": "Check if Strings Can be Made Equal With Operations I",
        "quesLink": "https://leetcode.com/problems/check-if-strings-can-be-made-equal-with-operations-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String"
        ]
    },
    "check-if-strings-can-be-made-equal-with-operations-ii": {
        "quesName": "Check if Strings Can be Made Equal With Operations II",
        "quesLink": "https://leetcode.com/problems/check-if-strings-can-be-made-equal-with-operations-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "String",
            "Sorting"
        ]
    },
    "maximum-sum-of-almost-unique-subarray": {
        "quesName": "Maximum Sum of Almost Unique Subarray",
        "quesLink": "https://leetcode.com/problems/maximum-sum-of-almost-unique-subarray/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ]
    },
    "count-k-subsequences-of-a-string-with-maximum-beauty": {
        "quesName": "Count K-Subsequences of a String With Maximum Beauty",
        "quesLink": "https://leetcode.com/problems/count-k-subsequences-of-a-string-with-maximum-beauty/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "String",
            "Greedy",
            "Combinatorics"
        ]
    },
    "count-symmetric-integers": {
        "quesName": "  Count Symmetric Integers",
        "quesLink": "https://leetcode.com/problems/count-symmetric-integers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Enumeration"
        ]
    },
    "minimum-operations-to-make-a-special-number": {
        "quesName": "Minimum Operations to Make a Special Number",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-make-a-special-number/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Greedy",
            "Enumeration"
        ]
    },
    "count-of-interesting-subarrays": {
        "quesName": "Count of Interesting Subarrays",
        "quesLink": "https://leetcode.com/problems/count-of-interesting-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ]
    },
    "minimum-edge-weight-equilibrium-queries-in-a-tree": {
        "quesName": "Minimum Edge Weight Equilibrium Queries in a Tree",
        "quesLink": "https://leetcode.com/problems/minimum-edge-weight-equilibrium-queries-in-a-tree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Tree",
            "Graph",
            "Strongly Connected Component"
        ]
    },
    "points-that-intersect-with-cars": {
        "quesName": "Points That Intersect With Cars",
        "quesLink": "https://leetcode.com/problems/points-that-intersect-with-cars/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Hash Table",
            "Math",
            "Prefix Sum"
        ]
    },
    "determine-if-a-cell-is-reachable-at-a-given-time": {
        "quesName": "Determine if a Cell Is Reachable at a Given Time",
        "quesLink": "https://leetcode.com/problems/determine-if-a-cell-is-reachable-at-a-given-time/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "minimum-moves-to-spread-stones-over-grid": {
        "quesName": "Minimum Moves to Spread Stones Over Grid",
        "quesLink": "https://leetcode.com/problems/minimum-moves-to-spread-stones-over-grid/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search",
            "Matrix"
        ]
    },
    "string-transformation": {
        "quesName": "String Transformation",
        "quesLink": "https://leetcode.com/problems/string-transformation/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Dynamic Programming",
            "String Matching"
        ]
    },
    "minimum-right-shifts-to-sort-the-array": {
        "quesName": "Minimum Right Shifts to Sort the Array",
        "quesLink": "https://leetcode.com/problems/minimum-right-shifts-to-sort-the-array/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "minimum-array-length-after-pair-removals": {
        "quesName": "Minimum Array Length After Pair Removals",
        "quesLink": "https://leetcode.com/problems/minimum-array-length-after-pair-removals/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Counting"
        ]
    },
    "count-pairs-of-points-with-distance-k": {
        "quesName": "Count Pairs of Points With Distance k",
        "quesLink": "https://leetcode.com/problems/count-pairs-of-points-with-distance-k/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Bit Manipulation"
        ]
    },
    "minimum-edge-reversals-so-every-node-is-reachable": {
        "quesName": "Minimum Edge Reversals So Every Node Is Reachable",
        "quesLink": "https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ]
    },
    "sum-of-values-at-indices-with-k-set-bits": {
        "quesName": "Sum of Values at Indices With K Set Bits",
        "quesLink": "https://leetcode.com/problems/sum-of-values-at-indices-with-k-set-bits/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Bit Manipulation"
        ]
    },
    "happy-students": {
        "quesName": "Happy Students",
        "quesLink": "https://leetcode.com/problems/happy-students/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Sorting",
            "Enumeration"
        ]
    },
    "maximum-number-of-alloys": {
        "quesName": "Maximum Number of Alloys",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-alloys/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Binary Search"
        ]
    },
    "maximum-element-sum-of-a-complete-subset-of-indices": {
        "quesName": "Maximum Element-Sum of a Complete Subset of Indices",
        "quesLink": "https://leetcode.com/problems/maximum-element-sum-of-a-complete-subset-of-indices/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Math",
            "Number Theory"
        ]
    },
    "maximum-odd-binary-number": {
        "quesName": "Maximum Odd Binary Number",
        "quesLink": "https://leetcode.com/problems/maximum-odd-binary-number/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "String",
            "Greedy"
        ]
    },
    "beautiful-towers-i": {
        "quesName": "Beautiful Towers I",
        "quesLink": "https://leetcode.com/problems/beautiful-towers-i/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "beautiful-towers-ii": {
        "quesName": "Beautiful Towers II",
        "quesLink": "https://leetcode.com/problems/beautiful-towers-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ]
    },
    "count-valid-paths-in-a-tree": {
        "quesName": "Count Valid Paths in a Tree",
        "quesLink": "https://leetcode.com/problems/count-valid-paths-in-a-tree/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math",
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Number Theory"
        ]
    },
    "minimum-operations-to-collect-elements": {
        "quesName": "Minimum Operations to Collect Elements",
        "quesLink": "https://leetcode.com/problems/minimum-operations-to-collect-elements/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table"
        ]
    },
    "minimum-number-of-operations-to-make-array-empty": {
        "quesName": "Minimum Number of Operations to Make Array Empty",
        "quesLink": "https://leetcode.com/problems/minimum-number-of-operations-to-make-array-empty/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ]
    },
    "split-array-into-maximum-number-of-subarrays": {
        "quesName": "Split Array Into Maximum Number of Subarrays",
        "quesLink": "https://leetcode.com/problems/split-array-into-maximum-number-of-subarrays/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Bit Manipulation"
        ]
    },
    "maximum-number-of-k-divisible-components": {
        "quesName": "Maximum Number of K-Divisible Components",
        "quesLink": "https://leetcode.com/problems/maximum-number-of-k-divisible-components/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search"
        ]
    },
    "maximum-value-of-an-ordered-triplet-i": {
        "quesName": "Maximum Value of an Ordered Triplet I",
        "quesLink": "https://leetcode.com/problems/maximum-value-of-an-ordered-triplet-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "maximum-value-of-an-ordered-triplet-ii": {
        "quesName": "Maximum Value of an Ordered Triplet II",
        "quesLink": "https://leetcode.com/problems/maximum-value-of-an-ordered-triplet-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "minimum-size-subarray-in-infinite-array": {
        "quesName": "Minimum Size Subarray in Infinite Array",
        "quesLink": "https://leetcode.com/problems/minimum-size-subarray-in-infinite-array/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Prefix Sum"
        ]
    },
    "count-visited-nodes-in-a-directed-graph": {
        "quesName": "Count Visited Nodes in a Directed Graph",
        "quesLink": "https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Dynamic Programming",
            "Graph",
            "Memoization"
        ]
    },
    "create-a-dataframe-from-list": {
        "quesName": "Create a DataFrame from List",
        "quesLink": "https://leetcode.com/problems/create-a-dataframe-from-list/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "get-the-size-of-a-dataframe": {
        "quesName": "Get the Size of a DataFrame",
        "quesLink": "https://leetcode.com/problems/get-the-size-of-a-dataframe/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "display-the-first-three-rows": {
        "quesName": "Display the First Three Rows",
        "quesLink": "https://leetcode.com/problems/display-the-first-three-rows/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "select-data": {
        "quesName": "Select Data",
        "quesLink": "https://leetcode.com/problems/select-data/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "create-a-new-column": {
        "quesName": "Create a New Column",
        "quesLink": "https://leetcode.com/problems/create-a-new-column/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "drop-duplicate-rows": {
        "quesName": "Drop Duplicate Rows",
        "quesLink": "https://leetcode.com/problems/drop-duplicate-rows/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "drop-missing-data": {
        "quesName": "Drop Missing Data",
        "quesLink": "https://leetcode.com/problems/drop-missing-data/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "modify-columns": {
        "quesName": "Modify Columns",
        "quesLink": "https://leetcode.com/problems/modify-columns/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "rename-columns": {
        "quesName": "Rename Columns",
        "quesLink": "https://leetcode.com/problems/rename-columns/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "change-data-type": {
        "quesName": "Change Data Type",
        "quesLink": "https://leetcode.com/problems/change-data-type/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "fill-missing-data": {
        "quesName": "Fill Missing Data",
        "quesLink": "https://leetcode.com/problems/fill-missing-data/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "reshape-data-concatenate": {
        "quesName": "Reshape Data: Concatenate",
        "quesLink": "https://leetcode.com/problems/reshape-data-concatenate/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "reshape-data-pivot": {
        "quesName": "Reshape Data: Pivot",
        "quesLink": "https://leetcode.com/problems/reshape-data-pivot/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "reshape-data-melt": {
        "quesName": "Reshape Data: Melt",
        "quesLink": "https://leetcode.com/problems/reshape-data-melt/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "method-chaining": {
        "quesName": "Method Chaining",
        "quesLink": "https://leetcode.com/problems/method-chaining/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": []
    },
    "divisible-and-non-divisible-sums-difference": {
        "quesName": "Divisible and Non-divisible Sums Difference",
        "quesLink": "https://leetcode.com/problems/divisible-and-non-divisible-sums-difference/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Math"
        ]
    },
    "minimum-processing-time": {
        "quesName": "Minimum Processing Time",
        "quesLink": "https://leetcode.com/problems/minimum-processing-time/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Greedy",
            "Sorting"
        ]
    },
    "apply-operations-to-make-two-strings-equal": {
        "quesName": "Apply Operations to Make Two Strings Equal",
        "quesLink": "https://leetcode.com/problems/apply-operations-to-make-two-strings-equal/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Dynamic Programming"
        ]
    },
    "apply-operations-on-array-to-maximize-sum-of-squares": {
        "quesName": "Apply Operations on Array to Maximize Sum of Squares",
        "quesLink": "https://leetcode.com/problems/apply-operations-on-array-to-maximize-sum-of-squares/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Greedy",
            "Bit Manipulation"
        ]
    },
    "last-visited-integers": {
        "quesName": "Last Visited Integers",
        "quesLink": "https://leetcode.com/problems/last-visited-integers/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Simulation"
        ]
    },
    "longest-unequal-adjacent-groups-subsequence-i": {
        "quesName": "Longest Unequal Adjacent Groups Subsequence I",
        "quesLink": "https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-i/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming",
            "Greedy"
        ]
    },
    "longest-unequal-adjacent-groups-subsequence-ii": {
        "quesName": "Longest Unequal Adjacent Groups Subsequence II",
        "quesLink": "https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "String",
            "Dynamic Programming"
        ]
    },
    "count-of-sub-multisets-with-bounded-sum": {
        "quesName": "Count of Sub-Multisets With Bounded Sum",
        "quesLink": "https://leetcode.com/problems/count-of-sub-multisets-with-bounded-sum/",
        "specialTag": "Hard",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Hash Table",
            "Dynamic Programming",
            "Sliding Window"
        ]
    },
    "find-indices-with-index-and-value-difference-i": {
        "quesName": "Find Indices With Index and Value Difference I",
        "quesLink": "https://leetcode.com/problems/find-indices-with-index-and-value-difference-i/",
        "specialTag": "Easy",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "shortest-and-lexicographically-smallest-beautiful-string": {
        "quesName": "Shortest and Lexicographically Smallest Beautiful String",
        "quesLink": "https://leetcode.com/problems/shortest-and-lexicographically-smallest-beautiful-string/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "String",
            "Sliding Window"
        ]
    },
    "find-indices-with-index-and-value-difference-ii": {
        "quesName": "Find Indices With Index and Value Difference II",
        "quesLink": "https://leetcode.com/problems/find-indices-with-index-and-value-difference-ii/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array"
        ]
    },
    "construct-product-matrix": {
        "quesName": "Construct Product Matrix",
        "quesLink": "https://leetcode.com/problems/construct-product-matrix/",
        "specialTag": "Medium",
        "completed" : "False",
        "marked" : "False",
        "tags": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ]
    }
}